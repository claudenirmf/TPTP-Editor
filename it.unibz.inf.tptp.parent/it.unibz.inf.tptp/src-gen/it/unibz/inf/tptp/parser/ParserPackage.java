/**
 * generated by Xtext 2.12.0
 */
package it.unibz.inf.tptp.parser;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see it.unibz.inf.tptp.parser.ParserFactory
 * @model kind="package"
 * @generated
 */
public interface ParserPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "parser";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.unibz.it/inf/tptp/TPTP";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "parser";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  ParserPackage eINSTANCE = it.unibz.inf.tptp.parser.impl.ParserPackageImpl.init();

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.ModelImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>TPTP input</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__TPTP_INPUT = 0;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Fof_inputImpl <em>Fof input</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Fof_inputImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getFof_input()
   * @generated
   */
  int FOF_INPUT = 2;

  /**
   * The number of structural features of the '<em>Fof input</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_INPUT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.IncludeImpl <em>Include</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.IncludeImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getInclude()
   * @generated
   */
  int INCLUDE = 1;

  /**
   * The feature id for the '<em><b>Path</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INCLUDE__PATH = FOF_INPUT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Include</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INCLUDE_FEATURE_COUNT = FOF_INPUT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Fof_rootImpl <em>Fof root</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Fof_rootImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getFof_root()
   * @generated
   */
  int FOF_ROOT = 3;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_ROOT__NAME = FOF_INPUT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Formula role</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_ROOT__FORMULA_ROLE = FOF_INPUT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_ROOT__EXP = FOF_INPUT_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Fof root</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_ROOT_FEATURE_COUNT = FOF_INPUT_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Fof_expressionImpl <em>Fof expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Fof_expressionImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getFof_expression()
   * @generated
   */
  int FOF_EXPRESSION = 4;

  /**
   * The feature id for the '<em><b>Fof atom</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_EXPRESSION__FOF_ATOM = 0;

  /**
   * The feature id for the '<em><b>Fof negation</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_EXPRESSION__FOF_NEGATION = 1;

  /**
   * The feature id for the '<em><b>Fof exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_EXPRESSION__FOF_EXP = 2;

  /**
   * The feature id for the '<em><b>Fof quantifier</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_EXPRESSION__FOF_QUANTIFIER = 3;

  /**
   * The feature id for the '<em><b>Fof param</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_EXPRESSION__FOF_PARAM = 4;

  /**
   * The number of structural features of the '<em>Fof expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_EXPRESSION_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Fof_atomImpl <em>Fof atom</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Fof_atomImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getFof_atom()
   * @generated
   */
  int FOF_ATOM = 5;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_ATOM__NAME = 0;

  /**
   * The number of structural features of the '<em>Fof atom</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_ATOM_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Fof_constantImpl <em>Fof constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Fof_constantImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getFof_constant()
   * @generated
   */
  int FOF_CONSTANT = 6;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_CONSTANT__NAME = FOF_ATOM__NAME;

  /**
   * The feature id for the '<em><b>Fof param</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_CONSTANT__FOF_PARAM = FOF_ATOM_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Fof constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_CONSTANT_FEATURE_COUNT = FOF_ATOM_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Fof_varImpl <em>Fof var</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Fof_varImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getFof_var()
   * @generated
   */
  int FOF_VAR = 7;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_VAR__NAME = FOF_ATOM__NAME;

  /**
   * The number of structural features of the '<em>Fof var</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_VAR_FEATURE_COUNT = FOF_ATOM_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Fof_variable_listImpl <em>Fof variable list</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Fof_variable_listImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getFof_variable_list()
   * @generated
   */
  int FOF_VARIABLE_LIST = 8;

  /**
   * The feature id for the '<em><b>Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_VARIABLE_LIST__PARAMS = 0;

  /**
   * The number of structural features of the '<em>Fof variable list</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_VARIABLE_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Tff_inputImpl <em>Tff input</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Tff_inputImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getTff_input()
   * @generated
   */
  int TFF_INPUT = 9;

  /**
   * The number of structural features of the '<em>Tff input</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_INPUT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Tff_rootImpl <em>Tff root</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Tff_rootImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getTff_root()
   * @generated
   */
  int TFF_ROOT = 10;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_ROOT__NAME = TFF_INPUT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Formula role</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_ROOT__FORMULA_ROLE = TFF_INPUT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_ROOT__EXP = TFF_INPUT_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Def</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_ROOT__DEF = TFF_INPUT_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Tff root</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_ROOT_FEATURE_COUNT = TFF_INPUT_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Tff_formula_type_definitionImpl <em>Tff formula type definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Tff_formula_type_definitionImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getTff_formula_type_definition()
   * @generated
   */
  int TFF_FORMULA_TYPE_DEFINITION = 11;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_FORMULA_TYPE_DEFINITION__NAME = 0;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_FORMULA_TYPE_DEFINITION__EXP = 1;

  /**
   * The number of structural features of the '<em>Tff formula type definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_FORMULA_TYPE_DEFINITION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Tff_type_expressionImpl <em>Tff type expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Tff_type_expressionImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getTff_type_expression()
   * @generated
   */
  int TFF_TYPE_EXPRESSION = 12;

  /**
   * The number of structural features of the '<em>Tff type expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_TYPE_EXPRESSION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Tff_type_atomImpl <em>Tff type atom</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Tff_type_atomImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getTff_type_atom()
   * @generated
   */
  int TFF_TYPE_ATOM = 13;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_TYPE_ATOM__NAME = TFF_TYPE_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Tff type atom</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_TYPE_ATOM_FEATURE_COUNT = TFF_TYPE_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Tff_type_constantImpl <em>Tff type constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Tff_type_constantImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getTff_type_constant()
   * @generated
   */
  int TFF_TYPE_CONSTANT = 14;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_TYPE_CONSTANT__NAME = TFF_TYPE_ATOM__NAME;

  /**
   * The feature id for the '<em><b>Param</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_TYPE_CONSTANT__PARAM = TFF_TYPE_ATOM_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Tff type constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_TYPE_CONSTANT_FEATURE_COUNT = TFF_TYPE_ATOM_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Tff_expressionImpl <em>Tff expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Tff_expressionImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getTff_expression()
   * @generated
   */
  int TFF_EXPRESSION = 15;

  /**
   * The feature id for the '<em><b>Atom</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_EXPRESSION__ATOM = 0;

  /**
   * The feature id for the '<em><b>Negation</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_EXPRESSION__NEGATION = 1;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_EXPRESSION__EXP = 2;

  /**
   * The feature id for the '<em><b>Quantifier</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_EXPRESSION__QUANTIFIER = 3;

  /**
   * The feature id for the '<em><b>Param</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_EXPRESSION__PARAM = 4;

  /**
   * The number of structural features of the '<em>Tff expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_EXPRESSION_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Tff_atomImpl <em>Tff atom</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Tff_atomImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getTff_atom()
   * @generated
   */
  int TFF_ATOM = 16;

  /**
   * The number of structural features of the '<em>Tff atom</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_ATOM_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Tff_constantImpl <em>Tff constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Tff_constantImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getTff_constant()
   * @generated
   */
  int TFF_CONSTANT = 17;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_CONSTANT__NAME = TFF_ATOM_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Param</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_CONSTANT__PARAM = TFF_ATOM_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Top</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_CONSTANT__TOP = TFF_ATOM_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Bottom</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_CONSTANT__BOTTOM = TFF_ATOM_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Tff constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_CONSTANT_FEATURE_COUNT = TFF_ATOM_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Tff_predefined_function_2_argsImpl <em>Tff predefined function 2args</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Tff_predefined_function_2_argsImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getTff_predefined_function_2_args()
   * @generated
   */
  int TFF_PREDEFINED_FUNCTION_2ARGS = 18;

  /**
   * The feature id for the '<em><b>Func</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_PREDEFINED_FUNCTION_2ARGS__FUNC = TFF_ATOM_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Param</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_PREDEFINED_FUNCTION_2ARGS__PARAM = TFF_ATOM_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Tff predefined function 2args</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_PREDEFINED_FUNCTION_2ARGS_FEATURE_COUNT = TFF_ATOM_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Tff_varImpl <em>Tff var</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Tff_varImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getTff_var()
   * @generated
   */
  int TFF_VAR = 19;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_VAR__NAME = TFF_TYPE_ATOM__NAME;

  /**
   * The number of structural features of the '<em>Tff var</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_VAR_FEATURE_COUNT = TFF_TYPE_ATOM_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Tff_var_declarationImpl <em>Tff var declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Tff_var_declarationImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getTff_var_declaration()
   * @generated
   */
  int TFF_VAR_DECLARATION = 20;

  /**
   * The feature id for the '<em><b>Var</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_VAR_DECLARATION__VAR = 0;

  /**
   * The feature id for the '<em><b>Vartype</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_VAR_DECLARATION__VARTYPE = 1;

  /**
   * The number of structural features of the '<em>Tff var declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_VAR_DECLARATION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Tff_variable_listImpl <em>Tff variable list</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Tff_variable_listImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getTff_variable_list()
   * @generated
   */
  int TFF_VARIABLE_LIST = 21;

  /**
   * The feature id for the '<em><b>Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_VARIABLE_LIST__PARAMS = 0;

  /**
   * The number of structural features of the '<em>Tff variable list</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_VARIABLE_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Cnf_inputImpl <em>Cnf input</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Cnf_inputImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getCnf_input()
   * @generated
   */
  int CNF_INPUT = 22;

  /**
   * The number of structural features of the '<em>Cnf input</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_INPUT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Cnf_rootImpl <em>Cnf root</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Cnf_rootImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getCnf_root()
   * @generated
   */
  int CNF_ROOT = 23;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_ROOT__NAME = CNF_INPUT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Formula role</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_ROOT__FORMULA_ROLE = CNF_INPUT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_ROOT__EXP = CNF_INPUT_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Cnf root</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_ROOT_FEATURE_COUNT = CNF_INPUT_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Cnf_formula_type_definitionImpl <em>Cnf formula type definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Cnf_formula_type_definitionImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getCnf_formula_type_definition()
   * @generated
   */
  int CNF_FORMULA_TYPE_DEFINITION = 24;

  /**
   * The feature id for the '<em><b>Disjunction</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_FORMULA_TYPE_DEFINITION__DISJUNCTION = 0;

  /**
   * The number of structural features of the '<em>Cnf formula type definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_FORMULA_TYPE_DEFINITION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Cnf_orImpl <em>Cnf or</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Cnf_orImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getCnf_or()
   * @generated
   */
  int CNF_OR = 25;

  /**
   * The feature id for the '<em><b>Or</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_OR__OR = 0;

  /**
   * The number of structural features of the '<em>Cnf or</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_OR_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Cnf_notImpl <em>Cnf not</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Cnf_notImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getCnf_not()
   * @generated
   */
  int CNF_NOT = 26;

  /**
   * The feature id for the '<em><b>Negated</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_NOT__NEGATED = 0;

  /**
   * The feature id for the '<em><b>Literal</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_NOT__LITERAL = 1;

  /**
   * The number of structural features of the '<em>Cnf not</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_NOT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Cnf_equalityImpl <em>Cnf equality</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Cnf_equalityImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getCnf_equality()
   * @generated
   */
  int CNF_EQUALITY = 27;

  /**
   * The feature id for the '<em><b>Exp L</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_EQUALITY__EXP_L = 0;

  /**
   * The feature id for the '<em><b>Eq</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_EQUALITY__EQ = 1;

  /**
   * The feature id for the '<em><b>Exp R</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_EQUALITY__EXP_R = 2;

  /**
   * The number of structural features of the '<em>Cnf equality</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_EQUALITY_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Cnf_expressionImpl <em>Cnf expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Cnf_expressionImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getCnf_expression()
   * @generated
   */
  int CNF_EXPRESSION = 28;

  /**
   * The feature id for the '<em><b>Cnf exp</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_EXPRESSION__CNF_EXP = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_EXPRESSION__NAME = 1;

  /**
   * The number of structural features of the '<em>Cnf expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_EXPRESSION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Cnf_constantImpl <em>Cnf constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Cnf_constantImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getCnf_constant()
   * @generated
   */
  int CNF_CONSTANT = 29;

  /**
   * The feature id for the '<em><b>Cnf exp</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_CONSTANT__CNF_EXP = CNF_EXPRESSION__CNF_EXP;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_CONSTANT__NAME = CNF_EXPRESSION__NAME;

  /**
   * The feature id for the '<em><b>Param</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_CONSTANT__PARAM = CNF_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Cnf constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_CONSTANT_FEATURE_COUNT = CNF_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Cnf_varImpl <em>Cnf var</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Cnf_varImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getCnf_var()
   * @generated
   */
  int CNF_VAR = 30;

  /**
   * The feature id for the '<em><b>Cnf exp</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_VAR__CNF_EXP = CNF_EXPRESSION__CNF_EXP;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_VAR__NAME = CNF_EXPRESSION__NAME;

  /**
   * The number of structural features of the '<em>Cnf var</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_VAR_FEATURE_COUNT = CNF_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Thf_inputImpl <em>Thf input</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Thf_inputImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getThf_input()
   * @generated
   */
  int THF_INPUT = 31;

  /**
   * The number of structural features of the '<em>Thf input</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_INPUT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Thf_rootImpl <em>Thf root</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Thf_rootImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getThf_root()
   * @generated
   */
  int THF_ROOT = 32;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_ROOT__NAME = THF_INPUT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Formula role</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_ROOT__FORMULA_ROLE = THF_INPUT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Def</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_ROOT__DEF = THF_INPUT_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Thf exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_ROOT__THF_EXP = THF_INPUT_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>Thf root</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_ROOT_FEATURE_COUNT = THF_INPUT_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Thf_formula_type_definitionImpl <em>Thf formula type definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Thf_formula_type_definitionImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getThf_formula_type_definition()
   * @generated
   */
  int THF_FORMULA_TYPE_DEFINITION = 33;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_FORMULA_TYPE_DEFINITION__NAME = 0;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_FORMULA_TYPE_DEFINITION__EXP = 1;

  /**
   * The number of structural features of the '<em>Thf formula type definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_FORMULA_TYPE_DEFINITION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Thf_type_expressionImpl <em>Thf type expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Thf_type_expressionImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getThf_type_expression()
   * @generated
   */
  int THF_TYPE_EXPRESSION = 34;

  /**
   * The number of structural features of the '<em>Thf type expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_TYPE_EXPRESSION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Thf_type_atomImpl <em>Thf type atom</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Thf_type_atomImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getThf_type_atom()
   * @generated
   */
  int THF_TYPE_ATOM = 35;

  /**
   * The number of structural features of the '<em>Thf type atom</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_TYPE_ATOM_FEATURE_COUNT = THF_TYPE_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Thf_type_constantImpl <em>Thf type constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Thf_type_constantImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getThf_type_constant()
   * @generated
   */
  int THF_TYPE_CONSTANT = 36;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_TYPE_CONSTANT__NAME = THF_TYPE_ATOM_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Thf type constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_TYPE_CONSTANT_FEATURE_COUNT = THF_TYPE_ATOM_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Thf_expressionImpl <em>Thf expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Thf_expressionImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getThf_expression()
   * @generated
   */
  int THF_EXPRESSION = 37;

  /**
   * The feature id for the '<em><b>Thf atom</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_EXPRESSION__THF_ATOM = 0;

  /**
   * The feature id for the '<em><b>Thf negation</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_EXPRESSION__THF_NEGATION = 1;

  /**
   * The feature id for the '<em><b>Thf exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_EXPRESSION__THF_EXP = 2;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_EXPRESSION__OP = 3;

  /**
   * The number of structural features of the '<em>Thf expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_EXPRESSION_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Thf_atomImpl <em>Thf atom</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Thf_atomImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getThf_atom()
   * @generated
   */
  int THF_ATOM = 38;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_ATOM__NAME = 0;

  /**
   * The number of structural features of the '<em>Thf atom</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_ATOM_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Thf_constantImpl <em>Thf constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Thf_constantImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getThf_constant()
   * @generated
   */
  int THF_CONSTANT = 39;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_CONSTANT__NAME = THF_ATOM__NAME;

  /**
   * The feature id for the '<em><b>Thf param</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_CONSTANT__THF_PARAM = THF_ATOM_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Thf constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_CONSTANT_FEATURE_COUNT = THF_ATOM_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Thf_varImpl <em>Thf var</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Thf_varImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getThf_var()
   * @generated
   */
  int THF_VAR = 40;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_VAR__NAME = THF_ATOM__NAME;

  /**
   * The number of structural features of the '<em>Thf var</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_VAR_FEATURE_COUNT = THF_ATOM_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Thf_variable_listImpl <em>Thf variable list</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Thf_variable_listImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getThf_variable_list()
   * @generated
   */
  int THF_VARIABLE_LIST = 41;

  /**
   * The feature id for the '<em><b>Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_VARIABLE_LIST__PARAMS = 0;

  /**
   * The number of structural features of the '<em>Thf variable list</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_VARIABLE_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.Thf_var_declarationImpl <em>Thf var declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.Thf_var_declarationImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getThf_var_declaration()
   * @generated
   */
  int THF_VAR_DECLARATION = 42;

  /**
   * The feature id for the '<em><b>Var</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_VAR_DECLARATION__VAR = 0;

  /**
   * The feature id for the '<em><b>Vartype</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_VAR_DECLARATION__VARTYPE = 1;

  /**
   * The number of structural features of the '<em>Thf var declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_VAR_DECLARATION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.binaryImpl <em>binary</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.binaryImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getbinary()
   * @generated
   */
  int BINARY = 43;

  /**
   * The feature id for the '<em><b>Fof atom</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__FOF_ATOM = FOF_EXPRESSION__FOF_ATOM;

  /**
   * The feature id for the '<em><b>Fof negation</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__FOF_NEGATION = FOF_EXPRESSION__FOF_NEGATION;

  /**
   * The feature id for the '<em><b>Fof exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__FOF_EXP = FOF_EXPRESSION__FOF_EXP;

  /**
   * The feature id for the '<em><b>Fof quantifier</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__FOF_QUANTIFIER = FOF_EXPRESSION__FOF_QUANTIFIER;

  /**
   * The feature id for the '<em><b>Fof param</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__FOF_PARAM = FOF_EXPRESSION__FOF_PARAM;

  /**
   * The feature id for the '<em><b>Atom</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__ATOM = FOF_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Negation</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__NEGATION = FOF_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__EXP = FOF_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Quantifier</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__QUANTIFIER = FOF_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Param</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__PARAM = FOF_EXPRESSION_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Thf atom</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__THF_ATOM = FOF_EXPRESSION_FEATURE_COUNT + 5;

  /**
   * The feature id for the '<em><b>Thf negation</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__THF_NEGATION = FOF_EXPRESSION_FEATURE_COUNT + 6;

  /**
   * The feature id for the '<em><b>Thf exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__THF_EXP = FOF_EXPRESSION_FEATURE_COUNT + 7;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__OP = FOF_EXPRESSION_FEATURE_COUNT + 8;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__LEFT = FOF_EXPRESSION_FEATURE_COUNT + 9;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__RIGHT = FOF_EXPRESSION_FEATURE_COUNT + 10;

  /**
   * The number of structural features of the '<em>binary</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY_FEATURE_COUNT = FOF_EXPRESSION_FEATURE_COUNT + 11;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.operImpl <em>oper</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.operImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getoper()
   * @generated
   */
  int OPER = 44;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPER__LEFT = TFF_TYPE_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPER__OP = TFF_TYPE_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPER__RIGHT = TFF_TYPE_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>oper</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPER_FEATURE_COUNT = TFF_TYPE_EXPRESSION_FEATURE_COUNT + 3;


  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see it.unibz.inf.tptp.parser.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the containment reference list '{@link it.unibz.inf.tptp.parser.Model#getTPTP_input <em>TPTP input</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>TPTP input</em>'.
   * @see it.unibz.inf.tptp.parser.Model#getTPTP_input()
   * @see #getModel()
   * @generated
   */
  EReference getModel_TPTP_input();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Include <em>Include</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Include</em>'.
   * @see it.unibz.inf.tptp.parser.Include
   * @generated
   */
  EClass getInclude();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Include#getPath <em>Path</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Path</em>'.
   * @see it.unibz.inf.tptp.parser.Include#getPath()
   * @see #getInclude()
   * @generated
   */
  EAttribute getInclude_Path();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Fof_input <em>Fof input</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fof input</em>'.
   * @see it.unibz.inf.tptp.parser.Fof_input
   * @generated
   */
  EClass getFof_input();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Fof_root <em>Fof root</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fof root</em>'.
   * @see it.unibz.inf.tptp.parser.Fof_root
   * @generated
   */
  EClass getFof_root();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Fof_root#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unibz.inf.tptp.parser.Fof_root#getName()
   * @see #getFof_root()
   * @generated
   */
  EAttribute getFof_root_Name();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Fof_root#getFormula_role <em>Formula role</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Formula role</em>'.
   * @see it.unibz.inf.tptp.parser.Fof_root#getFormula_role()
   * @see #getFof_root()
   * @generated
   */
  EAttribute getFof_root_Formula_role();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.Fof_root#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see it.unibz.inf.tptp.parser.Fof_root#getExp()
   * @see #getFof_root()
   * @generated
   */
  EReference getFof_root_Exp();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Fof_expression <em>Fof expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fof expression</em>'.
   * @see it.unibz.inf.tptp.parser.Fof_expression
   * @generated
   */
  EClass getFof_expression();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.Fof_expression#getFof_atom <em>Fof atom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Fof atom</em>'.
   * @see it.unibz.inf.tptp.parser.Fof_expression#getFof_atom()
   * @see #getFof_expression()
   * @generated
   */
  EReference getFof_expression_Fof_atom();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Fof_expression#isFof_negation <em>Fof negation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Fof negation</em>'.
   * @see it.unibz.inf.tptp.parser.Fof_expression#isFof_negation()
   * @see #getFof_expression()
   * @generated
   */
  EAttribute getFof_expression_Fof_negation();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.Fof_expression#getFof_exp <em>Fof exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Fof exp</em>'.
   * @see it.unibz.inf.tptp.parser.Fof_expression#getFof_exp()
   * @see #getFof_expression()
   * @generated
   */
  EReference getFof_expression_Fof_exp();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Fof_expression#getFof_quantifier <em>Fof quantifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Fof quantifier</em>'.
   * @see it.unibz.inf.tptp.parser.Fof_expression#getFof_quantifier()
   * @see #getFof_expression()
   * @generated
   */
  EAttribute getFof_expression_Fof_quantifier();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.Fof_expression#getFof_param <em>Fof param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Fof param</em>'.
   * @see it.unibz.inf.tptp.parser.Fof_expression#getFof_param()
   * @see #getFof_expression()
   * @generated
   */
  EReference getFof_expression_Fof_param();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Fof_atom <em>Fof atom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fof atom</em>'.
   * @see it.unibz.inf.tptp.parser.Fof_atom
   * @generated
   */
  EClass getFof_atom();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Fof_atom#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unibz.inf.tptp.parser.Fof_atom#getName()
   * @see #getFof_atom()
   * @generated
   */
  EAttribute getFof_atom_Name();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Fof_constant <em>Fof constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fof constant</em>'.
   * @see it.unibz.inf.tptp.parser.Fof_constant
   * @generated
   */
  EClass getFof_constant();

  /**
   * Returns the meta object for the containment reference list '{@link it.unibz.inf.tptp.parser.Fof_constant#getFof_param <em>Fof param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Fof param</em>'.
   * @see it.unibz.inf.tptp.parser.Fof_constant#getFof_param()
   * @see #getFof_constant()
   * @generated
   */
  EReference getFof_constant_Fof_param();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Fof_var <em>Fof var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fof var</em>'.
   * @see it.unibz.inf.tptp.parser.Fof_var
   * @generated
   */
  EClass getFof_var();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Fof_variable_list <em>Fof variable list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Fof variable list</em>'.
   * @see it.unibz.inf.tptp.parser.Fof_variable_list
   * @generated
   */
  EClass getFof_variable_list();

  /**
   * Returns the meta object for the containment reference list '{@link it.unibz.inf.tptp.parser.Fof_variable_list#getParams <em>Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Params</em>'.
   * @see it.unibz.inf.tptp.parser.Fof_variable_list#getParams()
   * @see #getFof_variable_list()
   * @generated
   */
  EReference getFof_variable_list_Params();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Tff_input <em>Tff input</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Tff input</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_input
   * @generated
   */
  EClass getTff_input();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Tff_root <em>Tff root</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Tff root</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_root
   * @generated
   */
  EClass getTff_root();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Tff_root#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_root#getName()
   * @see #getTff_root()
   * @generated
   */
  EAttribute getTff_root_Name();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Tff_root#getFormula_role <em>Formula role</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Formula role</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_root#getFormula_role()
   * @see #getTff_root()
   * @generated
   */
  EAttribute getTff_root_Formula_role();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.Tff_root#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_root#getExp()
   * @see #getTff_root()
   * @generated
   */
  EReference getTff_root_Exp();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.Tff_root#getDef <em>Def</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Def</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_root#getDef()
   * @see #getTff_root()
   * @generated
   */
  EReference getTff_root_Def();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Tff_formula_type_definition <em>Tff formula type definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Tff formula type definition</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_formula_type_definition
   * @generated
   */
  EClass getTff_formula_type_definition();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Tff_formula_type_definition#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_formula_type_definition#getName()
   * @see #getTff_formula_type_definition()
   * @generated
   */
  EAttribute getTff_formula_type_definition_Name();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.Tff_formula_type_definition#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_formula_type_definition#getExp()
   * @see #getTff_formula_type_definition()
   * @generated
   */
  EReference getTff_formula_type_definition_Exp();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Tff_type_expression <em>Tff type expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Tff type expression</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_type_expression
   * @generated
   */
  EClass getTff_type_expression();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Tff_type_atom <em>Tff type atom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Tff type atom</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_type_atom
   * @generated
   */
  EClass getTff_type_atom();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Tff_type_atom#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_type_atom#getName()
   * @see #getTff_type_atom()
   * @generated
   */
  EAttribute getTff_type_atom_Name();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Tff_type_constant <em>Tff type constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Tff type constant</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_type_constant
   * @generated
   */
  EClass getTff_type_constant();

  /**
   * Returns the meta object for the containment reference list '{@link it.unibz.inf.tptp.parser.Tff_type_constant#getParam <em>Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Param</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_type_constant#getParam()
   * @see #getTff_type_constant()
   * @generated
   */
  EReference getTff_type_constant_Param();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Tff_expression <em>Tff expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Tff expression</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_expression
   * @generated
   */
  EClass getTff_expression();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.Tff_expression#getAtom <em>Atom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Atom</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_expression#getAtom()
   * @see #getTff_expression()
   * @generated
   */
  EReference getTff_expression_Atom();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Tff_expression#isNegation <em>Negation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Negation</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_expression#isNegation()
   * @see #getTff_expression()
   * @generated
   */
  EAttribute getTff_expression_Negation();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.Tff_expression#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_expression#getExp()
   * @see #getTff_expression()
   * @generated
   */
  EReference getTff_expression_Exp();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Tff_expression#getQuantifier <em>Quantifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Quantifier</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_expression#getQuantifier()
   * @see #getTff_expression()
   * @generated
   */
  EAttribute getTff_expression_Quantifier();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.Tff_expression#getParam <em>Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Param</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_expression#getParam()
   * @see #getTff_expression()
   * @generated
   */
  EReference getTff_expression_Param();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Tff_atom <em>Tff atom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Tff atom</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_atom
   * @generated
   */
  EClass getTff_atom();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Tff_constant <em>Tff constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Tff constant</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_constant
   * @generated
   */
  EClass getTff_constant();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Tff_constant#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_constant#getName()
   * @see #getTff_constant()
   * @generated
   */
  EAttribute getTff_constant_Name();

  /**
   * Returns the meta object for the containment reference list '{@link it.unibz.inf.tptp.parser.Tff_constant#getParam <em>Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Param</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_constant#getParam()
   * @see #getTff_constant()
   * @generated
   */
  EReference getTff_constant_Param();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Tff_constant#getTop <em>Top</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Top</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_constant#getTop()
   * @see #getTff_constant()
   * @generated
   */
  EAttribute getTff_constant_Top();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Tff_constant#getBottom <em>Bottom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Bottom</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_constant#getBottom()
   * @see #getTff_constant()
   * @generated
   */
  EAttribute getTff_constant_Bottom();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Tff_predefined_function_2_args <em>Tff predefined function 2args</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Tff predefined function 2args</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_predefined_function_2_args
   * @generated
   */
  EClass getTff_predefined_function_2_args();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Tff_predefined_function_2_args#getFunc <em>Func</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Func</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_predefined_function_2_args#getFunc()
   * @see #getTff_predefined_function_2_args()
   * @generated
   */
  EAttribute getTff_predefined_function_2_args_Func();

  /**
   * Returns the meta object for the containment reference list '{@link it.unibz.inf.tptp.parser.Tff_predefined_function_2_args#getParam <em>Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Param</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_predefined_function_2_args#getParam()
   * @see #getTff_predefined_function_2_args()
   * @generated
   */
  EReference getTff_predefined_function_2_args_Param();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Tff_var <em>Tff var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Tff var</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_var
   * @generated
   */
  EClass getTff_var();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Tff_var_declaration <em>Tff var declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Tff var declaration</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_var_declaration
   * @generated
   */
  EClass getTff_var_declaration();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.Tff_var_declaration#getVar <em>Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Var</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_var_declaration#getVar()
   * @see #getTff_var_declaration()
   * @generated
   */
  EReference getTff_var_declaration_Var();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.Tff_var_declaration#getVartype <em>Vartype</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Vartype</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_var_declaration#getVartype()
   * @see #getTff_var_declaration()
   * @generated
   */
  EReference getTff_var_declaration_Vartype();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Tff_variable_list <em>Tff variable list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Tff variable list</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_variable_list
   * @generated
   */
  EClass getTff_variable_list();

  /**
   * Returns the meta object for the containment reference list '{@link it.unibz.inf.tptp.parser.Tff_variable_list#getParams <em>Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Params</em>'.
   * @see it.unibz.inf.tptp.parser.Tff_variable_list#getParams()
   * @see #getTff_variable_list()
   * @generated
   */
  EReference getTff_variable_list_Params();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Cnf_input <em>Cnf input</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cnf input</em>'.
   * @see it.unibz.inf.tptp.parser.Cnf_input
   * @generated
   */
  EClass getCnf_input();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Cnf_root <em>Cnf root</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cnf root</em>'.
   * @see it.unibz.inf.tptp.parser.Cnf_root
   * @generated
   */
  EClass getCnf_root();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Cnf_root#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unibz.inf.tptp.parser.Cnf_root#getName()
   * @see #getCnf_root()
   * @generated
   */
  EAttribute getCnf_root_Name();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Cnf_root#getFormula_role <em>Formula role</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Formula role</em>'.
   * @see it.unibz.inf.tptp.parser.Cnf_root#getFormula_role()
   * @see #getCnf_root()
   * @generated
   */
  EAttribute getCnf_root_Formula_role();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.Cnf_root#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see it.unibz.inf.tptp.parser.Cnf_root#getExp()
   * @see #getCnf_root()
   * @generated
   */
  EReference getCnf_root_Exp();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Cnf_formula_type_definition <em>Cnf formula type definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cnf formula type definition</em>'.
   * @see it.unibz.inf.tptp.parser.Cnf_formula_type_definition
   * @generated
   */
  EClass getCnf_formula_type_definition();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.Cnf_formula_type_definition#getDisjunction <em>Disjunction</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Disjunction</em>'.
   * @see it.unibz.inf.tptp.parser.Cnf_formula_type_definition#getDisjunction()
   * @see #getCnf_formula_type_definition()
   * @generated
   */
  EReference getCnf_formula_type_definition_Disjunction();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Cnf_or <em>Cnf or</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cnf or</em>'.
   * @see it.unibz.inf.tptp.parser.Cnf_or
   * @generated
   */
  EClass getCnf_or();

  /**
   * Returns the meta object for the containment reference list '{@link it.unibz.inf.tptp.parser.Cnf_or#getOr <em>Or</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Or</em>'.
   * @see it.unibz.inf.tptp.parser.Cnf_or#getOr()
   * @see #getCnf_or()
   * @generated
   */
  EReference getCnf_or_Or();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Cnf_not <em>Cnf not</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cnf not</em>'.
   * @see it.unibz.inf.tptp.parser.Cnf_not
   * @generated
   */
  EClass getCnf_not();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Cnf_not#isNegated <em>Negated</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Negated</em>'.
   * @see it.unibz.inf.tptp.parser.Cnf_not#isNegated()
   * @see #getCnf_not()
   * @generated
   */
  EAttribute getCnf_not_Negated();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.Cnf_not#getLiteral <em>Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Literal</em>'.
   * @see it.unibz.inf.tptp.parser.Cnf_not#getLiteral()
   * @see #getCnf_not()
   * @generated
   */
  EReference getCnf_not_Literal();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Cnf_equality <em>Cnf equality</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cnf equality</em>'.
   * @see it.unibz.inf.tptp.parser.Cnf_equality
   * @generated
   */
  EClass getCnf_equality();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.Cnf_equality#getExpL <em>Exp L</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp L</em>'.
   * @see it.unibz.inf.tptp.parser.Cnf_equality#getExpL()
   * @see #getCnf_equality()
   * @generated
   */
  EReference getCnf_equality_ExpL();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Cnf_equality#getEq <em>Eq</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Eq</em>'.
   * @see it.unibz.inf.tptp.parser.Cnf_equality#getEq()
   * @see #getCnf_equality()
   * @generated
   */
  EAttribute getCnf_equality_Eq();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.Cnf_equality#getExpR <em>Exp R</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp R</em>'.
   * @see it.unibz.inf.tptp.parser.Cnf_equality#getExpR()
   * @see #getCnf_equality()
   * @generated
   */
  EReference getCnf_equality_ExpR();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Cnf_expression <em>Cnf expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cnf expression</em>'.
   * @see it.unibz.inf.tptp.parser.Cnf_expression
   * @generated
   */
  EClass getCnf_expression();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Cnf_expression#getCnf_exp <em>Cnf exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Cnf exp</em>'.
   * @see it.unibz.inf.tptp.parser.Cnf_expression#getCnf_exp()
   * @see #getCnf_expression()
   * @generated
   */
  EAttribute getCnf_expression_Cnf_exp();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Cnf_expression#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unibz.inf.tptp.parser.Cnf_expression#getName()
   * @see #getCnf_expression()
   * @generated
   */
  EAttribute getCnf_expression_Name();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Cnf_constant <em>Cnf constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cnf constant</em>'.
   * @see it.unibz.inf.tptp.parser.Cnf_constant
   * @generated
   */
  EClass getCnf_constant();

  /**
   * Returns the meta object for the containment reference list '{@link it.unibz.inf.tptp.parser.Cnf_constant#getParam <em>Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Param</em>'.
   * @see it.unibz.inf.tptp.parser.Cnf_constant#getParam()
   * @see #getCnf_constant()
   * @generated
   */
  EReference getCnf_constant_Param();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Cnf_var <em>Cnf var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Cnf var</em>'.
   * @see it.unibz.inf.tptp.parser.Cnf_var
   * @generated
   */
  EClass getCnf_var();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Thf_input <em>Thf input</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Thf input</em>'.
   * @see it.unibz.inf.tptp.parser.Thf_input
   * @generated
   */
  EClass getThf_input();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Thf_root <em>Thf root</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Thf root</em>'.
   * @see it.unibz.inf.tptp.parser.Thf_root
   * @generated
   */
  EClass getThf_root();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Thf_root#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unibz.inf.tptp.parser.Thf_root#getName()
   * @see #getThf_root()
   * @generated
   */
  EAttribute getThf_root_Name();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Thf_root#getFormula_role <em>Formula role</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Formula role</em>'.
   * @see it.unibz.inf.tptp.parser.Thf_root#getFormula_role()
   * @see #getThf_root()
   * @generated
   */
  EAttribute getThf_root_Formula_role();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.Thf_root#getDef <em>Def</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Def</em>'.
   * @see it.unibz.inf.tptp.parser.Thf_root#getDef()
   * @see #getThf_root()
   * @generated
   */
  EReference getThf_root_Def();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.Thf_root#getThf_exp <em>Thf exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Thf exp</em>'.
   * @see it.unibz.inf.tptp.parser.Thf_root#getThf_exp()
   * @see #getThf_root()
   * @generated
   */
  EReference getThf_root_Thf_exp();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Thf_formula_type_definition <em>Thf formula type definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Thf formula type definition</em>'.
   * @see it.unibz.inf.tptp.parser.Thf_formula_type_definition
   * @generated
   */
  EClass getThf_formula_type_definition();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Thf_formula_type_definition#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unibz.inf.tptp.parser.Thf_formula_type_definition#getName()
   * @see #getThf_formula_type_definition()
   * @generated
   */
  EAttribute getThf_formula_type_definition_Name();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.Thf_formula_type_definition#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see it.unibz.inf.tptp.parser.Thf_formula_type_definition#getExp()
   * @see #getThf_formula_type_definition()
   * @generated
   */
  EReference getThf_formula_type_definition_Exp();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Thf_type_expression <em>Thf type expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Thf type expression</em>'.
   * @see it.unibz.inf.tptp.parser.Thf_type_expression
   * @generated
   */
  EClass getThf_type_expression();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Thf_type_atom <em>Thf type atom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Thf type atom</em>'.
   * @see it.unibz.inf.tptp.parser.Thf_type_atom
   * @generated
   */
  EClass getThf_type_atom();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Thf_type_constant <em>Thf type constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Thf type constant</em>'.
   * @see it.unibz.inf.tptp.parser.Thf_type_constant
   * @generated
   */
  EClass getThf_type_constant();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Thf_type_constant#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unibz.inf.tptp.parser.Thf_type_constant#getName()
   * @see #getThf_type_constant()
   * @generated
   */
  EAttribute getThf_type_constant_Name();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Thf_expression <em>Thf expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Thf expression</em>'.
   * @see it.unibz.inf.tptp.parser.Thf_expression
   * @generated
   */
  EClass getThf_expression();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.Thf_expression#getThf_atom <em>Thf atom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Thf atom</em>'.
   * @see it.unibz.inf.tptp.parser.Thf_expression#getThf_atom()
   * @see #getThf_expression()
   * @generated
   */
  EReference getThf_expression_Thf_atom();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Thf_expression#isThf_negation <em>Thf negation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Thf negation</em>'.
   * @see it.unibz.inf.tptp.parser.Thf_expression#isThf_negation()
   * @see #getThf_expression()
   * @generated
   */
  EAttribute getThf_expression_Thf_negation();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.Thf_expression#getThf_exp <em>Thf exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Thf exp</em>'.
   * @see it.unibz.inf.tptp.parser.Thf_expression#getThf_exp()
   * @see #getThf_expression()
   * @generated
   */
  EReference getThf_expression_Thf_exp();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Thf_expression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see it.unibz.inf.tptp.parser.Thf_expression#getOp()
   * @see #getThf_expression()
   * @generated
   */
  EAttribute getThf_expression_Op();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Thf_atom <em>Thf atom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Thf atom</em>'.
   * @see it.unibz.inf.tptp.parser.Thf_atom
   * @generated
   */
  EClass getThf_atom();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.Thf_atom#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unibz.inf.tptp.parser.Thf_atom#getName()
   * @see #getThf_atom()
   * @generated
   */
  EAttribute getThf_atom_Name();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Thf_constant <em>Thf constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Thf constant</em>'.
   * @see it.unibz.inf.tptp.parser.Thf_constant
   * @generated
   */
  EClass getThf_constant();

  /**
   * Returns the meta object for the containment reference list '{@link it.unibz.inf.tptp.parser.Thf_constant#getThf_param <em>Thf param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Thf param</em>'.
   * @see it.unibz.inf.tptp.parser.Thf_constant#getThf_param()
   * @see #getThf_constant()
   * @generated
   */
  EReference getThf_constant_Thf_param();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Thf_var <em>Thf var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Thf var</em>'.
   * @see it.unibz.inf.tptp.parser.Thf_var
   * @generated
   */
  EClass getThf_var();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Thf_variable_list <em>Thf variable list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Thf variable list</em>'.
   * @see it.unibz.inf.tptp.parser.Thf_variable_list
   * @generated
   */
  EClass getThf_variable_list();

  /**
   * Returns the meta object for the containment reference list '{@link it.unibz.inf.tptp.parser.Thf_variable_list#getParams <em>Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Params</em>'.
   * @see it.unibz.inf.tptp.parser.Thf_variable_list#getParams()
   * @see #getThf_variable_list()
   * @generated
   */
  EReference getThf_variable_list_Params();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Thf_var_declaration <em>Thf var declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Thf var declaration</em>'.
   * @see it.unibz.inf.tptp.parser.Thf_var_declaration
   * @generated
   */
  EClass getThf_var_declaration();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.Thf_var_declaration#getVar <em>Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Var</em>'.
   * @see it.unibz.inf.tptp.parser.Thf_var_declaration#getVar()
   * @see #getThf_var_declaration()
   * @generated
   */
  EReference getThf_var_declaration_Var();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.Thf_var_declaration#getVartype <em>Vartype</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Vartype</em>'.
   * @see it.unibz.inf.tptp.parser.Thf_var_declaration#getVartype()
   * @see #getThf_var_declaration()
   * @generated
   */
  EReference getThf_var_declaration_Vartype();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.binary <em>binary</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>binary</em>'.
   * @see it.unibz.inf.tptp.parser.binary
   * @generated
   */
  EClass getbinary();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.binary#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see it.unibz.inf.tptp.parser.binary#getLeft()
   * @see #getbinary()
   * @generated
   */
  EReference getbinary_Left();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.binary#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see it.unibz.inf.tptp.parser.binary#getRight()
   * @see #getbinary()
   * @generated
   */
  EReference getbinary_Right();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.oper <em>oper</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>oper</em>'.
   * @see it.unibz.inf.tptp.parser.oper
   * @generated
   */
  EClass getoper();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.oper#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see it.unibz.inf.tptp.parser.oper#getLeft()
   * @see #getoper()
   * @generated
   */
  EReference getoper_Left();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.oper#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see it.unibz.inf.tptp.parser.oper#getOp()
   * @see #getoper()
   * @generated
   */
  EAttribute getoper_Op();

  /**
   * Returns the meta object for the containment reference list '{@link it.unibz.inf.tptp.parser.oper#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Right</em>'.
   * @see it.unibz.inf.tptp.parser.oper#getRight()
   * @see #getoper()
   * @generated
   */
  EReference getoper_Right();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  ParserFactory getParserFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.ModelImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>TPTP input</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__TPTP_INPUT = eINSTANCE.getModel_TPTP_input();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.IncludeImpl <em>Include</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.IncludeImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getInclude()
     * @generated
     */
    EClass INCLUDE = eINSTANCE.getInclude();

    /**
     * The meta object literal for the '<em><b>Path</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INCLUDE__PATH = eINSTANCE.getInclude_Path();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Fof_inputImpl <em>Fof input</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Fof_inputImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getFof_input()
     * @generated
     */
    EClass FOF_INPUT = eINSTANCE.getFof_input();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Fof_rootImpl <em>Fof root</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Fof_rootImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getFof_root()
     * @generated
     */
    EClass FOF_ROOT = eINSTANCE.getFof_root();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FOF_ROOT__NAME = eINSTANCE.getFof_root_Name();

    /**
     * The meta object literal for the '<em><b>Formula role</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FOF_ROOT__FORMULA_ROLE = eINSTANCE.getFof_root_Formula_role();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOF_ROOT__EXP = eINSTANCE.getFof_root_Exp();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Fof_expressionImpl <em>Fof expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Fof_expressionImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getFof_expression()
     * @generated
     */
    EClass FOF_EXPRESSION = eINSTANCE.getFof_expression();

    /**
     * The meta object literal for the '<em><b>Fof atom</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOF_EXPRESSION__FOF_ATOM = eINSTANCE.getFof_expression_Fof_atom();

    /**
     * The meta object literal for the '<em><b>Fof negation</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FOF_EXPRESSION__FOF_NEGATION = eINSTANCE.getFof_expression_Fof_negation();

    /**
     * The meta object literal for the '<em><b>Fof exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOF_EXPRESSION__FOF_EXP = eINSTANCE.getFof_expression_Fof_exp();

    /**
     * The meta object literal for the '<em><b>Fof quantifier</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FOF_EXPRESSION__FOF_QUANTIFIER = eINSTANCE.getFof_expression_Fof_quantifier();

    /**
     * The meta object literal for the '<em><b>Fof param</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOF_EXPRESSION__FOF_PARAM = eINSTANCE.getFof_expression_Fof_param();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Fof_atomImpl <em>Fof atom</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Fof_atomImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getFof_atom()
     * @generated
     */
    EClass FOF_ATOM = eINSTANCE.getFof_atom();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FOF_ATOM__NAME = eINSTANCE.getFof_atom_Name();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Fof_constantImpl <em>Fof constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Fof_constantImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getFof_constant()
     * @generated
     */
    EClass FOF_CONSTANT = eINSTANCE.getFof_constant();

    /**
     * The meta object literal for the '<em><b>Fof param</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOF_CONSTANT__FOF_PARAM = eINSTANCE.getFof_constant_Fof_param();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Fof_varImpl <em>Fof var</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Fof_varImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getFof_var()
     * @generated
     */
    EClass FOF_VAR = eINSTANCE.getFof_var();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Fof_variable_listImpl <em>Fof variable list</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Fof_variable_listImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getFof_variable_list()
     * @generated
     */
    EClass FOF_VARIABLE_LIST = eINSTANCE.getFof_variable_list();

    /**
     * The meta object literal for the '<em><b>Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOF_VARIABLE_LIST__PARAMS = eINSTANCE.getFof_variable_list_Params();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Tff_inputImpl <em>Tff input</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Tff_inputImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getTff_input()
     * @generated
     */
    EClass TFF_INPUT = eINSTANCE.getTff_input();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Tff_rootImpl <em>Tff root</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Tff_rootImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getTff_root()
     * @generated
     */
    EClass TFF_ROOT = eINSTANCE.getTff_root();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TFF_ROOT__NAME = eINSTANCE.getTff_root_Name();

    /**
     * The meta object literal for the '<em><b>Formula role</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TFF_ROOT__FORMULA_ROLE = eINSTANCE.getTff_root_Formula_role();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TFF_ROOT__EXP = eINSTANCE.getTff_root_Exp();

    /**
     * The meta object literal for the '<em><b>Def</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TFF_ROOT__DEF = eINSTANCE.getTff_root_Def();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Tff_formula_type_definitionImpl <em>Tff formula type definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Tff_formula_type_definitionImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getTff_formula_type_definition()
     * @generated
     */
    EClass TFF_FORMULA_TYPE_DEFINITION = eINSTANCE.getTff_formula_type_definition();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TFF_FORMULA_TYPE_DEFINITION__NAME = eINSTANCE.getTff_formula_type_definition_Name();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TFF_FORMULA_TYPE_DEFINITION__EXP = eINSTANCE.getTff_formula_type_definition_Exp();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Tff_type_expressionImpl <em>Tff type expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Tff_type_expressionImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getTff_type_expression()
     * @generated
     */
    EClass TFF_TYPE_EXPRESSION = eINSTANCE.getTff_type_expression();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Tff_type_atomImpl <em>Tff type atom</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Tff_type_atomImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getTff_type_atom()
     * @generated
     */
    EClass TFF_TYPE_ATOM = eINSTANCE.getTff_type_atom();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TFF_TYPE_ATOM__NAME = eINSTANCE.getTff_type_atom_Name();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Tff_type_constantImpl <em>Tff type constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Tff_type_constantImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getTff_type_constant()
     * @generated
     */
    EClass TFF_TYPE_CONSTANT = eINSTANCE.getTff_type_constant();

    /**
     * The meta object literal for the '<em><b>Param</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TFF_TYPE_CONSTANT__PARAM = eINSTANCE.getTff_type_constant_Param();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Tff_expressionImpl <em>Tff expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Tff_expressionImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getTff_expression()
     * @generated
     */
    EClass TFF_EXPRESSION = eINSTANCE.getTff_expression();

    /**
     * The meta object literal for the '<em><b>Atom</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TFF_EXPRESSION__ATOM = eINSTANCE.getTff_expression_Atom();

    /**
     * The meta object literal for the '<em><b>Negation</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TFF_EXPRESSION__NEGATION = eINSTANCE.getTff_expression_Negation();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TFF_EXPRESSION__EXP = eINSTANCE.getTff_expression_Exp();

    /**
     * The meta object literal for the '<em><b>Quantifier</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TFF_EXPRESSION__QUANTIFIER = eINSTANCE.getTff_expression_Quantifier();

    /**
     * The meta object literal for the '<em><b>Param</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TFF_EXPRESSION__PARAM = eINSTANCE.getTff_expression_Param();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Tff_atomImpl <em>Tff atom</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Tff_atomImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getTff_atom()
     * @generated
     */
    EClass TFF_ATOM = eINSTANCE.getTff_atom();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Tff_constantImpl <em>Tff constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Tff_constantImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getTff_constant()
     * @generated
     */
    EClass TFF_CONSTANT = eINSTANCE.getTff_constant();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TFF_CONSTANT__NAME = eINSTANCE.getTff_constant_Name();

    /**
     * The meta object literal for the '<em><b>Param</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TFF_CONSTANT__PARAM = eINSTANCE.getTff_constant_Param();

    /**
     * The meta object literal for the '<em><b>Top</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TFF_CONSTANT__TOP = eINSTANCE.getTff_constant_Top();

    /**
     * The meta object literal for the '<em><b>Bottom</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TFF_CONSTANT__BOTTOM = eINSTANCE.getTff_constant_Bottom();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Tff_predefined_function_2_argsImpl <em>Tff predefined function 2args</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Tff_predefined_function_2_argsImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getTff_predefined_function_2_args()
     * @generated
     */
    EClass TFF_PREDEFINED_FUNCTION_2ARGS = eINSTANCE.getTff_predefined_function_2_args();

    /**
     * The meta object literal for the '<em><b>Func</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TFF_PREDEFINED_FUNCTION_2ARGS__FUNC = eINSTANCE.getTff_predefined_function_2_args_Func();

    /**
     * The meta object literal for the '<em><b>Param</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TFF_PREDEFINED_FUNCTION_2ARGS__PARAM = eINSTANCE.getTff_predefined_function_2_args_Param();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Tff_varImpl <em>Tff var</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Tff_varImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getTff_var()
     * @generated
     */
    EClass TFF_VAR = eINSTANCE.getTff_var();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Tff_var_declarationImpl <em>Tff var declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Tff_var_declarationImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getTff_var_declaration()
     * @generated
     */
    EClass TFF_VAR_DECLARATION = eINSTANCE.getTff_var_declaration();

    /**
     * The meta object literal for the '<em><b>Var</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TFF_VAR_DECLARATION__VAR = eINSTANCE.getTff_var_declaration_Var();

    /**
     * The meta object literal for the '<em><b>Vartype</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TFF_VAR_DECLARATION__VARTYPE = eINSTANCE.getTff_var_declaration_Vartype();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Tff_variable_listImpl <em>Tff variable list</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Tff_variable_listImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getTff_variable_list()
     * @generated
     */
    EClass TFF_VARIABLE_LIST = eINSTANCE.getTff_variable_list();

    /**
     * The meta object literal for the '<em><b>Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TFF_VARIABLE_LIST__PARAMS = eINSTANCE.getTff_variable_list_Params();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Cnf_inputImpl <em>Cnf input</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Cnf_inputImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getCnf_input()
     * @generated
     */
    EClass CNF_INPUT = eINSTANCE.getCnf_input();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Cnf_rootImpl <em>Cnf root</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Cnf_rootImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getCnf_root()
     * @generated
     */
    EClass CNF_ROOT = eINSTANCE.getCnf_root();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CNF_ROOT__NAME = eINSTANCE.getCnf_root_Name();

    /**
     * The meta object literal for the '<em><b>Formula role</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CNF_ROOT__FORMULA_ROLE = eINSTANCE.getCnf_root_Formula_role();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CNF_ROOT__EXP = eINSTANCE.getCnf_root_Exp();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Cnf_formula_type_definitionImpl <em>Cnf formula type definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Cnf_formula_type_definitionImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getCnf_formula_type_definition()
     * @generated
     */
    EClass CNF_FORMULA_TYPE_DEFINITION = eINSTANCE.getCnf_formula_type_definition();

    /**
     * The meta object literal for the '<em><b>Disjunction</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CNF_FORMULA_TYPE_DEFINITION__DISJUNCTION = eINSTANCE.getCnf_formula_type_definition_Disjunction();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Cnf_orImpl <em>Cnf or</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Cnf_orImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getCnf_or()
     * @generated
     */
    EClass CNF_OR = eINSTANCE.getCnf_or();

    /**
     * The meta object literal for the '<em><b>Or</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CNF_OR__OR = eINSTANCE.getCnf_or_Or();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Cnf_notImpl <em>Cnf not</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Cnf_notImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getCnf_not()
     * @generated
     */
    EClass CNF_NOT = eINSTANCE.getCnf_not();

    /**
     * The meta object literal for the '<em><b>Negated</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CNF_NOT__NEGATED = eINSTANCE.getCnf_not_Negated();

    /**
     * The meta object literal for the '<em><b>Literal</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CNF_NOT__LITERAL = eINSTANCE.getCnf_not_Literal();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Cnf_equalityImpl <em>Cnf equality</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Cnf_equalityImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getCnf_equality()
     * @generated
     */
    EClass CNF_EQUALITY = eINSTANCE.getCnf_equality();

    /**
     * The meta object literal for the '<em><b>Exp L</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CNF_EQUALITY__EXP_L = eINSTANCE.getCnf_equality_ExpL();

    /**
     * The meta object literal for the '<em><b>Eq</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CNF_EQUALITY__EQ = eINSTANCE.getCnf_equality_Eq();

    /**
     * The meta object literal for the '<em><b>Exp R</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CNF_EQUALITY__EXP_R = eINSTANCE.getCnf_equality_ExpR();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Cnf_expressionImpl <em>Cnf expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Cnf_expressionImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getCnf_expression()
     * @generated
     */
    EClass CNF_EXPRESSION = eINSTANCE.getCnf_expression();

    /**
     * The meta object literal for the '<em><b>Cnf exp</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CNF_EXPRESSION__CNF_EXP = eINSTANCE.getCnf_expression_Cnf_exp();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CNF_EXPRESSION__NAME = eINSTANCE.getCnf_expression_Name();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Cnf_constantImpl <em>Cnf constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Cnf_constantImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getCnf_constant()
     * @generated
     */
    EClass CNF_CONSTANT = eINSTANCE.getCnf_constant();

    /**
     * The meta object literal for the '<em><b>Param</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CNF_CONSTANT__PARAM = eINSTANCE.getCnf_constant_Param();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Cnf_varImpl <em>Cnf var</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Cnf_varImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getCnf_var()
     * @generated
     */
    EClass CNF_VAR = eINSTANCE.getCnf_var();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Thf_inputImpl <em>Thf input</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Thf_inputImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getThf_input()
     * @generated
     */
    EClass THF_INPUT = eINSTANCE.getThf_input();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Thf_rootImpl <em>Thf root</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Thf_rootImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getThf_root()
     * @generated
     */
    EClass THF_ROOT = eINSTANCE.getThf_root();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute THF_ROOT__NAME = eINSTANCE.getThf_root_Name();

    /**
     * The meta object literal for the '<em><b>Formula role</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute THF_ROOT__FORMULA_ROLE = eINSTANCE.getThf_root_Formula_role();

    /**
     * The meta object literal for the '<em><b>Def</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference THF_ROOT__DEF = eINSTANCE.getThf_root_Def();

    /**
     * The meta object literal for the '<em><b>Thf exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference THF_ROOT__THF_EXP = eINSTANCE.getThf_root_Thf_exp();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Thf_formula_type_definitionImpl <em>Thf formula type definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Thf_formula_type_definitionImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getThf_formula_type_definition()
     * @generated
     */
    EClass THF_FORMULA_TYPE_DEFINITION = eINSTANCE.getThf_formula_type_definition();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute THF_FORMULA_TYPE_DEFINITION__NAME = eINSTANCE.getThf_formula_type_definition_Name();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference THF_FORMULA_TYPE_DEFINITION__EXP = eINSTANCE.getThf_formula_type_definition_Exp();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Thf_type_expressionImpl <em>Thf type expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Thf_type_expressionImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getThf_type_expression()
     * @generated
     */
    EClass THF_TYPE_EXPRESSION = eINSTANCE.getThf_type_expression();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Thf_type_atomImpl <em>Thf type atom</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Thf_type_atomImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getThf_type_atom()
     * @generated
     */
    EClass THF_TYPE_ATOM = eINSTANCE.getThf_type_atom();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Thf_type_constantImpl <em>Thf type constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Thf_type_constantImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getThf_type_constant()
     * @generated
     */
    EClass THF_TYPE_CONSTANT = eINSTANCE.getThf_type_constant();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute THF_TYPE_CONSTANT__NAME = eINSTANCE.getThf_type_constant_Name();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Thf_expressionImpl <em>Thf expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Thf_expressionImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getThf_expression()
     * @generated
     */
    EClass THF_EXPRESSION = eINSTANCE.getThf_expression();

    /**
     * The meta object literal for the '<em><b>Thf atom</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference THF_EXPRESSION__THF_ATOM = eINSTANCE.getThf_expression_Thf_atom();

    /**
     * The meta object literal for the '<em><b>Thf negation</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute THF_EXPRESSION__THF_NEGATION = eINSTANCE.getThf_expression_Thf_negation();

    /**
     * The meta object literal for the '<em><b>Thf exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference THF_EXPRESSION__THF_EXP = eINSTANCE.getThf_expression_Thf_exp();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute THF_EXPRESSION__OP = eINSTANCE.getThf_expression_Op();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Thf_atomImpl <em>Thf atom</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Thf_atomImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getThf_atom()
     * @generated
     */
    EClass THF_ATOM = eINSTANCE.getThf_atom();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute THF_ATOM__NAME = eINSTANCE.getThf_atom_Name();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Thf_constantImpl <em>Thf constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Thf_constantImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getThf_constant()
     * @generated
     */
    EClass THF_CONSTANT = eINSTANCE.getThf_constant();

    /**
     * The meta object literal for the '<em><b>Thf param</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference THF_CONSTANT__THF_PARAM = eINSTANCE.getThf_constant_Thf_param();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Thf_varImpl <em>Thf var</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Thf_varImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getThf_var()
     * @generated
     */
    EClass THF_VAR = eINSTANCE.getThf_var();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Thf_variable_listImpl <em>Thf variable list</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Thf_variable_listImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getThf_variable_list()
     * @generated
     */
    EClass THF_VARIABLE_LIST = eINSTANCE.getThf_variable_list();

    /**
     * The meta object literal for the '<em><b>Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference THF_VARIABLE_LIST__PARAMS = eINSTANCE.getThf_variable_list_Params();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.Thf_var_declarationImpl <em>Thf var declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.Thf_var_declarationImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getThf_var_declaration()
     * @generated
     */
    EClass THF_VAR_DECLARATION = eINSTANCE.getThf_var_declaration();

    /**
     * The meta object literal for the '<em><b>Var</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference THF_VAR_DECLARATION__VAR = eINSTANCE.getThf_var_declaration_Var();

    /**
     * The meta object literal for the '<em><b>Vartype</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference THF_VAR_DECLARATION__VARTYPE = eINSTANCE.getThf_var_declaration_Vartype();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.binaryImpl <em>binary</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.binaryImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getbinary()
     * @generated
     */
    EClass BINARY = eINSTANCE.getbinary();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BINARY__LEFT = eINSTANCE.getbinary_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BINARY__RIGHT = eINSTANCE.getbinary_Right();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.operImpl <em>oper</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.operImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getoper()
     * @generated
     */
    EClass OPER = eINSTANCE.getoper();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPER__LEFT = eINSTANCE.getoper_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPER__OP = eINSTANCE.getoper_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPER__RIGHT = eINSTANCE.getoper_Right();

  }

} //ParserPackage
