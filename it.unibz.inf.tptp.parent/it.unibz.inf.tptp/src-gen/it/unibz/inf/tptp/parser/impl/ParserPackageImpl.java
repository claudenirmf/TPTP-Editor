/**
 * generated by Xtext 2.12.0
 */
package it.unibz.inf.tptp.parser.impl;

import it.unibz.inf.tptp.parser.Cnf_constant;
import it.unibz.inf.tptp.parser.Cnf_equality;
import it.unibz.inf.tptp.parser.Cnf_expression;
import it.unibz.inf.tptp.parser.Cnf_formula_type_definition;
import it.unibz.inf.tptp.parser.Cnf_input;
import it.unibz.inf.tptp.parser.Cnf_not;
import it.unibz.inf.tptp.parser.Cnf_or;
import it.unibz.inf.tptp.parser.Cnf_root;
import it.unibz.inf.tptp.parser.Cnf_var;
import it.unibz.inf.tptp.parser.Fof_atom;
import it.unibz.inf.tptp.parser.Fof_constant;
import it.unibz.inf.tptp.parser.Fof_expression;
import it.unibz.inf.tptp.parser.Fof_input;
import it.unibz.inf.tptp.parser.Fof_root;
import it.unibz.inf.tptp.parser.Fof_var;
import it.unibz.inf.tptp.parser.Fof_variable_list;
import it.unibz.inf.tptp.parser.Include;
import it.unibz.inf.tptp.parser.Model;
import it.unibz.inf.tptp.parser.ParserFactory;
import it.unibz.inf.tptp.parser.ParserPackage;
import it.unibz.inf.tptp.parser.Tff_atom;
import it.unibz.inf.tptp.parser.Tff_constant;
import it.unibz.inf.tptp.parser.Tff_expression;
import it.unibz.inf.tptp.parser.Tff_formula_type_definition;
import it.unibz.inf.tptp.parser.Tff_input;
import it.unibz.inf.tptp.parser.Tff_predefined_function_2_args;
import it.unibz.inf.tptp.parser.Tff_root;
import it.unibz.inf.tptp.parser.Tff_type_atom;
import it.unibz.inf.tptp.parser.Tff_type_constant;
import it.unibz.inf.tptp.parser.Tff_type_expression;
import it.unibz.inf.tptp.parser.Tff_var;
import it.unibz.inf.tptp.parser.Tff_var_declaration;
import it.unibz.inf.tptp.parser.Tff_variable_list;
import it.unibz.inf.tptp.parser.Thf_atom;
import it.unibz.inf.tptp.parser.Thf_constant;
import it.unibz.inf.tptp.parser.Thf_expression;
import it.unibz.inf.tptp.parser.Thf_formula_type_definition;
import it.unibz.inf.tptp.parser.Thf_input;
import it.unibz.inf.tptp.parser.Thf_root;
import it.unibz.inf.tptp.parser.Thf_type_atom;
import it.unibz.inf.tptp.parser.Thf_type_constant;
import it.unibz.inf.tptp.parser.Thf_type_expression;
import it.unibz.inf.tptp.parser.Thf_var;
import it.unibz.inf.tptp.parser.Thf_var_declaration;
import it.unibz.inf.tptp.parser.Thf_variable_list;
import it.unibz.inf.tptp.parser.binary;
import it.unibz.inf.tptp.parser.oper;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class ParserPackageImpl extends EPackageImpl implements ParserPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass includeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fof_inputEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fof_rootEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fof_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fof_atomEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fof_constantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fof_varEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fof_variable_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tff_inputEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tff_rootEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tff_formula_type_definitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tff_type_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tff_type_atomEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tff_type_constantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tff_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tff_atomEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tff_constantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tff_predefined_function_2_argsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tff_varEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tff_var_declarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tff_variable_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass cnf_inputEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass cnf_rootEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass cnf_formula_type_definitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass cnf_orEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass cnf_notEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass cnf_equalityEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass cnf_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass cnf_constantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass cnf_varEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thf_inputEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thf_rootEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thf_formula_type_definitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thf_type_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thf_type_atomEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thf_type_constantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thf_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thf_atomEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thf_constantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thf_varEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thf_variable_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thf_var_declarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass binaryEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see it.unibz.inf.tptp.parser.ParserPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private ParserPackageImpl()
  {
    super(eNS_URI, ParserFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link ParserPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static ParserPackage init()
  {
    if (isInited) return (ParserPackage)EPackage.Registry.INSTANCE.getEPackage(ParserPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredParserPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    ParserPackageImpl theParserPackage = registeredParserPackage instanceof ParserPackageImpl ? (ParserPackageImpl)registeredParserPackage : new ParserPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theParserPackage.createPackageContents();

    // Initialize created meta-data
    theParserPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theParserPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(ParserPackage.eNS_URI, theParserPackage);
    return theParserPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getModel()
  {
    return modelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getModel_TPTP_input()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getInclude()
  {
    return includeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getInclude_Path()
  {
    return (EAttribute)includeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFof_input()
  {
    return fof_inputEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFof_root()
  {
    return fof_rootEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFof_root_Name()
  {
    return (EAttribute)fof_rootEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFof_root_Formula_role()
  {
    return (EAttribute)fof_rootEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFof_root_Exp()
  {
    return (EReference)fof_rootEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFof_expression()
  {
    return fof_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFof_expression_Fof_atom()
  {
    return (EReference)fof_expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFof_expression_Fof_negation()
  {
    return (EAttribute)fof_expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFof_expression_Fof_exp()
  {
    return (EReference)fof_expressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFof_expression_Fof_quantifier()
  {
    return (EAttribute)fof_expressionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFof_expression_Fof_param()
  {
    return (EReference)fof_expressionEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFof_atom()
  {
    return fof_atomEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getFof_atom_Name()
  {
    return (EAttribute)fof_atomEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFof_constant()
  {
    return fof_constantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFof_constant_Fof_param()
  {
    return (EReference)fof_constantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFof_var()
  {
    return fof_varEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getFof_variable_list()
  {
    return fof_variable_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getFof_variable_list_Params()
  {
    return (EReference)fof_variable_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTff_input()
  {
    return tff_inputEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTff_root()
  {
    return tff_rootEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTff_root_Name()
  {
    return (EAttribute)tff_rootEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTff_root_Formula_role()
  {
    return (EAttribute)tff_rootEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTff_root_Exp()
  {
    return (EReference)tff_rootEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTff_root_Def()
  {
    return (EReference)tff_rootEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTff_formula_type_definition()
  {
    return tff_formula_type_definitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTff_formula_type_definition_Name()
  {
    return (EAttribute)tff_formula_type_definitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTff_formula_type_definition_Exp()
  {
    return (EReference)tff_formula_type_definitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTff_type_expression()
  {
    return tff_type_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTff_type_atom()
  {
    return tff_type_atomEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTff_type_atom_Name()
  {
    return (EAttribute)tff_type_atomEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTff_type_constant()
  {
    return tff_type_constantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTff_type_constant_Param()
  {
    return (EReference)tff_type_constantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTff_expression()
  {
    return tff_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTff_expression_Atom()
  {
    return (EReference)tff_expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTff_expression_Negation()
  {
    return (EAttribute)tff_expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTff_expression_Exp()
  {
    return (EReference)tff_expressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTff_expression_Quantifier()
  {
    return (EAttribute)tff_expressionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTff_expression_Param()
  {
    return (EReference)tff_expressionEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTff_atom()
  {
    return tff_atomEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTff_constant()
  {
    return tff_constantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTff_constant_Name()
  {
    return (EAttribute)tff_constantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTff_constant_Param()
  {
    return (EReference)tff_constantEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTff_constant_Top()
  {
    return (EAttribute)tff_constantEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTff_constant_Bottom()
  {
    return (EAttribute)tff_constantEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTff_predefined_function_2_args()
  {
    return tff_predefined_function_2_argsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTff_predefined_function_2_args_Func()
  {
    return (EAttribute)tff_predefined_function_2_argsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTff_predefined_function_2_args_Param()
  {
    return (EReference)tff_predefined_function_2_argsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTff_var()
  {
    return tff_varEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTff_var_declaration()
  {
    return tff_var_declarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTff_var_declaration_Var()
  {
    return (EReference)tff_var_declarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTff_var_declaration_Vartype()
  {
    return (EReference)tff_var_declarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTff_variable_list()
  {
    return tff_variable_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTff_variable_list_Params()
  {
    return (EReference)tff_variable_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCnf_input()
  {
    return cnf_inputEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCnf_root()
  {
    return cnf_rootEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCnf_root_Name()
  {
    return (EAttribute)cnf_rootEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCnf_root_Formula_role()
  {
    return (EAttribute)cnf_rootEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCnf_root_Exp()
  {
    return (EReference)cnf_rootEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCnf_formula_type_definition()
  {
    return cnf_formula_type_definitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCnf_formula_type_definition_Disjunction()
  {
    return (EReference)cnf_formula_type_definitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCnf_or()
  {
    return cnf_orEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCnf_or_Or()
  {
    return (EReference)cnf_orEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCnf_not()
  {
    return cnf_notEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCnf_not_Negated()
  {
    return (EAttribute)cnf_notEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCnf_not_Literal()
  {
    return (EReference)cnf_notEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCnf_equality()
  {
    return cnf_equalityEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCnf_equality_ExpL()
  {
    return (EReference)cnf_equalityEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCnf_equality_Eq()
  {
    return (EAttribute)cnf_equalityEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCnf_equality_ExpR()
  {
    return (EReference)cnf_equalityEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCnf_expression()
  {
    return cnf_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCnf_expression_Cnf_exp()
  {
    return (EAttribute)cnf_expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getCnf_expression_Name()
  {
    return (EAttribute)cnf_expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCnf_constant()
  {
    return cnf_constantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getCnf_constant_Param()
  {
    return (EReference)cnf_constantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getCnf_var()
  {
    return cnf_varEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getThf_input()
  {
    return thf_inputEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getThf_root()
  {
    return thf_rootEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getThf_root_Name()
  {
    return (EAttribute)thf_rootEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getThf_root_Formula_role()
  {
    return (EAttribute)thf_rootEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getThf_root_Def()
  {
    return (EReference)thf_rootEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getThf_root_Thf_exp()
  {
    return (EReference)thf_rootEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getThf_formula_type_definition()
  {
    return thf_formula_type_definitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getThf_formula_type_definition_Name()
  {
    return (EAttribute)thf_formula_type_definitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getThf_formula_type_definition_Exp()
  {
    return (EReference)thf_formula_type_definitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getThf_type_expression()
  {
    return thf_type_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getThf_type_atom()
  {
    return thf_type_atomEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getThf_type_constant()
  {
    return thf_type_constantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getThf_type_constant_Name()
  {
    return (EAttribute)thf_type_constantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getThf_expression()
  {
    return thf_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getThf_expression_Thf_atom()
  {
    return (EReference)thf_expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getThf_expression_Thf_negation()
  {
    return (EAttribute)thf_expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getThf_expression_Thf_exp()
  {
    return (EReference)thf_expressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getThf_expression_Op()
  {
    return (EAttribute)thf_expressionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getThf_atom()
  {
    return thf_atomEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getThf_atom_Name()
  {
    return (EAttribute)thf_atomEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getThf_constant()
  {
    return thf_constantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getThf_constant_Thf_param()
  {
    return (EReference)thf_constantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getThf_var()
  {
    return thf_varEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getThf_variable_list()
  {
    return thf_variable_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getThf_variable_list_Params()
  {
    return (EReference)thf_variable_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getThf_var_declaration()
  {
    return thf_var_declarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getThf_var_declaration_Var()
  {
    return (EReference)thf_var_declarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getThf_var_declaration_Vartype()
  {
    return (EReference)thf_var_declarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getbinary()
  {
    return binaryEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getbinary_Left()
  {
    return (EReference)binaryEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getbinary_Right()
  {
    return (EReference)binaryEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getoper()
  {
    return operEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getoper_Left()
  {
    return (EReference)operEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getoper_Op()
  {
    return (EAttribute)operEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getoper_Right()
  {
    return (EReference)operEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ParserFactory getParserFactory()
  {
    return (ParserFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    modelEClass = createEClass(MODEL);
    createEReference(modelEClass, MODEL__TPTP_INPUT);

    includeEClass = createEClass(INCLUDE);
    createEAttribute(includeEClass, INCLUDE__PATH);

    fof_inputEClass = createEClass(FOF_INPUT);

    fof_rootEClass = createEClass(FOF_ROOT);
    createEAttribute(fof_rootEClass, FOF_ROOT__NAME);
    createEAttribute(fof_rootEClass, FOF_ROOT__FORMULA_ROLE);
    createEReference(fof_rootEClass, FOF_ROOT__EXP);

    fof_expressionEClass = createEClass(FOF_EXPRESSION);
    createEReference(fof_expressionEClass, FOF_EXPRESSION__FOF_ATOM);
    createEAttribute(fof_expressionEClass, FOF_EXPRESSION__FOF_NEGATION);
    createEReference(fof_expressionEClass, FOF_EXPRESSION__FOF_EXP);
    createEAttribute(fof_expressionEClass, FOF_EXPRESSION__FOF_QUANTIFIER);
    createEReference(fof_expressionEClass, FOF_EXPRESSION__FOF_PARAM);

    fof_atomEClass = createEClass(FOF_ATOM);
    createEAttribute(fof_atomEClass, FOF_ATOM__NAME);

    fof_constantEClass = createEClass(FOF_CONSTANT);
    createEReference(fof_constantEClass, FOF_CONSTANT__FOF_PARAM);

    fof_varEClass = createEClass(FOF_VAR);

    fof_variable_listEClass = createEClass(FOF_VARIABLE_LIST);
    createEReference(fof_variable_listEClass, FOF_VARIABLE_LIST__PARAMS);

    tff_inputEClass = createEClass(TFF_INPUT);

    tff_rootEClass = createEClass(TFF_ROOT);
    createEAttribute(tff_rootEClass, TFF_ROOT__NAME);
    createEAttribute(tff_rootEClass, TFF_ROOT__FORMULA_ROLE);
    createEReference(tff_rootEClass, TFF_ROOT__EXP);
    createEReference(tff_rootEClass, TFF_ROOT__DEF);

    tff_formula_type_definitionEClass = createEClass(TFF_FORMULA_TYPE_DEFINITION);
    createEAttribute(tff_formula_type_definitionEClass, TFF_FORMULA_TYPE_DEFINITION__NAME);
    createEReference(tff_formula_type_definitionEClass, TFF_FORMULA_TYPE_DEFINITION__EXP);

    tff_type_expressionEClass = createEClass(TFF_TYPE_EXPRESSION);

    tff_type_atomEClass = createEClass(TFF_TYPE_ATOM);
    createEAttribute(tff_type_atomEClass, TFF_TYPE_ATOM__NAME);

    tff_type_constantEClass = createEClass(TFF_TYPE_CONSTANT);
    createEReference(tff_type_constantEClass, TFF_TYPE_CONSTANT__PARAM);

    tff_expressionEClass = createEClass(TFF_EXPRESSION);
    createEReference(tff_expressionEClass, TFF_EXPRESSION__ATOM);
    createEAttribute(tff_expressionEClass, TFF_EXPRESSION__NEGATION);
    createEReference(tff_expressionEClass, TFF_EXPRESSION__EXP);
    createEAttribute(tff_expressionEClass, TFF_EXPRESSION__QUANTIFIER);
    createEReference(tff_expressionEClass, TFF_EXPRESSION__PARAM);

    tff_atomEClass = createEClass(TFF_ATOM);

    tff_constantEClass = createEClass(TFF_CONSTANT);
    createEAttribute(tff_constantEClass, TFF_CONSTANT__NAME);
    createEReference(tff_constantEClass, TFF_CONSTANT__PARAM);
    createEAttribute(tff_constantEClass, TFF_CONSTANT__TOP);
    createEAttribute(tff_constantEClass, TFF_CONSTANT__BOTTOM);

    tff_predefined_function_2_argsEClass = createEClass(TFF_PREDEFINED_FUNCTION_2ARGS);
    createEAttribute(tff_predefined_function_2_argsEClass, TFF_PREDEFINED_FUNCTION_2ARGS__FUNC);
    createEReference(tff_predefined_function_2_argsEClass, TFF_PREDEFINED_FUNCTION_2ARGS__PARAM);

    tff_varEClass = createEClass(TFF_VAR);

    tff_var_declarationEClass = createEClass(TFF_VAR_DECLARATION);
    createEReference(tff_var_declarationEClass, TFF_VAR_DECLARATION__VAR);
    createEReference(tff_var_declarationEClass, TFF_VAR_DECLARATION__VARTYPE);

    tff_variable_listEClass = createEClass(TFF_VARIABLE_LIST);
    createEReference(tff_variable_listEClass, TFF_VARIABLE_LIST__PARAMS);

    cnf_inputEClass = createEClass(CNF_INPUT);

    cnf_rootEClass = createEClass(CNF_ROOT);
    createEAttribute(cnf_rootEClass, CNF_ROOT__NAME);
    createEAttribute(cnf_rootEClass, CNF_ROOT__FORMULA_ROLE);
    createEReference(cnf_rootEClass, CNF_ROOT__EXP);

    cnf_formula_type_definitionEClass = createEClass(CNF_FORMULA_TYPE_DEFINITION);
    createEReference(cnf_formula_type_definitionEClass, CNF_FORMULA_TYPE_DEFINITION__DISJUNCTION);

    cnf_orEClass = createEClass(CNF_OR);
    createEReference(cnf_orEClass, CNF_OR__OR);

    cnf_notEClass = createEClass(CNF_NOT);
    createEAttribute(cnf_notEClass, CNF_NOT__NEGATED);
    createEReference(cnf_notEClass, CNF_NOT__LITERAL);

    cnf_equalityEClass = createEClass(CNF_EQUALITY);
    createEReference(cnf_equalityEClass, CNF_EQUALITY__EXP_L);
    createEAttribute(cnf_equalityEClass, CNF_EQUALITY__EQ);
    createEReference(cnf_equalityEClass, CNF_EQUALITY__EXP_R);

    cnf_expressionEClass = createEClass(CNF_EXPRESSION);
    createEAttribute(cnf_expressionEClass, CNF_EXPRESSION__CNF_EXP);
    createEAttribute(cnf_expressionEClass, CNF_EXPRESSION__NAME);

    cnf_constantEClass = createEClass(CNF_CONSTANT);
    createEReference(cnf_constantEClass, CNF_CONSTANT__PARAM);

    cnf_varEClass = createEClass(CNF_VAR);

    thf_inputEClass = createEClass(THF_INPUT);

    thf_rootEClass = createEClass(THF_ROOT);
    createEAttribute(thf_rootEClass, THF_ROOT__NAME);
    createEAttribute(thf_rootEClass, THF_ROOT__FORMULA_ROLE);
    createEReference(thf_rootEClass, THF_ROOT__DEF);
    createEReference(thf_rootEClass, THF_ROOT__THF_EXP);

    thf_formula_type_definitionEClass = createEClass(THF_FORMULA_TYPE_DEFINITION);
    createEAttribute(thf_formula_type_definitionEClass, THF_FORMULA_TYPE_DEFINITION__NAME);
    createEReference(thf_formula_type_definitionEClass, THF_FORMULA_TYPE_DEFINITION__EXP);

    thf_type_expressionEClass = createEClass(THF_TYPE_EXPRESSION);

    thf_type_atomEClass = createEClass(THF_TYPE_ATOM);

    thf_type_constantEClass = createEClass(THF_TYPE_CONSTANT);
    createEAttribute(thf_type_constantEClass, THF_TYPE_CONSTANT__NAME);

    thf_expressionEClass = createEClass(THF_EXPRESSION);
    createEReference(thf_expressionEClass, THF_EXPRESSION__THF_ATOM);
    createEAttribute(thf_expressionEClass, THF_EXPRESSION__THF_NEGATION);
    createEReference(thf_expressionEClass, THF_EXPRESSION__THF_EXP);
    createEAttribute(thf_expressionEClass, THF_EXPRESSION__OP);

    thf_atomEClass = createEClass(THF_ATOM);
    createEAttribute(thf_atomEClass, THF_ATOM__NAME);

    thf_constantEClass = createEClass(THF_CONSTANT);
    createEReference(thf_constantEClass, THF_CONSTANT__THF_PARAM);

    thf_varEClass = createEClass(THF_VAR);

    thf_variable_listEClass = createEClass(THF_VARIABLE_LIST);
    createEReference(thf_variable_listEClass, THF_VARIABLE_LIST__PARAMS);

    thf_var_declarationEClass = createEClass(THF_VAR_DECLARATION);
    createEReference(thf_var_declarationEClass, THF_VAR_DECLARATION__VAR);
    createEReference(thf_var_declarationEClass, THF_VAR_DECLARATION__VARTYPE);

    binaryEClass = createEClass(BINARY);
    createEReference(binaryEClass, BINARY__LEFT);
    createEReference(binaryEClass, BINARY__RIGHT);

    operEClass = createEClass(OPER);
    createEReference(operEClass, OPER__LEFT);
    createEAttribute(operEClass, OPER__OP);
    createEReference(operEClass, OPER__RIGHT);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    includeEClass.getESuperTypes().add(this.getFof_input());
    includeEClass.getESuperTypes().add(this.getTff_input());
    includeEClass.getESuperTypes().add(this.getCnf_input());
    includeEClass.getESuperTypes().add(this.getThf_input());
    fof_rootEClass.getESuperTypes().add(this.getFof_input());
    fof_constantEClass.getESuperTypes().add(this.getFof_atom());
    fof_varEClass.getESuperTypes().add(this.getFof_atom());
    tff_rootEClass.getESuperTypes().add(this.getTff_input());
    tff_type_atomEClass.getESuperTypes().add(this.getTff_type_expression());
    tff_type_constantEClass.getESuperTypes().add(this.getTff_type_atom());
    tff_constantEClass.getESuperTypes().add(this.getTff_atom());
    tff_predefined_function_2_argsEClass.getESuperTypes().add(this.getTff_atom());
    tff_varEClass.getESuperTypes().add(this.getTff_type_atom());
    tff_varEClass.getESuperTypes().add(this.getTff_atom());
    cnf_rootEClass.getESuperTypes().add(this.getCnf_input());
    cnf_constantEClass.getESuperTypes().add(this.getCnf_expression());
    cnf_varEClass.getESuperTypes().add(this.getCnf_expression());
    thf_rootEClass.getESuperTypes().add(this.getThf_input());
    thf_type_atomEClass.getESuperTypes().add(this.getThf_type_expression());
    thf_type_constantEClass.getESuperTypes().add(this.getThf_type_atom());
    thf_constantEClass.getESuperTypes().add(this.getThf_atom());
    thf_varEClass.getESuperTypes().add(this.getThf_atom());
    binaryEClass.getESuperTypes().add(this.getFof_expression());
    binaryEClass.getESuperTypes().add(this.getTff_expression());
    binaryEClass.getESuperTypes().add(this.getThf_expression());
    operEClass.getESuperTypes().add(this.getTff_type_expression());
    operEClass.getESuperTypes().add(this.getThf_type_expression());

    // Initialize classes and features; add operations and parameters
    initEClass(modelEClass, Model.class, "Model", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getModel_TPTP_input(), ecorePackage.getEObject(), null, "TPTP_input", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(includeEClass, Include.class, "Include", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getInclude_Path(), ecorePackage.getEString(), "path", null, 0, 1, Include.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fof_inputEClass, Fof_input.class, "Fof_input", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(fof_rootEClass, Fof_root.class, "Fof_root", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFof_root_Name(), ecorePackage.getEString(), "name", null, 0, 1, Fof_root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFof_root_Formula_role(), ecorePackage.getEString(), "formula_role", null, 0, 1, Fof_root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFof_root_Exp(), this.getFof_expression(), null, "exp", null, 0, 1, Fof_root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fof_expressionEClass, Fof_expression.class, "Fof_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFof_expression_Fof_atom(), this.getFof_atom(), null, "fof_atom", null, 0, 1, Fof_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFof_expression_Fof_negation(), ecorePackage.getEBoolean(), "fof_negation", null, 0, 1, Fof_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFof_expression_Fof_exp(), this.getFof_expression(), null, "fof_exp", null, 0, 1, Fof_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFof_expression_Fof_quantifier(), ecorePackage.getEString(), "fof_quantifier", null, 0, 1, Fof_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFof_expression_Fof_param(), this.getFof_variable_list(), null, "fof_param", null, 0, 1, Fof_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fof_atomEClass, Fof_atom.class, "Fof_atom", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFof_atom_Name(), ecorePackage.getEString(), "name", null, 0, 1, Fof_atom.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fof_constantEClass, Fof_constant.class, "Fof_constant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFof_constant_Fof_param(), this.getFof_atom(), null, "fof_param", null, 0, -1, Fof_constant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fof_varEClass, Fof_var.class, "Fof_var", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(fof_variable_listEClass, Fof_variable_list.class, "Fof_variable_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFof_variable_list_Params(), this.getFof_var(), null, "params", null, 0, -1, Fof_variable_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tff_inputEClass, Tff_input.class, "Tff_input", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(tff_rootEClass, Tff_root.class, "Tff_root", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTff_root_Name(), ecorePackage.getEString(), "name", null, 0, 1, Tff_root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTff_root_Formula_role(), ecorePackage.getEString(), "formula_role", null, 0, 1, Tff_root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTff_root_Exp(), this.getTff_expression(), null, "exp", null, 0, 1, Tff_root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTff_root_Def(), this.getTff_formula_type_definition(), null, "def", null, 0, 1, Tff_root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tff_formula_type_definitionEClass, Tff_formula_type_definition.class, "Tff_formula_type_definition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTff_formula_type_definition_Name(), ecorePackage.getEString(), "name", null, 0, 1, Tff_formula_type_definition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTff_formula_type_definition_Exp(), ecorePackage.getEObject(), null, "exp", null, 0, 1, Tff_formula_type_definition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tff_type_expressionEClass, Tff_type_expression.class, "Tff_type_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(tff_type_atomEClass, Tff_type_atom.class, "Tff_type_atom", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTff_type_atom_Name(), ecorePackage.getEString(), "name", null, 0, 1, Tff_type_atom.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tff_type_constantEClass, Tff_type_constant.class, "Tff_type_constant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTff_type_constant_Param(), this.getTff_type_atom(), null, "param", null, 0, -1, Tff_type_constant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tff_expressionEClass, Tff_expression.class, "Tff_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTff_expression_Atom(), this.getTff_atom(), null, "atom", null, 0, 1, Tff_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTff_expression_Negation(), ecorePackage.getEBoolean(), "negation", null, 0, 1, Tff_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTff_expression_Exp(), ecorePackage.getEObject(), null, "exp", null, 0, 1, Tff_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTff_expression_Quantifier(), ecorePackage.getEString(), "quantifier", null, 0, 1, Tff_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTff_expression_Param(), ecorePackage.getEObject(), null, "param", null, 0, 1, Tff_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tff_atomEClass, Tff_atom.class, "Tff_atom", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(tff_constantEClass, Tff_constant.class, "Tff_constant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTff_constant_Name(), ecorePackage.getEString(), "name", null, 0, 1, Tff_constant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTff_constant_Param(), ecorePackage.getEObject(), null, "param", null, 0, -1, Tff_constant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTff_constant_Top(), ecorePackage.getEString(), "top", null, 0, 1, Tff_constant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getTff_constant_Bottom(), ecorePackage.getEString(), "bottom", null, 0, 1, Tff_constant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tff_predefined_function_2_argsEClass, Tff_predefined_function_2_args.class, "Tff_predefined_function_2_args", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTff_predefined_function_2_args_Func(), ecorePackage.getEString(), "func", null, 0, 1, Tff_predefined_function_2_args.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTff_predefined_function_2_args_Param(), this.getTff_expression(), null, "param", null, 0, -1, Tff_predefined_function_2_args.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tff_varEClass, Tff_var.class, "Tff_var", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(tff_var_declarationEClass, Tff_var_declaration.class, "Tff_var_declaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTff_var_declaration_Var(), this.getTff_var(), null, "var", null, 0, 1, Tff_var_declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTff_var_declaration_Vartype(), this.getTff_type_expression(), null, "vartype", null, 0, 1, Tff_var_declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tff_variable_listEClass, Tff_variable_list.class, "Tff_variable_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTff_variable_list_Params(), this.getTff_var_declaration(), null, "params", null, 0, -1, Tff_variable_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(cnf_inputEClass, Cnf_input.class, "Cnf_input", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(cnf_rootEClass, Cnf_root.class, "Cnf_root", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCnf_root_Name(), ecorePackage.getEString(), "name", null, 0, 1, Cnf_root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCnf_root_Formula_role(), ecorePackage.getEString(), "formula_role", null, 0, 1, Cnf_root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCnf_root_Exp(), this.getCnf_formula_type_definition(), null, "exp", null, 0, 1, Cnf_root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(cnf_formula_type_definitionEClass, Cnf_formula_type_definition.class, "Cnf_formula_type_definition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCnf_formula_type_definition_Disjunction(), this.getCnf_or(), null, "disjunction", null, 0, 1, Cnf_formula_type_definition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(cnf_orEClass, Cnf_or.class, "Cnf_or", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCnf_or_Or(), this.getCnf_not(), null, "or", null, 0, -1, Cnf_or.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(cnf_notEClass, Cnf_not.class, "Cnf_not", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCnf_not_Negated(), ecorePackage.getEBoolean(), "negated", null, 0, 1, Cnf_not.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCnf_not_Literal(), this.getCnf_equality(), null, "literal", null, 0, 1, Cnf_not.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(cnf_equalityEClass, Cnf_equality.class, "Cnf_equality", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCnf_equality_ExpL(), this.getCnf_expression(), null, "expL", null, 0, 1, Cnf_equality.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCnf_equality_Eq(), ecorePackage.getEString(), "eq", null, 0, 1, Cnf_equality.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCnf_equality_ExpR(), this.getCnf_expression(), null, "expR", null, 0, 1, Cnf_equality.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(cnf_expressionEClass, Cnf_expression.class, "Cnf_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCnf_expression_Cnf_exp(), ecorePackage.getEString(), "cnf_exp", null, 0, 1, Cnf_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getCnf_expression_Name(), ecorePackage.getEString(), "name", null, 0, 1, Cnf_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(cnf_constantEClass, Cnf_constant.class, "Cnf_constant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCnf_constant_Param(), this.getCnf_expression(), null, "param", null, 0, -1, Cnf_constant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(cnf_varEClass, Cnf_var.class, "Cnf_var", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(thf_inputEClass, Thf_input.class, "Thf_input", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(thf_rootEClass, Thf_root.class, "Thf_root", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getThf_root_Name(), ecorePackage.getEString(), "name", null, 0, 1, Thf_root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getThf_root_Formula_role(), ecorePackage.getEString(), "formula_role", null, 0, 1, Thf_root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getThf_root_Def(), this.getThf_formula_type_definition(), null, "def", null, 0, 1, Thf_root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getThf_root_Thf_exp(), this.getThf_expression(), null, "thf_exp", null, 0, 1, Thf_root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(thf_formula_type_definitionEClass, Thf_formula_type_definition.class, "Thf_formula_type_definition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getThf_formula_type_definition_Name(), ecorePackage.getEString(), "name", null, 0, 1, Thf_formula_type_definition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getThf_formula_type_definition_Exp(), this.getThf_type_expression(), null, "exp", null, 0, 1, Thf_formula_type_definition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(thf_type_expressionEClass, Thf_type_expression.class, "Thf_type_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(thf_type_atomEClass, Thf_type_atom.class, "Thf_type_atom", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(thf_type_constantEClass, Thf_type_constant.class, "Thf_type_constant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getThf_type_constant_Name(), ecorePackage.getEString(), "name", null, 0, 1, Thf_type_constant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(thf_expressionEClass, Thf_expression.class, "Thf_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getThf_expression_Thf_atom(), this.getThf_atom(), null, "thf_atom", null, 0, 1, Thf_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getThf_expression_Thf_negation(), ecorePackage.getEBoolean(), "thf_negation", null, 0, 1, Thf_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getThf_expression_Thf_exp(), ecorePackage.getEObject(), null, "thf_exp", null, 0, 1, Thf_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getThf_expression_Op(), ecorePackage.getEString(), "op", null, 0, 1, Thf_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(thf_atomEClass, Thf_atom.class, "Thf_atom", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getThf_atom_Name(), ecorePackage.getEString(), "name", null, 0, 1, Thf_atom.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(thf_constantEClass, Thf_constant.class, "Thf_constant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getThf_constant_Thf_param(), this.getThf_atom(), null, "thf_param", null, 0, -1, Thf_constant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(thf_varEClass, Thf_var.class, "Thf_var", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(thf_variable_listEClass, Thf_variable_list.class, "Thf_variable_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getThf_variable_list_Params(), this.getThf_var_declaration(), null, "params", null, 0, -1, Thf_variable_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(thf_var_declarationEClass, Thf_var_declaration.class, "Thf_var_declaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getThf_var_declaration_Var(), this.getThf_var(), null, "var", null, 0, 1, Thf_var_declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getThf_var_declaration_Vartype(), this.getThf_type_expression(), null, "vartype", null, 0, 1, Thf_var_declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(binaryEClass, binary.class, "binary", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getbinary_Left(), ecorePackage.getEObject(), null, "left", null, 0, 1, binary.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getbinary_Right(), ecorePackage.getEObject(), null, "right", null, 0, 1, binary.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(operEClass, oper.class, "oper", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getoper_Left(), ecorePackage.getEObject(), null, "left", null, 0, 1, oper.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getoper_Op(), ecorePackage.getEString(), "op", null, 0, 1, oper.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getoper_Right(), ecorePackage.getEObject(), null, "right", null, 0, -1, oper.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //ParserPackageImpl
