/**
 * generated by Xtext 2.12.0
 */
package it.unibz.inf.tptp.parser.impl;

import it.unibz.inf.tptp.parser.Model;
import it.unibz.inf.tptp.parser.ParserFactory;
import it.unibz.inf.tptp.parser.ParserPackage;
import it.unibz.inf.tptp.parser.binary;
import it.unibz.inf.tptp.parser.cnf_constant;
import it.unibz.inf.tptp.parser.cnf_equality;
import it.unibz.inf.tptp.parser.cnf_expression;
import it.unibz.inf.tptp.parser.cnf_formula_type_definition;
import it.unibz.inf.tptp.parser.cnf_input;
import it.unibz.inf.tptp.parser.cnf_not;
import it.unibz.inf.tptp.parser.cnf_or;
import it.unibz.inf.tptp.parser.cnf_root;
import it.unibz.inf.tptp.parser.cnf_var;
import it.unibz.inf.tptp.parser.fof_atom;
import it.unibz.inf.tptp.parser.fof_constant;
import it.unibz.inf.tptp.parser.fof_expression;
import it.unibz.inf.tptp.parser.fof_input;
import it.unibz.inf.tptp.parser.fof_root;
import it.unibz.inf.tptp.parser.fof_var;
import it.unibz.inf.tptp.parser.fof_variable_list;
import it.unibz.inf.tptp.parser.include;
import it.unibz.inf.tptp.parser.oper;
import it.unibz.inf.tptp.parser.tff_atom;
import it.unibz.inf.tptp.parser.tff_constant;
import it.unibz.inf.tptp.parser.tff_expression;
import it.unibz.inf.tptp.parser.tff_formula_type_definition;
import it.unibz.inf.tptp.parser.tff_input;
import it.unibz.inf.tptp.parser.tff_predefined_function_2_args;
import it.unibz.inf.tptp.parser.tff_root;
import it.unibz.inf.tptp.parser.tff_type_atom;
import it.unibz.inf.tptp.parser.tff_type_constant;
import it.unibz.inf.tptp.parser.tff_type_expression;
import it.unibz.inf.tptp.parser.tff_var;
import it.unibz.inf.tptp.parser.tff_var_declaration;
import it.unibz.inf.tptp.parser.tff_variable_list;
import it.unibz.inf.tptp.parser.thf_atom;
import it.unibz.inf.tptp.parser.thf_constant;
import it.unibz.inf.tptp.parser.thf_expression;
import it.unibz.inf.tptp.parser.thf_formula_type_definition;
import it.unibz.inf.tptp.parser.thf_input;
import it.unibz.inf.tptp.parser.thf_root;
import it.unibz.inf.tptp.parser.thf_type_atom;
import it.unibz.inf.tptp.parser.thf_type_constant;
import it.unibz.inf.tptp.parser.thf_type_expression;
import it.unibz.inf.tptp.parser.thf_var;
import it.unibz.inf.tptp.parser.thf_var_declaration;
import it.unibz.inf.tptp.parser.thf_variable_list;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class ParserPackageImpl extends EPackageImpl implements ParserPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass includeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fof_inputEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fof_rootEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fof_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fof_atomEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fof_constantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fof_varEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fof_variable_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tff_inputEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tff_rootEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tff_formula_type_definitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tff_type_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tff_type_atomEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tff_type_constantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tff_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tff_atomEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tff_constantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tff_predefined_function_2_argsEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tff_varEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tff_var_declarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass tff_variable_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass cnf_inputEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass cnf_rootEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass cnf_formula_type_definitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass cnf_orEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass cnf_notEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass cnf_equalityEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass cnf_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass cnf_constantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass cnf_varEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thf_inputEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thf_rootEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thf_formula_type_definitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thf_type_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thf_type_atomEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thf_type_constantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thf_expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thf_atomEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thf_constantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thf_varEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thf_variable_listEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass thf_var_declarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass binaryEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass operEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see it.unibz.inf.tptp.parser.ParserPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private ParserPackageImpl()
  {
    super(eNS_URI, ParserFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link ParserPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static ParserPackage init()
  {
    if (isInited) return (ParserPackage)EPackage.Registry.INSTANCE.getEPackage(ParserPackage.eNS_URI);

    // Obtain or create and register package
    ParserPackageImpl theParserPackage = (ParserPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof ParserPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new ParserPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theParserPackage.createPackageContents();

    // Initialize created meta-data
    theParserPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theParserPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(ParserPackage.eNS_URI, theParserPackage);
    return theParserPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getModel()
  {
    return modelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getModel_TPTP_input()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getinclude()
  {
    return includeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getinclude_Path()
  {
    return (EAttribute)includeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getfof_input()
  {
    return fof_inputEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getfof_root()
  {
    return fof_rootEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getfof_root_Name()
  {
    return (EAttribute)fof_rootEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getfof_root_Formula_role()
  {
    return (EAttribute)fof_rootEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getfof_root_Exp()
  {
    return (EReference)fof_rootEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getfof_expression()
  {
    return fof_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getfof_expression_Fof_atom()
  {
    return (EReference)fof_expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getfof_expression_Fof_negation()
  {
    return (EAttribute)fof_expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getfof_expression_Fof_exp()
  {
    return (EReference)fof_expressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getfof_expression_Fof_quantifier()
  {
    return (EAttribute)fof_expressionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getfof_expression_Fof_param()
  {
    return (EReference)fof_expressionEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getfof_atom()
  {
    return fof_atomEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getfof_atom_Name()
  {
    return (EAttribute)fof_atomEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getfof_constant()
  {
    return fof_constantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getfof_constant_Fof_param()
  {
    return (EReference)fof_constantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getfof_var()
  {
    return fof_varEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getfof_variable_list()
  {
    return fof_variable_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getfof_variable_list_Params()
  {
    return (EReference)fof_variable_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettff_input()
  {
    return tff_inputEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettff_root()
  {
    return tff_rootEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute gettff_root_Name()
  {
    return (EAttribute)tff_rootEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute gettff_root_Formula_role()
  {
    return (EAttribute)tff_rootEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettff_root_Exp()
  {
    return (EReference)tff_rootEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettff_root_Def()
  {
    return (EReference)tff_rootEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettff_formula_type_definition()
  {
    return tff_formula_type_definitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute gettff_formula_type_definition_Name()
  {
    return (EAttribute)tff_formula_type_definitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettff_formula_type_definition_Exp()
  {
    return (EReference)tff_formula_type_definitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettff_type_expression()
  {
    return tff_type_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettff_type_atom()
  {
    return tff_type_atomEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute gettff_type_atom_Name()
  {
    return (EAttribute)tff_type_atomEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettff_type_constant()
  {
    return tff_type_constantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettff_type_constant_Param()
  {
    return (EReference)tff_type_constantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettff_expression()
  {
    return tff_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettff_expression_Atom()
  {
    return (EReference)tff_expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute gettff_expression_Negation()
  {
    return (EAttribute)tff_expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettff_expression_Exp()
  {
    return (EReference)tff_expressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute gettff_expression_Quantifier()
  {
    return (EAttribute)tff_expressionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettff_expression_Param()
  {
    return (EReference)tff_expressionEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettff_atom()
  {
    return tff_atomEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettff_constant()
  {
    return tff_constantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute gettff_constant_Name()
  {
    return (EAttribute)tff_constantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettff_constant_Param()
  {
    return (EReference)tff_constantEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute gettff_constant_Top()
  {
    return (EAttribute)tff_constantEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute gettff_constant_Bottom()
  {
    return (EAttribute)tff_constantEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettff_predefined_function_2_args()
  {
    return tff_predefined_function_2_argsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute gettff_predefined_function_2_args_Func()
  {
    return (EAttribute)tff_predefined_function_2_argsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettff_predefined_function_2_args_Param()
  {
    return (EReference)tff_predefined_function_2_argsEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettff_var()
  {
    return tff_varEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettff_var_declaration()
  {
    return tff_var_declarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettff_var_declaration_Var()
  {
    return (EReference)tff_var_declarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettff_var_declaration_Vartype()
  {
    return (EReference)tff_var_declarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettff_variable_list()
  {
    return tff_variable_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference gettff_variable_list_Params()
  {
    return (EReference)tff_variable_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getcnf_input()
  {
    return cnf_inputEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getcnf_root()
  {
    return cnf_rootEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getcnf_root_Name()
  {
    return (EAttribute)cnf_rootEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getcnf_root_Formula_role()
  {
    return (EAttribute)cnf_rootEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getcnf_root_Exp()
  {
    return (EReference)cnf_rootEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getcnf_formula_type_definition()
  {
    return cnf_formula_type_definitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getcnf_formula_type_definition_Disjunction()
  {
    return (EReference)cnf_formula_type_definitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getcnf_or()
  {
    return cnf_orEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getcnf_or_Or()
  {
    return (EReference)cnf_orEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getcnf_not()
  {
    return cnf_notEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getcnf_not_Negated()
  {
    return (EAttribute)cnf_notEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getcnf_not_Literal()
  {
    return (EReference)cnf_notEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getcnf_equality()
  {
    return cnf_equalityEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getcnf_equality_ExpL()
  {
    return (EReference)cnf_equalityEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getcnf_equality_Eq()
  {
    return (EAttribute)cnf_equalityEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getcnf_equality_ExpR()
  {
    return (EReference)cnf_equalityEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getcnf_expression()
  {
    return cnf_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getcnf_expression_Cnf_exp()
  {
    return (EAttribute)cnf_expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getcnf_expression_Name()
  {
    return (EAttribute)cnf_expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getcnf_constant()
  {
    return cnf_constantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getcnf_constant_Param()
  {
    return (EReference)cnf_constantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getcnf_var()
  {
    return cnf_varEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getthf_input()
  {
    return thf_inputEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getthf_root()
  {
    return thf_rootEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getthf_root_Name()
  {
    return (EAttribute)thf_rootEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getthf_root_Formula_role()
  {
    return (EAttribute)thf_rootEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getthf_root_Def()
  {
    return (EReference)thf_rootEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getthf_root_Thf_exp()
  {
    return (EReference)thf_rootEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getthf_formula_type_definition()
  {
    return thf_formula_type_definitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getthf_formula_type_definition_Name()
  {
    return (EAttribute)thf_formula_type_definitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getthf_formula_type_definition_Exp()
  {
    return (EReference)thf_formula_type_definitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getthf_type_expression()
  {
    return thf_type_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getthf_type_atom()
  {
    return thf_type_atomEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getthf_type_constant()
  {
    return thf_type_constantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getthf_type_constant_Name()
  {
    return (EAttribute)thf_type_constantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getthf_expression()
  {
    return thf_expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getthf_expression_Thf_atom()
  {
    return (EReference)thf_expressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getthf_expression_Thf_negation()
  {
    return (EAttribute)thf_expressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getthf_expression_Thf_exp()
  {
    return (EReference)thf_expressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getthf_expression_Op()
  {
    return (EAttribute)thf_expressionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getthf_atom()
  {
    return thf_atomEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getthf_atom_Name()
  {
    return (EAttribute)thf_atomEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getthf_constant()
  {
    return thf_constantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getthf_constant_Thf_param()
  {
    return (EReference)thf_constantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getthf_var()
  {
    return thf_varEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getthf_variable_list()
  {
    return thf_variable_listEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getthf_variable_list_Params()
  {
    return (EReference)thf_variable_listEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getthf_var_declaration()
  {
    return thf_var_declarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getthf_var_declaration_Var()
  {
    return (EReference)thf_var_declarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getthf_var_declaration_Vartype()
  {
    return (EReference)thf_var_declarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getbinary()
  {
    return binaryEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getbinary_Left()
  {
    return (EReference)binaryEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getbinary_Right()
  {
    return (EReference)binaryEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getoper()
  {
    return operEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getoper_Left()
  {
    return (EReference)operEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getoper_Op()
  {
    return (EAttribute)operEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getoper_Right()
  {
    return (EReference)operEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ParserFactory getParserFactory()
  {
    return (ParserFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    modelEClass = createEClass(MODEL);
    createEReference(modelEClass, MODEL__TPTP_INPUT);

    includeEClass = createEClass(INCLUDE);
    createEAttribute(includeEClass, INCLUDE__PATH);

    fof_inputEClass = createEClass(FOF_INPUT);

    fof_rootEClass = createEClass(FOF_ROOT);
    createEAttribute(fof_rootEClass, FOF_ROOT__NAME);
    createEAttribute(fof_rootEClass, FOF_ROOT__FORMULA_ROLE);
    createEReference(fof_rootEClass, FOF_ROOT__EXP);

    fof_expressionEClass = createEClass(FOF_EXPRESSION);
    createEReference(fof_expressionEClass, FOF_EXPRESSION__FOF_ATOM);
    createEAttribute(fof_expressionEClass, FOF_EXPRESSION__FOF_NEGATION);
    createEReference(fof_expressionEClass, FOF_EXPRESSION__FOF_EXP);
    createEAttribute(fof_expressionEClass, FOF_EXPRESSION__FOF_QUANTIFIER);
    createEReference(fof_expressionEClass, FOF_EXPRESSION__FOF_PARAM);

    fof_atomEClass = createEClass(FOF_ATOM);
    createEAttribute(fof_atomEClass, FOF_ATOM__NAME);

    fof_constantEClass = createEClass(FOF_CONSTANT);
    createEReference(fof_constantEClass, FOF_CONSTANT__FOF_PARAM);

    fof_varEClass = createEClass(FOF_VAR);

    fof_variable_listEClass = createEClass(FOF_VARIABLE_LIST);
    createEReference(fof_variable_listEClass, FOF_VARIABLE_LIST__PARAMS);

    tff_inputEClass = createEClass(TFF_INPUT);

    tff_rootEClass = createEClass(TFF_ROOT);
    createEAttribute(tff_rootEClass, TFF_ROOT__NAME);
    createEAttribute(tff_rootEClass, TFF_ROOT__FORMULA_ROLE);
    createEReference(tff_rootEClass, TFF_ROOT__EXP);
    createEReference(tff_rootEClass, TFF_ROOT__DEF);

    tff_formula_type_definitionEClass = createEClass(TFF_FORMULA_TYPE_DEFINITION);
    createEAttribute(tff_formula_type_definitionEClass, TFF_FORMULA_TYPE_DEFINITION__NAME);
    createEReference(tff_formula_type_definitionEClass, TFF_FORMULA_TYPE_DEFINITION__EXP);

    tff_type_expressionEClass = createEClass(TFF_TYPE_EXPRESSION);

    tff_type_atomEClass = createEClass(TFF_TYPE_ATOM);
    createEAttribute(tff_type_atomEClass, TFF_TYPE_ATOM__NAME);

    tff_type_constantEClass = createEClass(TFF_TYPE_CONSTANT);
    createEReference(tff_type_constantEClass, TFF_TYPE_CONSTANT__PARAM);

    tff_expressionEClass = createEClass(TFF_EXPRESSION);
    createEReference(tff_expressionEClass, TFF_EXPRESSION__ATOM);
    createEAttribute(tff_expressionEClass, TFF_EXPRESSION__NEGATION);
    createEReference(tff_expressionEClass, TFF_EXPRESSION__EXP);
    createEAttribute(tff_expressionEClass, TFF_EXPRESSION__QUANTIFIER);
    createEReference(tff_expressionEClass, TFF_EXPRESSION__PARAM);

    tff_atomEClass = createEClass(TFF_ATOM);

    tff_constantEClass = createEClass(TFF_CONSTANT);
    createEAttribute(tff_constantEClass, TFF_CONSTANT__NAME);
    createEReference(tff_constantEClass, TFF_CONSTANT__PARAM);
    createEAttribute(tff_constantEClass, TFF_CONSTANT__TOP);
    createEAttribute(tff_constantEClass, TFF_CONSTANT__BOTTOM);

    tff_predefined_function_2_argsEClass = createEClass(TFF_PREDEFINED_FUNCTION_2ARGS);
    createEAttribute(tff_predefined_function_2_argsEClass, TFF_PREDEFINED_FUNCTION_2ARGS__FUNC);
    createEReference(tff_predefined_function_2_argsEClass, TFF_PREDEFINED_FUNCTION_2ARGS__PARAM);

    tff_varEClass = createEClass(TFF_VAR);

    tff_var_declarationEClass = createEClass(TFF_VAR_DECLARATION);
    createEReference(tff_var_declarationEClass, TFF_VAR_DECLARATION__VAR);
    createEReference(tff_var_declarationEClass, TFF_VAR_DECLARATION__VARTYPE);

    tff_variable_listEClass = createEClass(TFF_VARIABLE_LIST);
    createEReference(tff_variable_listEClass, TFF_VARIABLE_LIST__PARAMS);

    cnf_inputEClass = createEClass(CNF_INPUT);

    cnf_rootEClass = createEClass(CNF_ROOT);
    createEAttribute(cnf_rootEClass, CNF_ROOT__NAME);
    createEAttribute(cnf_rootEClass, CNF_ROOT__FORMULA_ROLE);
    createEReference(cnf_rootEClass, CNF_ROOT__EXP);

    cnf_formula_type_definitionEClass = createEClass(CNF_FORMULA_TYPE_DEFINITION);
    createEReference(cnf_formula_type_definitionEClass, CNF_FORMULA_TYPE_DEFINITION__DISJUNCTION);

    cnf_orEClass = createEClass(CNF_OR);
    createEReference(cnf_orEClass, CNF_OR__OR);

    cnf_notEClass = createEClass(CNF_NOT);
    createEAttribute(cnf_notEClass, CNF_NOT__NEGATED);
    createEReference(cnf_notEClass, CNF_NOT__LITERAL);

    cnf_equalityEClass = createEClass(CNF_EQUALITY);
    createEReference(cnf_equalityEClass, CNF_EQUALITY__EXP_L);
    createEAttribute(cnf_equalityEClass, CNF_EQUALITY__EQ);
    createEReference(cnf_equalityEClass, CNF_EQUALITY__EXP_R);

    cnf_expressionEClass = createEClass(CNF_EXPRESSION);
    createEAttribute(cnf_expressionEClass, CNF_EXPRESSION__CNF_EXP);
    createEAttribute(cnf_expressionEClass, CNF_EXPRESSION__NAME);

    cnf_constantEClass = createEClass(CNF_CONSTANT);
    createEReference(cnf_constantEClass, CNF_CONSTANT__PARAM);

    cnf_varEClass = createEClass(CNF_VAR);

    thf_inputEClass = createEClass(THF_INPUT);

    thf_rootEClass = createEClass(THF_ROOT);
    createEAttribute(thf_rootEClass, THF_ROOT__NAME);
    createEAttribute(thf_rootEClass, THF_ROOT__FORMULA_ROLE);
    createEReference(thf_rootEClass, THF_ROOT__DEF);
    createEReference(thf_rootEClass, THF_ROOT__THF_EXP);

    thf_formula_type_definitionEClass = createEClass(THF_FORMULA_TYPE_DEFINITION);
    createEAttribute(thf_formula_type_definitionEClass, THF_FORMULA_TYPE_DEFINITION__NAME);
    createEReference(thf_formula_type_definitionEClass, THF_FORMULA_TYPE_DEFINITION__EXP);

    thf_type_expressionEClass = createEClass(THF_TYPE_EXPRESSION);

    thf_type_atomEClass = createEClass(THF_TYPE_ATOM);

    thf_type_constantEClass = createEClass(THF_TYPE_CONSTANT);
    createEAttribute(thf_type_constantEClass, THF_TYPE_CONSTANT__NAME);

    thf_expressionEClass = createEClass(THF_EXPRESSION);
    createEReference(thf_expressionEClass, THF_EXPRESSION__THF_ATOM);
    createEAttribute(thf_expressionEClass, THF_EXPRESSION__THF_NEGATION);
    createEReference(thf_expressionEClass, THF_EXPRESSION__THF_EXP);
    createEAttribute(thf_expressionEClass, THF_EXPRESSION__OP);

    thf_atomEClass = createEClass(THF_ATOM);
    createEAttribute(thf_atomEClass, THF_ATOM__NAME);

    thf_constantEClass = createEClass(THF_CONSTANT);
    createEReference(thf_constantEClass, THF_CONSTANT__THF_PARAM);

    thf_varEClass = createEClass(THF_VAR);

    thf_variable_listEClass = createEClass(THF_VARIABLE_LIST);
    createEReference(thf_variable_listEClass, THF_VARIABLE_LIST__PARAMS);

    thf_var_declarationEClass = createEClass(THF_VAR_DECLARATION);
    createEReference(thf_var_declarationEClass, THF_VAR_DECLARATION__VAR);
    createEReference(thf_var_declarationEClass, THF_VAR_DECLARATION__VARTYPE);

    binaryEClass = createEClass(BINARY);
    createEReference(binaryEClass, BINARY__LEFT);
    createEReference(binaryEClass, BINARY__RIGHT);

    operEClass = createEClass(OPER);
    createEReference(operEClass, OPER__LEFT);
    createEAttribute(operEClass, OPER__OP);
    createEReference(operEClass, OPER__RIGHT);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    includeEClass.getESuperTypes().add(this.getfof_input());
    includeEClass.getESuperTypes().add(this.gettff_input());
    includeEClass.getESuperTypes().add(this.getcnf_input());
    includeEClass.getESuperTypes().add(this.getthf_input());
    fof_rootEClass.getESuperTypes().add(this.getfof_input());
    fof_constantEClass.getESuperTypes().add(this.getfof_atom());
    fof_varEClass.getESuperTypes().add(this.getfof_atom());
    tff_rootEClass.getESuperTypes().add(this.gettff_input());
    tff_type_atomEClass.getESuperTypes().add(this.gettff_type_expression());
    tff_type_constantEClass.getESuperTypes().add(this.gettff_type_atom());
    tff_constantEClass.getESuperTypes().add(this.gettff_atom());
    tff_predefined_function_2_argsEClass.getESuperTypes().add(this.gettff_atom());
    tff_varEClass.getESuperTypes().add(this.gettff_type_atom());
    tff_varEClass.getESuperTypes().add(this.gettff_atom());
    cnf_rootEClass.getESuperTypes().add(this.getcnf_input());
    cnf_constantEClass.getESuperTypes().add(this.getcnf_expression());
    cnf_varEClass.getESuperTypes().add(this.getcnf_expression());
    thf_rootEClass.getESuperTypes().add(this.getthf_input());
    thf_type_atomEClass.getESuperTypes().add(this.getthf_type_expression());
    thf_type_constantEClass.getESuperTypes().add(this.getthf_type_atom());
    thf_constantEClass.getESuperTypes().add(this.getthf_atom());
    thf_varEClass.getESuperTypes().add(this.getthf_atom());
    binaryEClass.getESuperTypes().add(this.getfof_expression());
    binaryEClass.getESuperTypes().add(this.gettff_expression());
    binaryEClass.getESuperTypes().add(this.getthf_expression());
    operEClass.getESuperTypes().add(this.gettff_type_expression());
    operEClass.getESuperTypes().add(this.getthf_type_expression());

    // Initialize classes and features; add operations and parameters
    initEClass(modelEClass, Model.class, "Model", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getModel_TPTP_input(), ecorePackage.getEObject(), null, "TPTP_input", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(includeEClass, include.class, "include", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getinclude_Path(), ecorePackage.getEString(), "path", null, 0, 1, include.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fof_inputEClass, fof_input.class, "fof_input", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(fof_rootEClass, fof_root.class, "fof_root", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getfof_root_Name(), ecorePackage.getEString(), "name", null, 0, 1, fof_root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getfof_root_Formula_role(), ecorePackage.getEString(), "formula_role", null, 0, 1, fof_root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getfof_root_Exp(), this.getfof_expression(), null, "exp", null, 0, 1, fof_root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fof_expressionEClass, fof_expression.class, "fof_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getfof_expression_Fof_atom(), this.getfof_atom(), null, "fof_atom", null, 0, 1, fof_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getfof_expression_Fof_negation(), ecorePackage.getEBoolean(), "fof_negation", null, 0, 1, fof_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getfof_expression_Fof_exp(), this.getfof_expression(), null, "fof_exp", null, 0, 1, fof_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getfof_expression_Fof_quantifier(), ecorePackage.getEString(), "fof_quantifier", null, 0, 1, fof_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getfof_expression_Fof_param(), this.getfof_variable_list(), null, "fof_param", null, 0, 1, fof_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fof_atomEClass, fof_atom.class, "fof_atom", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getfof_atom_Name(), ecorePackage.getEString(), "name", null, 0, 1, fof_atom.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fof_constantEClass, fof_constant.class, "fof_constant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getfof_constant_Fof_param(), this.getfof_atom(), null, "fof_param", null, 0, -1, fof_constant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fof_varEClass, fof_var.class, "fof_var", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(fof_variable_listEClass, fof_variable_list.class, "fof_variable_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getfof_variable_list_Params(), this.getfof_var(), null, "params", null, 0, -1, fof_variable_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tff_inputEClass, tff_input.class, "tff_input", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(tff_rootEClass, tff_root.class, "tff_root", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(gettff_root_Name(), ecorePackage.getEString(), "name", null, 0, 1, tff_root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(gettff_root_Formula_role(), ecorePackage.getEString(), "formula_role", null, 0, 1, tff_root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(gettff_root_Exp(), this.gettff_expression(), null, "exp", null, 0, 1, tff_root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(gettff_root_Def(), this.gettff_formula_type_definition(), null, "def", null, 0, 1, tff_root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tff_formula_type_definitionEClass, tff_formula_type_definition.class, "tff_formula_type_definition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(gettff_formula_type_definition_Name(), ecorePackage.getEString(), "name", null, 0, 1, tff_formula_type_definition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(gettff_formula_type_definition_Exp(), ecorePackage.getEObject(), null, "exp", null, 0, 1, tff_formula_type_definition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tff_type_expressionEClass, tff_type_expression.class, "tff_type_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(tff_type_atomEClass, tff_type_atom.class, "tff_type_atom", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(gettff_type_atom_Name(), ecorePackage.getEString(), "name", null, 0, 1, tff_type_atom.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tff_type_constantEClass, tff_type_constant.class, "tff_type_constant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(gettff_type_constant_Param(), this.gettff_type_atom(), null, "param", null, 0, -1, tff_type_constant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tff_expressionEClass, tff_expression.class, "tff_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(gettff_expression_Atom(), this.gettff_atom(), null, "atom", null, 0, 1, tff_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(gettff_expression_Negation(), ecorePackage.getEBoolean(), "negation", null, 0, 1, tff_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(gettff_expression_Exp(), ecorePackage.getEObject(), null, "exp", null, 0, 1, tff_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(gettff_expression_Quantifier(), ecorePackage.getEString(), "quantifier", null, 0, 1, tff_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(gettff_expression_Param(), ecorePackage.getEObject(), null, "param", null, 0, 1, tff_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tff_atomEClass, tff_atom.class, "tff_atom", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(tff_constantEClass, tff_constant.class, "tff_constant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(gettff_constant_Name(), ecorePackage.getEString(), "name", null, 0, 1, tff_constant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(gettff_constant_Param(), ecorePackage.getEObject(), null, "param", null, 0, -1, tff_constant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(gettff_constant_Top(), ecorePackage.getEString(), "top", null, 0, 1, tff_constant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(gettff_constant_Bottom(), ecorePackage.getEString(), "bottom", null, 0, 1, tff_constant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tff_predefined_function_2_argsEClass, tff_predefined_function_2_args.class, "tff_predefined_function_2_args", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(gettff_predefined_function_2_args_Func(), ecorePackage.getEString(), "func", null, 0, 1, tff_predefined_function_2_args.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(gettff_predefined_function_2_args_Param(), this.gettff_expression(), null, "param", null, 0, -1, tff_predefined_function_2_args.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tff_varEClass, tff_var.class, "tff_var", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(tff_var_declarationEClass, tff_var_declaration.class, "tff_var_declaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(gettff_var_declaration_Var(), this.gettff_var(), null, "var", null, 0, 1, tff_var_declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(gettff_var_declaration_Vartype(), this.gettff_type_expression(), null, "vartype", null, 0, 1, tff_var_declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(tff_variable_listEClass, tff_variable_list.class, "tff_variable_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(gettff_variable_list_Params(), this.gettff_var_declaration(), null, "params", null, 0, -1, tff_variable_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(cnf_inputEClass, cnf_input.class, "cnf_input", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(cnf_rootEClass, cnf_root.class, "cnf_root", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getcnf_root_Name(), ecorePackage.getEString(), "name", null, 0, 1, cnf_root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getcnf_root_Formula_role(), ecorePackage.getEString(), "formula_role", null, 0, 1, cnf_root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getcnf_root_Exp(), this.getcnf_formula_type_definition(), null, "exp", null, 0, 1, cnf_root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(cnf_formula_type_definitionEClass, cnf_formula_type_definition.class, "cnf_formula_type_definition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getcnf_formula_type_definition_Disjunction(), this.getcnf_or(), null, "disjunction", null, 0, 1, cnf_formula_type_definition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(cnf_orEClass, cnf_or.class, "cnf_or", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getcnf_or_Or(), this.getcnf_not(), null, "or", null, 0, -1, cnf_or.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(cnf_notEClass, cnf_not.class, "cnf_not", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getcnf_not_Negated(), ecorePackage.getEBoolean(), "negated", null, 0, 1, cnf_not.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getcnf_not_Literal(), this.getcnf_equality(), null, "literal", null, 0, 1, cnf_not.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(cnf_equalityEClass, cnf_equality.class, "cnf_equality", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getcnf_equality_ExpL(), this.getcnf_expression(), null, "expL", null, 0, 1, cnf_equality.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getcnf_equality_Eq(), ecorePackage.getEString(), "eq", null, 0, 1, cnf_equality.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getcnf_equality_ExpR(), this.getcnf_expression(), null, "expR", null, 0, 1, cnf_equality.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(cnf_expressionEClass, cnf_expression.class, "cnf_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getcnf_expression_Cnf_exp(), ecorePackage.getEString(), "cnf_exp", null, 0, 1, cnf_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getcnf_expression_Name(), ecorePackage.getEString(), "name", null, 0, 1, cnf_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(cnf_constantEClass, cnf_constant.class, "cnf_constant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getcnf_constant_Param(), this.getcnf_expression(), null, "param", null, 0, -1, cnf_constant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(cnf_varEClass, cnf_var.class, "cnf_var", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(thf_inputEClass, thf_input.class, "thf_input", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(thf_rootEClass, thf_root.class, "thf_root", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getthf_root_Name(), ecorePackage.getEString(), "name", null, 0, 1, thf_root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getthf_root_Formula_role(), ecorePackage.getEString(), "formula_role", null, 0, 1, thf_root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getthf_root_Def(), this.getthf_formula_type_definition(), null, "def", null, 0, 1, thf_root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getthf_root_Thf_exp(), this.getthf_expression(), null, "thf_exp", null, 0, 1, thf_root.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(thf_formula_type_definitionEClass, thf_formula_type_definition.class, "thf_formula_type_definition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getthf_formula_type_definition_Name(), ecorePackage.getEString(), "name", null, 0, 1, thf_formula_type_definition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getthf_formula_type_definition_Exp(), this.getthf_type_expression(), null, "exp", null, 0, 1, thf_formula_type_definition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(thf_type_expressionEClass, thf_type_expression.class, "thf_type_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(thf_type_atomEClass, thf_type_atom.class, "thf_type_atom", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(thf_type_constantEClass, thf_type_constant.class, "thf_type_constant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getthf_type_constant_Name(), ecorePackage.getEString(), "name", null, 0, 1, thf_type_constant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(thf_expressionEClass, thf_expression.class, "thf_expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getthf_expression_Thf_atom(), this.getthf_atom(), null, "thf_atom", null, 0, 1, thf_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getthf_expression_Thf_negation(), ecorePackage.getEBoolean(), "thf_negation", null, 0, 1, thf_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getthf_expression_Thf_exp(), ecorePackage.getEObject(), null, "thf_exp", null, 0, 1, thf_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getthf_expression_Op(), ecorePackage.getEString(), "op", null, 0, 1, thf_expression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(thf_atomEClass, thf_atom.class, "thf_atom", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getthf_atom_Name(), ecorePackage.getEString(), "name", null, 0, 1, thf_atom.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(thf_constantEClass, thf_constant.class, "thf_constant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getthf_constant_Thf_param(), this.getthf_atom(), null, "thf_param", null, 0, -1, thf_constant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(thf_varEClass, thf_var.class, "thf_var", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(thf_variable_listEClass, thf_variable_list.class, "thf_variable_list", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getthf_variable_list_Params(), this.getthf_var_declaration(), null, "params", null, 0, -1, thf_variable_list.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(thf_var_declarationEClass, thf_var_declaration.class, "thf_var_declaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getthf_var_declaration_Var(), this.getthf_var(), null, "var", null, 0, 1, thf_var_declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getthf_var_declaration_Vartype(), this.getthf_type_expression(), null, "vartype", null, 0, 1, thf_var_declaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(binaryEClass, binary.class, "binary", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getbinary_Left(), ecorePackage.getEObject(), null, "left", null, 0, 1, binary.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getbinary_Right(), ecorePackage.getEObject(), null, "right", null, 0, 1, binary.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(operEClass, oper.class, "oper", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getoper_Left(), ecorePackage.getEObject(), null, "left", null, 0, 1, oper.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getoper_Op(), ecorePackage.getEString(), "op", null, 0, 1, oper.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getoper_Right(), ecorePackage.getEObject(), null, "right", null, 0, -1, oper.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //ParserPackageImpl
