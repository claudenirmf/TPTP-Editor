/**
 * generated by Xtext 2.12.0
 */
package it.unibz.inf.tptp.parser.impl;

import it.unibz.inf.tptp.parser.Fof_atom;
import it.unibz.inf.tptp.parser.Fof_expression;
import it.unibz.inf.tptp.parser.Fof_variable_list;
import it.unibz.inf.tptp.parser.ParserPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Fof expression</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link it.unibz.inf.tptp.parser.impl.Fof_expressionImpl#getFof_atom <em>Fof atom</em>}</li>
 *   <li>{@link it.unibz.inf.tptp.parser.impl.Fof_expressionImpl#isFof_negation <em>Fof negation</em>}</li>
 *   <li>{@link it.unibz.inf.tptp.parser.impl.Fof_expressionImpl#getFof_exp <em>Fof exp</em>}</li>
 *   <li>{@link it.unibz.inf.tptp.parser.impl.Fof_expressionImpl#getFof_quantifier <em>Fof quantifier</em>}</li>
 *   <li>{@link it.unibz.inf.tptp.parser.impl.Fof_expressionImpl#getFof_param <em>Fof param</em>}</li>
 * </ul>
 *
 * @generated
 */
public class Fof_expressionImpl extends MinimalEObjectImpl.Container implements Fof_expression
{
  /**
   * The cached value of the '{@link #getFof_atom() <em>Fof atom</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFof_atom()
   * @generated
   * @ordered
   */
  protected Fof_atom fof_atom;

  /**
   * The default value of the '{@link #isFof_negation() <em>Fof negation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isFof_negation()
   * @generated
   * @ordered
   */
  protected static final boolean FOF_NEGATION_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isFof_negation() <em>Fof negation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isFof_negation()
   * @generated
   * @ordered
   */
  protected boolean fof_negation = FOF_NEGATION_EDEFAULT;

  /**
   * The cached value of the '{@link #getFof_exp() <em>Fof exp</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFof_exp()
   * @generated
   * @ordered
   */
  protected Fof_expression fof_exp;

  /**
   * The default value of the '{@link #getFof_quantifier() <em>Fof quantifier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFof_quantifier()
   * @generated
   * @ordered
   */
  protected static final String FOF_QUANTIFIER_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFof_quantifier() <em>Fof quantifier</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFof_quantifier()
   * @generated
   * @ordered
   */
  protected String fof_quantifier = FOF_QUANTIFIER_EDEFAULT;

  /**
   * The cached value of the '{@link #getFof_param() <em>Fof param</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFof_param()
   * @generated
   * @ordered
   */
  protected Fof_variable_list fof_param;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected Fof_expressionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ParserPackage.Literals.FOF_EXPRESSION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Fof_atom getFof_atom()
  {
    return fof_atom;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFof_atom(Fof_atom newFof_atom, NotificationChain msgs)
  {
    Fof_atom oldFof_atom = fof_atom;
    fof_atom = newFof_atom;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ParserPackage.FOF_EXPRESSION__FOF_ATOM, oldFof_atom, newFof_atom);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFof_atom(Fof_atom newFof_atom)
  {
    if (newFof_atom != fof_atom)
    {
      NotificationChain msgs = null;
      if (fof_atom != null)
        msgs = ((InternalEObject)fof_atom).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ParserPackage.FOF_EXPRESSION__FOF_ATOM, null, msgs);
      if (newFof_atom != null)
        msgs = ((InternalEObject)newFof_atom).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ParserPackage.FOF_EXPRESSION__FOF_ATOM, null, msgs);
      msgs = basicSetFof_atom(newFof_atom, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ParserPackage.FOF_EXPRESSION__FOF_ATOM, newFof_atom, newFof_atom));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isFof_negation()
  {
    return fof_negation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFof_negation(boolean newFof_negation)
  {
    boolean oldFof_negation = fof_negation;
    fof_negation = newFof_negation;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ParserPackage.FOF_EXPRESSION__FOF_NEGATION, oldFof_negation, fof_negation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Fof_expression getFof_exp()
  {
    return fof_exp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFof_exp(Fof_expression newFof_exp, NotificationChain msgs)
  {
    Fof_expression oldFof_exp = fof_exp;
    fof_exp = newFof_exp;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ParserPackage.FOF_EXPRESSION__FOF_EXP, oldFof_exp, newFof_exp);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFof_exp(Fof_expression newFof_exp)
  {
    if (newFof_exp != fof_exp)
    {
      NotificationChain msgs = null;
      if (fof_exp != null)
        msgs = ((InternalEObject)fof_exp).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ParserPackage.FOF_EXPRESSION__FOF_EXP, null, msgs);
      if (newFof_exp != null)
        msgs = ((InternalEObject)newFof_exp).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ParserPackage.FOF_EXPRESSION__FOF_EXP, null, msgs);
      msgs = basicSetFof_exp(newFof_exp, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ParserPackage.FOF_EXPRESSION__FOF_EXP, newFof_exp, newFof_exp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getFof_quantifier()
  {
    return fof_quantifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFof_quantifier(String newFof_quantifier)
  {
    String oldFof_quantifier = fof_quantifier;
    fof_quantifier = newFof_quantifier;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ParserPackage.FOF_EXPRESSION__FOF_QUANTIFIER, oldFof_quantifier, fof_quantifier));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Fof_variable_list getFof_param()
  {
    return fof_param;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFof_param(Fof_variable_list newFof_param, NotificationChain msgs)
  {
    Fof_variable_list oldFof_param = fof_param;
    fof_param = newFof_param;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ParserPackage.FOF_EXPRESSION__FOF_PARAM, oldFof_param, newFof_param);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFof_param(Fof_variable_list newFof_param)
  {
    if (newFof_param != fof_param)
    {
      NotificationChain msgs = null;
      if (fof_param != null)
        msgs = ((InternalEObject)fof_param).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ParserPackage.FOF_EXPRESSION__FOF_PARAM, null, msgs);
      if (newFof_param != null)
        msgs = ((InternalEObject)newFof_param).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ParserPackage.FOF_EXPRESSION__FOF_PARAM, null, msgs);
      msgs = basicSetFof_param(newFof_param, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ParserPackage.FOF_EXPRESSION__FOF_PARAM, newFof_param, newFof_param));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ParserPackage.FOF_EXPRESSION__FOF_ATOM:
        return basicSetFof_atom(null, msgs);
      case ParserPackage.FOF_EXPRESSION__FOF_EXP:
        return basicSetFof_exp(null, msgs);
      case ParserPackage.FOF_EXPRESSION__FOF_PARAM:
        return basicSetFof_param(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ParserPackage.FOF_EXPRESSION__FOF_ATOM:
        return getFof_atom();
      case ParserPackage.FOF_EXPRESSION__FOF_NEGATION:
        return isFof_negation();
      case ParserPackage.FOF_EXPRESSION__FOF_EXP:
        return getFof_exp();
      case ParserPackage.FOF_EXPRESSION__FOF_QUANTIFIER:
        return getFof_quantifier();
      case ParserPackage.FOF_EXPRESSION__FOF_PARAM:
        return getFof_param();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ParserPackage.FOF_EXPRESSION__FOF_ATOM:
        setFof_atom((Fof_atom)newValue);
        return;
      case ParserPackage.FOF_EXPRESSION__FOF_NEGATION:
        setFof_negation((Boolean)newValue);
        return;
      case ParserPackage.FOF_EXPRESSION__FOF_EXP:
        setFof_exp((Fof_expression)newValue);
        return;
      case ParserPackage.FOF_EXPRESSION__FOF_QUANTIFIER:
        setFof_quantifier((String)newValue);
        return;
      case ParserPackage.FOF_EXPRESSION__FOF_PARAM:
        setFof_param((Fof_variable_list)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ParserPackage.FOF_EXPRESSION__FOF_ATOM:
        setFof_atom((Fof_atom)null);
        return;
      case ParserPackage.FOF_EXPRESSION__FOF_NEGATION:
        setFof_negation(FOF_NEGATION_EDEFAULT);
        return;
      case ParserPackage.FOF_EXPRESSION__FOF_EXP:
        setFof_exp((Fof_expression)null);
        return;
      case ParserPackage.FOF_EXPRESSION__FOF_QUANTIFIER:
        setFof_quantifier(FOF_QUANTIFIER_EDEFAULT);
        return;
      case ParserPackage.FOF_EXPRESSION__FOF_PARAM:
        setFof_param((Fof_variable_list)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ParserPackage.FOF_EXPRESSION__FOF_ATOM:
        return fof_atom != null;
      case ParserPackage.FOF_EXPRESSION__FOF_NEGATION:
        return fof_negation != FOF_NEGATION_EDEFAULT;
      case ParserPackage.FOF_EXPRESSION__FOF_EXP:
        return fof_exp != null;
      case ParserPackage.FOF_EXPRESSION__FOF_QUANTIFIER:
        return FOF_QUANTIFIER_EDEFAULT == null ? fof_quantifier != null : !FOF_QUANTIFIER_EDEFAULT.equals(fof_quantifier);
      case ParserPackage.FOF_EXPRESSION__FOF_PARAM:
        return fof_param != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (fof_negation: ");
    result.append(fof_negation);
    result.append(", fof_quantifier: ");
    result.append(fof_quantifier);
    result.append(')');
    return result.toString();
  }

} //Fof_expressionImpl
