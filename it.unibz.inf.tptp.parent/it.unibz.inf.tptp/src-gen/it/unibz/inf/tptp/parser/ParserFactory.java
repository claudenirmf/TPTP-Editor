/**
 * generated by Xtext 2.12.0
 */
package it.unibz.inf.tptp.parser;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see it.unibz.inf.tptp.parser.ParserPackage
 * @generated
 */
public interface ParserFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  ParserFactory eINSTANCE = it.unibz.inf.tptp.parser.impl.ParserFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Model</em>'.
   * @generated
   */
  Model createModel();

  /**
   * Returns a new object of class '<em>include</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>include</em>'.
   * @generated
   */
  include createinclude();

  /**
   * Returns a new object of class '<em>fof input</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>fof input</em>'.
   * @generated
   */
  fof_input createfof_input();

  /**
   * Returns a new object of class '<em>fof root</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>fof root</em>'.
   * @generated
   */
  fof_root createfof_root();

  /**
   * Returns a new object of class '<em>fof expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>fof expression</em>'.
   * @generated
   */
  fof_expression createfof_expression();

  /**
   * Returns a new object of class '<em>fof atom</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>fof atom</em>'.
   * @generated
   */
  fof_atom createfof_atom();

  /**
   * Returns a new object of class '<em>fof constant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>fof constant</em>'.
   * @generated
   */
  fof_constant createfof_constant();

  /**
   * Returns a new object of class '<em>fof var</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>fof var</em>'.
   * @generated
   */
  fof_var createfof_var();

  /**
   * Returns a new object of class '<em>fof variable list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>fof variable list</em>'.
   * @generated
   */
  fof_variable_list createfof_variable_list();

  /**
   * Returns a new object of class '<em>tff input</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>tff input</em>'.
   * @generated
   */
  tff_input createtff_input();

  /**
   * Returns a new object of class '<em>tff root</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>tff root</em>'.
   * @generated
   */
  tff_root createtff_root();

  /**
   * Returns a new object of class '<em>tff formula type definition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>tff formula type definition</em>'.
   * @generated
   */
  tff_formula_type_definition createtff_formula_type_definition();

  /**
   * Returns a new object of class '<em>tff type expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>tff type expression</em>'.
   * @generated
   */
  tff_type_expression createtff_type_expression();

  /**
   * Returns a new object of class '<em>tff type atom</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>tff type atom</em>'.
   * @generated
   */
  tff_type_atom createtff_type_atom();

  /**
   * Returns a new object of class '<em>tff type constant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>tff type constant</em>'.
   * @generated
   */
  tff_type_constant createtff_type_constant();

  /**
   * Returns a new object of class '<em>tff expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>tff expression</em>'.
   * @generated
   */
  tff_expression createtff_expression();

  /**
   * Returns a new object of class '<em>tff atom</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>tff atom</em>'.
   * @generated
   */
  tff_atom createtff_atom();

  /**
   * Returns a new object of class '<em>tff constant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>tff constant</em>'.
   * @generated
   */
  tff_constant createtff_constant();

  /**
   * Returns a new object of class '<em>tff predefined function 2args</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>tff predefined function 2args</em>'.
   * @generated
   */
  tff_predefined_function_2_args createtff_predefined_function_2_args();

  /**
   * Returns a new object of class '<em>tff var</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>tff var</em>'.
   * @generated
   */
  tff_var createtff_var();

  /**
   * Returns a new object of class '<em>tff var declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>tff var declaration</em>'.
   * @generated
   */
  tff_var_declaration createtff_var_declaration();

  /**
   * Returns a new object of class '<em>tff variable list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>tff variable list</em>'.
   * @generated
   */
  tff_variable_list createtff_variable_list();

  /**
   * Returns a new object of class '<em>cnf input</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>cnf input</em>'.
   * @generated
   */
  cnf_input createcnf_input();

  /**
   * Returns a new object of class '<em>cnf root</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>cnf root</em>'.
   * @generated
   */
  cnf_root createcnf_root();

  /**
   * Returns a new object of class '<em>cnf formula type definition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>cnf formula type definition</em>'.
   * @generated
   */
  cnf_formula_type_definition createcnf_formula_type_definition();

  /**
   * Returns a new object of class '<em>cnf or</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>cnf or</em>'.
   * @generated
   */
  cnf_or createcnf_or();

  /**
   * Returns a new object of class '<em>cnf not</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>cnf not</em>'.
   * @generated
   */
  cnf_not createcnf_not();

  /**
   * Returns a new object of class '<em>cnf equality</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>cnf equality</em>'.
   * @generated
   */
  cnf_equality createcnf_equality();

  /**
   * Returns a new object of class '<em>cnf expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>cnf expression</em>'.
   * @generated
   */
  cnf_expression createcnf_expression();

  /**
   * Returns a new object of class '<em>cnf constant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>cnf constant</em>'.
   * @generated
   */
  cnf_constant createcnf_constant();

  /**
   * Returns a new object of class '<em>cnf var</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>cnf var</em>'.
   * @generated
   */
  cnf_var createcnf_var();

  /**
   * Returns a new object of class '<em>thf input</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>thf input</em>'.
   * @generated
   */
  thf_input createthf_input();

  /**
   * Returns a new object of class '<em>thf root</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>thf root</em>'.
   * @generated
   */
  thf_root createthf_root();

  /**
   * Returns a new object of class '<em>thf formula type definition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>thf formula type definition</em>'.
   * @generated
   */
  thf_formula_type_definition createthf_formula_type_definition();

  /**
   * Returns a new object of class '<em>thf type expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>thf type expression</em>'.
   * @generated
   */
  thf_type_expression createthf_type_expression();

  /**
   * Returns a new object of class '<em>thf type atom</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>thf type atom</em>'.
   * @generated
   */
  thf_type_atom createthf_type_atom();

  /**
   * Returns a new object of class '<em>thf type constant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>thf type constant</em>'.
   * @generated
   */
  thf_type_constant createthf_type_constant();

  /**
   * Returns a new object of class '<em>thf expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>thf expression</em>'.
   * @generated
   */
  thf_expression createthf_expression();

  /**
   * Returns a new object of class '<em>thf atom</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>thf atom</em>'.
   * @generated
   */
  thf_atom createthf_atom();

  /**
   * Returns a new object of class '<em>thf constant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>thf constant</em>'.
   * @generated
   */
  thf_constant createthf_constant();

  /**
   * Returns a new object of class '<em>thf var</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>thf var</em>'.
   * @generated
   */
  thf_var createthf_var();

  /**
   * Returns a new object of class '<em>thf variable list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>thf variable list</em>'.
   * @generated
   */
  thf_variable_list createthf_variable_list();

  /**
   * Returns a new object of class '<em>thf var declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>thf var declaration</em>'.
   * @generated
   */
  thf_var_declaration createthf_var_declaration();

  /**
   * Returns a new object of class '<em>binary</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>binary</em>'.
   * @generated
   */
  binary createbinary();

  /**
   * Returns a new object of class '<em>oper</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>oper</em>'.
   * @generated
   */
  oper createoper();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  ParserPackage getParserPackage();

} //ParserFactory
