/**
 * generated by Xtext 2.12.0
 */
package it.unibz.inf.tptp.parser;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see it.unibz.inf.tptp.parser.ParserPackage
 * @generated
 */
public interface ParserFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  ParserFactory eINSTANCE = it.unibz.inf.tptp.parser.impl.ParserFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Model</em>'.
   * @generated
   */
  Model createModel();

  /**
   * Returns a new object of class '<em>Include</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Include</em>'.
   * @generated
   */
  Include createInclude();

  /**
   * Returns a new object of class '<em>Fof input</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Fof input</em>'.
   * @generated
   */
  Fof_input createFof_input();

  /**
   * Returns a new object of class '<em>Fof root</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Fof root</em>'.
   * @generated
   */
  Fof_root createFof_root();

  /**
   * Returns a new object of class '<em>Fof expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Fof expression</em>'.
   * @generated
   */
  Fof_expression createFof_expression();

  /**
   * Returns a new object of class '<em>Fof atom</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Fof atom</em>'.
   * @generated
   */
  Fof_atom createFof_atom();

  /**
   * Returns a new object of class '<em>Fof constant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Fof constant</em>'.
   * @generated
   */
  Fof_constant createFof_constant();

  /**
   * Returns a new object of class '<em>Fof var</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Fof var</em>'.
   * @generated
   */
  Fof_var createFof_var();

  /**
   * Returns a new object of class '<em>Fof variable list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Fof variable list</em>'.
   * @generated
   */
  Fof_variable_list createFof_variable_list();

  /**
   * Returns a new object of class '<em>Tff input</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Tff input</em>'.
   * @generated
   */
  Tff_input createTff_input();

  /**
   * Returns a new object of class '<em>Tff root</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Tff root</em>'.
   * @generated
   */
  Tff_root createTff_root();

  /**
   * Returns a new object of class '<em>Tff formula type definition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Tff formula type definition</em>'.
   * @generated
   */
  Tff_formula_type_definition createTff_formula_type_definition();

  /**
   * Returns a new object of class '<em>Tff type expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Tff type expression</em>'.
   * @generated
   */
  Tff_type_expression createTff_type_expression();

  /**
   * Returns a new object of class '<em>Tff type atom</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Tff type atom</em>'.
   * @generated
   */
  Tff_type_atom createTff_type_atom();

  /**
   * Returns a new object of class '<em>Tff type constant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Tff type constant</em>'.
   * @generated
   */
  Tff_type_constant createTff_type_constant();

  /**
   * Returns a new object of class '<em>Tff expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Tff expression</em>'.
   * @generated
   */
  Tff_expression createTff_expression();

  /**
   * Returns a new object of class '<em>Tff atom</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Tff atom</em>'.
   * @generated
   */
  Tff_atom createTff_atom();

  /**
   * Returns a new object of class '<em>Tff constant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Tff constant</em>'.
   * @generated
   */
  Tff_constant createTff_constant();

  /**
   * Returns a new object of class '<em>Tff predefined function 2args</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Tff predefined function 2args</em>'.
   * @generated
   */
  Tff_predefined_function_2_args createTff_predefined_function_2_args();

  /**
   * Returns a new object of class '<em>Tff var</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Tff var</em>'.
   * @generated
   */
  Tff_var createTff_var();

  /**
   * Returns a new object of class '<em>Tff var declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Tff var declaration</em>'.
   * @generated
   */
  Tff_var_declaration createTff_var_declaration();

  /**
   * Returns a new object of class '<em>Tff variable list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Tff variable list</em>'.
   * @generated
   */
  Tff_variable_list createTff_variable_list();

  /**
   * Returns a new object of class '<em>Cnf input</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Cnf input</em>'.
   * @generated
   */
  Cnf_input createCnf_input();

  /**
   * Returns a new object of class '<em>Cnf root</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Cnf root</em>'.
   * @generated
   */
  Cnf_root createCnf_root();

  /**
   * Returns a new object of class '<em>Cnf formula type definition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Cnf formula type definition</em>'.
   * @generated
   */
  Cnf_formula_type_definition createCnf_formula_type_definition();

  /**
   * Returns a new object of class '<em>Cnf or</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Cnf or</em>'.
   * @generated
   */
  Cnf_or createCnf_or();

  /**
   * Returns a new object of class '<em>Cnf not</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Cnf not</em>'.
   * @generated
   */
  Cnf_not createCnf_not();

  /**
   * Returns a new object of class '<em>Cnf equality</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Cnf equality</em>'.
   * @generated
   */
  Cnf_equality createCnf_equality();

  /**
   * Returns a new object of class '<em>Cnf expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Cnf expression</em>'.
   * @generated
   */
  Cnf_expression createCnf_expression();

  /**
   * Returns a new object of class '<em>Cnf constant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Cnf constant</em>'.
   * @generated
   */
  Cnf_constant createCnf_constant();

  /**
   * Returns a new object of class '<em>Cnf var</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Cnf var</em>'.
   * @generated
   */
  Cnf_var createCnf_var();

  /**
   * Returns a new object of class '<em>Thf input</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Thf input</em>'.
   * @generated
   */
  Thf_input createThf_input();

  /**
   * Returns a new object of class '<em>Thf root</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Thf root</em>'.
   * @generated
   */
  Thf_root createThf_root();

  /**
   * Returns a new object of class '<em>Thf formula type definition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Thf formula type definition</em>'.
   * @generated
   */
  Thf_formula_type_definition createThf_formula_type_definition();

  /**
   * Returns a new object of class '<em>Thf type expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Thf type expression</em>'.
   * @generated
   */
  Thf_type_expression createThf_type_expression();

  /**
   * Returns a new object of class '<em>Thf type atom</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Thf type atom</em>'.
   * @generated
   */
  Thf_type_atom createThf_type_atom();

  /**
   * Returns a new object of class '<em>Thf type constant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Thf type constant</em>'.
   * @generated
   */
  Thf_type_constant createThf_type_constant();

  /**
   * Returns a new object of class '<em>Thf expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Thf expression</em>'.
   * @generated
   */
  Thf_expression createThf_expression();

  /**
   * Returns a new object of class '<em>Thf atom</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Thf atom</em>'.
   * @generated
   */
  Thf_atom createThf_atom();

  /**
   * Returns a new object of class '<em>Thf constant</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Thf constant</em>'.
   * @generated
   */
  Thf_constant createThf_constant();

  /**
   * Returns a new object of class '<em>Thf var</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Thf var</em>'.
   * @generated
   */
  Thf_var createThf_var();

  /**
   * Returns a new object of class '<em>Thf variable list</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Thf variable list</em>'.
   * @generated
   */
  Thf_variable_list createThf_variable_list();

  /**
   * Returns a new object of class '<em>Thf var declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Thf var declaration</em>'.
   * @generated
   */
  Thf_var_declaration createThf_var_declaration();

  /**
   * Returns a new object of class '<em>binary</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>binary</em>'.
   * @generated
   */
  binary createbinary();

  /**
   * Returns a new object of class '<em>oper</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>oper</em>'.
   * @generated
   */
  oper createoper();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  ParserPackage getParserPackage();

} //ParserFactory
