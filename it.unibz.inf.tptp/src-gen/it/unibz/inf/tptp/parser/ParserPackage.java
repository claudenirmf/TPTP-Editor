/**
 * generated by Xtext 2.12.0
 */
package it.unibz.inf.tptp.parser;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see it.unibz.inf.tptp.parser.ParserFactory
 * @model kind="package"
 * @generated
 */
public interface ParserPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "parser";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.unibz.it/inf/tptp/TPTP";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "parser";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  ParserPackage eINSTANCE = it.unibz.inf.tptp.parser.impl.ParserPackageImpl.init();

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.ModelImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>TPTP input</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__TPTP_INPUT = 0;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.fof_inputImpl <em>fof input</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.fof_inputImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getfof_input()
   * @generated
   */
  int FOF_INPUT = 2;

  /**
   * The number of structural features of the '<em>fof input</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_INPUT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.includeImpl <em>include</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.includeImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getinclude()
   * @generated
   */
  int INCLUDE = 1;

  /**
   * The feature id for the '<em><b>Path</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INCLUDE__PATH = FOF_INPUT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>include</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INCLUDE_FEATURE_COUNT = FOF_INPUT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.fof_rootImpl <em>fof root</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.fof_rootImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getfof_root()
   * @generated
   */
  int FOF_ROOT = 3;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_ROOT__NAME = FOF_INPUT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Formula role</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_ROOT__FORMULA_ROLE = FOF_INPUT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_ROOT__EXP = FOF_INPUT_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>fof root</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_ROOT_FEATURE_COUNT = FOF_INPUT_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.fof_expressionImpl <em>fof expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.fof_expressionImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getfof_expression()
   * @generated
   */
  int FOF_EXPRESSION = 4;

  /**
   * The feature id for the '<em><b>Fof atom</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_EXPRESSION__FOF_ATOM = 0;

  /**
   * The feature id for the '<em><b>Fof negation</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_EXPRESSION__FOF_NEGATION = 1;

  /**
   * The feature id for the '<em><b>Fof exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_EXPRESSION__FOF_EXP = 2;

  /**
   * The feature id for the '<em><b>Fof quantifier</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_EXPRESSION__FOF_QUANTIFIER = 3;

  /**
   * The feature id for the '<em><b>Fof param</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_EXPRESSION__FOF_PARAM = 4;

  /**
   * The number of structural features of the '<em>fof expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_EXPRESSION_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.fof_atomImpl <em>fof atom</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.fof_atomImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getfof_atom()
   * @generated
   */
  int FOF_ATOM = 5;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_ATOM__NAME = 0;

  /**
   * The number of structural features of the '<em>fof atom</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_ATOM_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.fof_constantImpl <em>fof constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.fof_constantImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getfof_constant()
   * @generated
   */
  int FOF_CONSTANT = 6;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_CONSTANT__NAME = FOF_ATOM__NAME;

  /**
   * The feature id for the '<em><b>Fof param</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_CONSTANT__FOF_PARAM = FOF_ATOM_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>fof constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_CONSTANT_FEATURE_COUNT = FOF_ATOM_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.fof_varImpl <em>fof var</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.fof_varImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getfof_var()
   * @generated
   */
  int FOF_VAR = 7;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_VAR__NAME = FOF_ATOM__NAME;

  /**
   * The number of structural features of the '<em>fof var</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_VAR_FEATURE_COUNT = FOF_ATOM_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.fof_variable_listImpl <em>fof variable list</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.fof_variable_listImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getfof_variable_list()
   * @generated
   */
  int FOF_VARIABLE_LIST = 8;

  /**
   * The feature id for the '<em><b>Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_VARIABLE_LIST__PARAMS = 0;

  /**
   * The number of structural features of the '<em>fof variable list</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOF_VARIABLE_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.tff_inputImpl <em>tff input</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.tff_inputImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#gettff_input()
   * @generated
   */
  int TFF_INPUT = 9;

  /**
   * The number of structural features of the '<em>tff input</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_INPUT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.tff_rootImpl <em>tff root</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.tff_rootImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#gettff_root()
   * @generated
   */
  int TFF_ROOT = 10;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_ROOT__NAME = TFF_INPUT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Formula role</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_ROOT__FORMULA_ROLE = TFF_INPUT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_ROOT__EXP = TFF_INPUT_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Def</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_ROOT__DEF = TFF_INPUT_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>tff root</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_ROOT_FEATURE_COUNT = TFF_INPUT_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.tff_formula_type_definitionImpl <em>tff formula type definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.tff_formula_type_definitionImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#gettff_formula_type_definition()
   * @generated
   */
  int TFF_FORMULA_TYPE_DEFINITION = 11;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_FORMULA_TYPE_DEFINITION__NAME = 0;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_FORMULA_TYPE_DEFINITION__EXP = 1;

  /**
   * The number of structural features of the '<em>tff formula type definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_FORMULA_TYPE_DEFINITION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.tff_type_expressionImpl <em>tff type expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.tff_type_expressionImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#gettff_type_expression()
   * @generated
   */
  int TFF_TYPE_EXPRESSION = 12;

  /**
   * The number of structural features of the '<em>tff type expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_TYPE_EXPRESSION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.tff_type_atomImpl <em>tff type atom</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.tff_type_atomImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#gettff_type_atom()
   * @generated
   */
  int TFF_TYPE_ATOM = 13;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_TYPE_ATOM__NAME = TFF_TYPE_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>tff type atom</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_TYPE_ATOM_FEATURE_COUNT = TFF_TYPE_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.tff_type_constantImpl <em>tff type constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.tff_type_constantImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#gettff_type_constant()
   * @generated
   */
  int TFF_TYPE_CONSTANT = 14;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_TYPE_CONSTANT__NAME = TFF_TYPE_ATOM__NAME;

  /**
   * The feature id for the '<em><b>Param</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_TYPE_CONSTANT__PARAM = TFF_TYPE_ATOM_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>tff type constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_TYPE_CONSTANT_FEATURE_COUNT = TFF_TYPE_ATOM_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.tff_expressionImpl <em>tff expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.tff_expressionImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#gettff_expression()
   * @generated
   */
  int TFF_EXPRESSION = 15;

  /**
   * The feature id for the '<em><b>Atom</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_EXPRESSION__ATOM = 0;

  /**
   * The feature id for the '<em><b>Negation</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_EXPRESSION__NEGATION = 1;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_EXPRESSION__EXP = 2;

  /**
   * The feature id for the '<em><b>Quantifier</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_EXPRESSION__QUANTIFIER = 3;

  /**
   * The feature id for the '<em><b>Param</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_EXPRESSION__PARAM = 4;

  /**
   * The number of structural features of the '<em>tff expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_EXPRESSION_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.tff_atomImpl <em>tff atom</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.tff_atomImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#gettff_atom()
   * @generated
   */
  int TFF_ATOM = 16;

  /**
   * The number of structural features of the '<em>tff atom</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_ATOM_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.tff_constantImpl <em>tff constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.tff_constantImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#gettff_constant()
   * @generated
   */
  int TFF_CONSTANT = 17;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_CONSTANT__NAME = TFF_ATOM_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Param</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_CONSTANT__PARAM = TFF_ATOM_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Top</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_CONSTANT__TOP = TFF_ATOM_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Bottom</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_CONSTANT__BOTTOM = TFF_ATOM_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>tff constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_CONSTANT_FEATURE_COUNT = TFF_ATOM_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.tff_predefined_function_2_argsImpl <em>tff predefined function 2args</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.tff_predefined_function_2_argsImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#gettff_predefined_function_2_args()
   * @generated
   */
  int TFF_PREDEFINED_FUNCTION_2ARGS = 18;

  /**
   * The feature id for the '<em><b>Func</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_PREDEFINED_FUNCTION_2ARGS__FUNC = TFF_ATOM_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Param</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_PREDEFINED_FUNCTION_2ARGS__PARAM = TFF_ATOM_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>tff predefined function 2args</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_PREDEFINED_FUNCTION_2ARGS_FEATURE_COUNT = TFF_ATOM_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.tff_varImpl <em>tff var</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.tff_varImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#gettff_var()
   * @generated
   */
  int TFF_VAR = 19;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_VAR__NAME = TFF_TYPE_ATOM__NAME;

  /**
   * The number of structural features of the '<em>tff var</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_VAR_FEATURE_COUNT = TFF_TYPE_ATOM_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.tff_var_declarationImpl <em>tff var declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.tff_var_declarationImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#gettff_var_declaration()
   * @generated
   */
  int TFF_VAR_DECLARATION = 20;

  /**
   * The feature id for the '<em><b>Var</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_VAR_DECLARATION__VAR = 0;

  /**
   * The feature id for the '<em><b>Vartype</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_VAR_DECLARATION__VARTYPE = 1;

  /**
   * The number of structural features of the '<em>tff var declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_VAR_DECLARATION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.tff_variable_listImpl <em>tff variable list</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.tff_variable_listImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#gettff_variable_list()
   * @generated
   */
  int TFF_VARIABLE_LIST = 21;

  /**
   * The feature id for the '<em><b>Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_VARIABLE_LIST__PARAMS = 0;

  /**
   * The number of structural features of the '<em>tff variable list</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TFF_VARIABLE_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.cnf_inputImpl <em>cnf input</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.cnf_inputImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getcnf_input()
   * @generated
   */
  int CNF_INPUT = 22;

  /**
   * The number of structural features of the '<em>cnf input</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_INPUT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.cnf_rootImpl <em>cnf root</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.cnf_rootImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getcnf_root()
   * @generated
   */
  int CNF_ROOT = 23;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_ROOT__NAME = CNF_INPUT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Formula role</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_ROOT__FORMULA_ROLE = CNF_INPUT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_ROOT__EXP = CNF_INPUT_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>cnf root</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_ROOT_FEATURE_COUNT = CNF_INPUT_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.cnf_formula_type_definitionImpl <em>cnf formula type definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.cnf_formula_type_definitionImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getcnf_formula_type_definition()
   * @generated
   */
  int CNF_FORMULA_TYPE_DEFINITION = 24;

  /**
   * The feature id for the '<em><b>Disjunction</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_FORMULA_TYPE_DEFINITION__DISJUNCTION = 0;

  /**
   * The number of structural features of the '<em>cnf formula type definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_FORMULA_TYPE_DEFINITION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.cnf_orImpl <em>cnf or</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.cnf_orImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getcnf_or()
   * @generated
   */
  int CNF_OR = 25;

  /**
   * The feature id for the '<em><b>Or</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_OR__OR = 0;

  /**
   * The number of structural features of the '<em>cnf or</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_OR_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.cnf_notImpl <em>cnf not</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.cnf_notImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getcnf_not()
   * @generated
   */
  int CNF_NOT = 26;

  /**
   * The feature id for the '<em><b>Negated</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_NOT__NEGATED = 0;

  /**
   * The feature id for the '<em><b>Literal</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_NOT__LITERAL = 1;

  /**
   * The number of structural features of the '<em>cnf not</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_NOT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.cnf_equalityImpl <em>cnf equality</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.cnf_equalityImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getcnf_equality()
   * @generated
   */
  int CNF_EQUALITY = 27;

  /**
   * The feature id for the '<em><b>Exp L</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_EQUALITY__EXP_L = 0;

  /**
   * The feature id for the '<em><b>Eq</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_EQUALITY__EQ = 1;

  /**
   * The feature id for the '<em><b>Exp R</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_EQUALITY__EXP_R = 2;

  /**
   * The number of structural features of the '<em>cnf equality</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_EQUALITY_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.cnf_expressionImpl <em>cnf expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.cnf_expressionImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getcnf_expression()
   * @generated
   */
  int CNF_EXPRESSION = 28;

  /**
   * The feature id for the '<em><b>Cnf exp</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_EXPRESSION__CNF_EXP = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_EXPRESSION__NAME = 1;

  /**
   * The number of structural features of the '<em>cnf expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_EXPRESSION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.cnf_constantImpl <em>cnf constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.cnf_constantImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getcnf_constant()
   * @generated
   */
  int CNF_CONSTANT = 29;

  /**
   * The feature id for the '<em><b>Cnf exp</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_CONSTANT__CNF_EXP = CNF_EXPRESSION__CNF_EXP;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_CONSTANT__NAME = CNF_EXPRESSION__NAME;

  /**
   * The feature id for the '<em><b>Param</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_CONSTANT__PARAM = CNF_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>cnf constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_CONSTANT_FEATURE_COUNT = CNF_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.cnf_varImpl <em>cnf var</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.cnf_varImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getcnf_var()
   * @generated
   */
  int CNF_VAR = 30;

  /**
   * The feature id for the '<em><b>Cnf exp</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_VAR__CNF_EXP = CNF_EXPRESSION__CNF_EXP;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_VAR__NAME = CNF_EXPRESSION__NAME;

  /**
   * The number of structural features of the '<em>cnf var</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CNF_VAR_FEATURE_COUNT = CNF_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.thf_inputImpl <em>thf input</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.thf_inputImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getthf_input()
   * @generated
   */
  int THF_INPUT = 31;

  /**
   * The number of structural features of the '<em>thf input</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_INPUT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.thf_rootImpl <em>thf root</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.thf_rootImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getthf_root()
   * @generated
   */
  int THF_ROOT = 32;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_ROOT__NAME = THF_INPUT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Formula role</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_ROOT__FORMULA_ROLE = THF_INPUT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Def</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_ROOT__DEF = THF_INPUT_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Thf exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_ROOT__THF_EXP = THF_INPUT_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>thf root</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_ROOT_FEATURE_COUNT = THF_INPUT_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.thf_formula_type_definitionImpl <em>thf formula type definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.thf_formula_type_definitionImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getthf_formula_type_definition()
   * @generated
   */
  int THF_FORMULA_TYPE_DEFINITION = 33;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_FORMULA_TYPE_DEFINITION__NAME = 0;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_FORMULA_TYPE_DEFINITION__EXP = 1;

  /**
   * The number of structural features of the '<em>thf formula type definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_FORMULA_TYPE_DEFINITION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.thf_type_expressionImpl <em>thf type expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.thf_type_expressionImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getthf_type_expression()
   * @generated
   */
  int THF_TYPE_EXPRESSION = 34;

  /**
   * The number of structural features of the '<em>thf type expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_TYPE_EXPRESSION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.thf_type_atomImpl <em>thf type atom</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.thf_type_atomImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getthf_type_atom()
   * @generated
   */
  int THF_TYPE_ATOM = 35;

  /**
   * The number of structural features of the '<em>thf type atom</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_TYPE_ATOM_FEATURE_COUNT = THF_TYPE_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.thf_type_constantImpl <em>thf type constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.thf_type_constantImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getthf_type_constant()
   * @generated
   */
  int THF_TYPE_CONSTANT = 36;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_TYPE_CONSTANT__NAME = THF_TYPE_ATOM_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>thf type constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_TYPE_CONSTANT_FEATURE_COUNT = THF_TYPE_ATOM_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.thf_expressionImpl <em>thf expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.thf_expressionImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getthf_expression()
   * @generated
   */
  int THF_EXPRESSION = 37;

  /**
   * The feature id for the '<em><b>Thf atom</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_EXPRESSION__THF_ATOM = 0;

  /**
   * The feature id for the '<em><b>Thf negation</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_EXPRESSION__THF_NEGATION = 1;

  /**
   * The feature id for the '<em><b>Thf exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_EXPRESSION__THF_EXP = 2;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_EXPRESSION__OP = 3;

  /**
   * The number of structural features of the '<em>thf expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_EXPRESSION_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.thf_atomImpl <em>thf atom</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.thf_atomImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getthf_atom()
   * @generated
   */
  int THF_ATOM = 38;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_ATOM__NAME = 0;

  /**
   * The number of structural features of the '<em>thf atom</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_ATOM_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.thf_constantImpl <em>thf constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.thf_constantImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getthf_constant()
   * @generated
   */
  int THF_CONSTANT = 39;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_CONSTANT__NAME = THF_ATOM__NAME;

  /**
   * The feature id for the '<em><b>Thf param</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_CONSTANT__THF_PARAM = THF_ATOM_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>thf constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_CONSTANT_FEATURE_COUNT = THF_ATOM_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.thf_varImpl <em>thf var</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.thf_varImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getthf_var()
   * @generated
   */
  int THF_VAR = 40;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_VAR__NAME = THF_ATOM__NAME;

  /**
   * The number of structural features of the '<em>thf var</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_VAR_FEATURE_COUNT = THF_ATOM_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.thf_variable_listImpl <em>thf variable list</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.thf_variable_listImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getthf_variable_list()
   * @generated
   */
  int THF_VARIABLE_LIST = 41;

  /**
   * The feature id for the '<em><b>Params</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_VARIABLE_LIST__PARAMS = 0;

  /**
   * The number of structural features of the '<em>thf variable list</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_VARIABLE_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.thf_var_declarationImpl <em>thf var declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.thf_var_declarationImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getthf_var_declaration()
   * @generated
   */
  int THF_VAR_DECLARATION = 42;

  /**
   * The feature id for the '<em><b>Var</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_VAR_DECLARATION__VAR = 0;

  /**
   * The feature id for the '<em><b>Vartype</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_VAR_DECLARATION__VARTYPE = 1;

  /**
   * The number of structural features of the '<em>thf var declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int THF_VAR_DECLARATION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.binaryImpl <em>binary</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.binaryImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getbinary()
   * @generated
   */
  int BINARY = 43;

  /**
   * The feature id for the '<em><b>Fof atom</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__FOF_ATOM = FOF_EXPRESSION__FOF_ATOM;

  /**
   * The feature id for the '<em><b>Fof negation</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__FOF_NEGATION = FOF_EXPRESSION__FOF_NEGATION;

  /**
   * The feature id for the '<em><b>Fof exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__FOF_EXP = FOF_EXPRESSION__FOF_EXP;

  /**
   * The feature id for the '<em><b>Fof quantifier</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__FOF_QUANTIFIER = FOF_EXPRESSION__FOF_QUANTIFIER;

  /**
   * The feature id for the '<em><b>Fof param</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__FOF_PARAM = FOF_EXPRESSION__FOF_PARAM;

  /**
   * The feature id for the '<em><b>Atom</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__ATOM = FOF_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Negation</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__NEGATION = FOF_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__EXP = FOF_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Quantifier</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__QUANTIFIER = FOF_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Param</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__PARAM = FOF_EXPRESSION_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Thf atom</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__THF_ATOM = FOF_EXPRESSION_FEATURE_COUNT + 5;

  /**
   * The feature id for the '<em><b>Thf negation</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__THF_NEGATION = FOF_EXPRESSION_FEATURE_COUNT + 6;

  /**
   * The feature id for the '<em><b>Thf exp</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__THF_EXP = FOF_EXPRESSION_FEATURE_COUNT + 7;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__OP = FOF_EXPRESSION_FEATURE_COUNT + 8;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__LEFT = FOF_EXPRESSION_FEATURE_COUNT + 9;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY__RIGHT = FOF_EXPRESSION_FEATURE_COUNT + 10;

  /**
   * The number of structural features of the '<em>binary</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY_FEATURE_COUNT = FOF_EXPRESSION_FEATURE_COUNT + 11;

  /**
   * The meta object id for the '{@link it.unibz.inf.tptp.parser.impl.operImpl <em>oper</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see it.unibz.inf.tptp.parser.impl.operImpl
   * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getoper()
   * @generated
   */
  int OPER = 44;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPER__LEFT = TFF_TYPE_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPER__OP = TFF_TYPE_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPER__RIGHT = TFF_TYPE_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>oper</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPER_FEATURE_COUNT = TFF_TYPE_EXPRESSION_FEATURE_COUNT + 3;


  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see it.unibz.inf.tptp.parser.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the containment reference list '{@link it.unibz.inf.tptp.parser.Model#getTPTP_input <em>TPTP input</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>TPTP input</em>'.
   * @see it.unibz.inf.tptp.parser.Model#getTPTP_input()
   * @see #getModel()
   * @generated
   */
  EReference getModel_TPTP_input();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.include <em>include</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>include</em>'.
   * @see it.unibz.inf.tptp.parser.include
   * @generated
   */
  EClass getinclude();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.include#getPath <em>Path</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Path</em>'.
   * @see it.unibz.inf.tptp.parser.include#getPath()
   * @see #getinclude()
   * @generated
   */
  EAttribute getinclude_Path();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.fof_input <em>fof input</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>fof input</em>'.
   * @see it.unibz.inf.tptp.parser.fof_input
   * @generated
   */
  EClass getfof_input();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.fof_root <em>fof root</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>fof root</em>'.
   * @see it.unibz.inf.tptp.parser.fof_root
   * @generated
   */
  EClass getfof_root();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.fof_root#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unibz.inf.tptp.parser.fof_root#getName()
   * @see #getfof_root()
   * @generated
   */
  EAttribute getfof_root_Name();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.fof_root#getFormula_role <em>Formula role</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Formula role</em>'.
   * @see it.unibz.inf.tptp.parser.fof_root#getFormula_role()
   * @see #getfof_root()
   * @generated
   */
  EAttribute getfof_root_Formula_role();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.fof_root#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see it.unibz.inf.tptp.parser.fof_root#getExp()
   * @see #getfof_root()
   * @generated
   */
  EReference getfof_root_Exp();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.fof_expression <em>fof expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>fof expression</em>'.
   * @see it.unibz.inf.tptp.parser.fof_expression
   * @generated
   */
  EClass getfof_expression();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.fof_expression#getFof_atom <em>Fof atom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Fof atom</em>'.
   * @see it.unibz.inf.tptp.parser.fof_expression#getFof_atom()
   * @see #getfof_expression()
   * @generated
   */
  EReference getfof_expression_Fof_atom();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.fof_expression#isFof_negation <em>Fof negation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Fof negation</em>'.
   * @see it.unibz.inf.tptp.parser.fof_expression#isFof_negation()
   * @see #getfof_expression()
   * @generated
   */
  EAttribute getfof_expression_Fof_negation();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.fof_expression#getFof_exp <em>Fof exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Fof exp</em>'.
   * @see it.unibz.inf.tptp.parser.fof_expression#getFof_exp()
   * @see #getfof_expression()
   * @generated
   */
  EReference getfof_expression_Fof_exp();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.fof_expression#getFof_quantifier <em>Fof quantifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Fof quantifier</em>'.
   * @see it.unibz.inf.tptp.parser.fof_expression#getFof_quantifier()
   * @see #getfof_expression()
   * @generated
   */
  EAttribute getfof_expression_Fof_quantifier();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.fof_expression#getFof_param <em>Fof param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Fof param</em>'.
   * @see it.unibz.inf.tptp.parser.fof_expression#getFof_param()
   * @see #getfof_expression()
   * @generated
   */
  EReference getfof_expression_Fof_param();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.fof_atom <em>fof atom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>fof atom</em>'.
   * @see it.unibz.inf.tptp.parser.fof_atom
   * @generated
   */
  EClass getfof_atom();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.fof_atom#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unibz.inf.tptp.parser.fof_atom#getName()
   * @see #getfof_atom()
   * @generated
   */
  EAttribute getfof_atom_Name();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.fof_constant <em>fof constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>fof constant</em>'.
   * @see it.unibz.inf.tptp.parser.fof_constant
   * @generated
   */
  EClass getfof_constant();

  /**
   * Returns the meta object for the containment reference list '{@link it.unibz.inf.tptp.parser.fof_constant#getFof_param <em>Fof param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Fof param</em>'.
   * @see it.unibz.inf.tptp.parser.fof_constant#getFof_param()
   * @see #getfof_constant()
   * @generated
   */
  EReference getfof_constant_Fof_param();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.fof_var <em>fof var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>fof var</em>'.
   * @see it.unibz.inf.tptp.parser.fof_var
   * @generated
   */
  EClass getfof_var();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.fof_variable_list <em>fof variable list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>fof variable list</em>'.
   * @see it.unibz.inf.tptp.parser.fof_variable_list
   * @generated
   */
  EClass getfof_variable_list();

  /**
   * Returns the meta object for the containment reference list '{@link it.unibz.inf.tptp.parser.fof_variable_list#getParams <em>Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Params</em>'.
   * @see it.unibz.inf.tptp.parser.fof_variable_list#getParams()
   * @see #getfof_variable_list()
   * @generated
   */
  EReference getfof_variable_list_Params();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.tff_input <em>tff input</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>tff input</em>'.
   * @see it.unibz.inf.tptp.parser.tff_input
   * @generated
   */
  EClass gettff_input();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.tff_root <em>tff root</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>tff root</em>'.
   * @see it.unibz.inf.tptp.parser.tff_root
   * @generated
   */
  EClass gettff_root();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.tff_root#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unibz.inf.tptp.parser.tff_root#getName()
   * @see #gettff_root()
   * @generated
   */
  EAttribute gettff_root_Name();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.tff_root#getFormula_role <em>Formula role</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Formula role</em>'.
   * @see it.unibz.inf.tptp.parser.tff_root#getFormula_role()
   * @see #gettff_root()
   * @generated
   */
  EAttribute gettff_root_Formula_role();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.tff_root#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see it.unibz.inf.tptp.parser.tff_root#getExp()
   * @see #gettff_root()
   * @generated
   */
  EReference gettff_root_Exp();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.tff_root#getDef <em>Def</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Def</em>'.
   * @see it.unibz.inf.tptp.parser.tff_root#getDef()
   * @see #gettff_root()
   * @generated
   */
  EReference gettff_root_Def();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.tff_formula_type_definition <em>tff formula type definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>tff formula type definition</em>'.
   * @see it.unibz.inf.tptp.parser.tff_formula_type_definition
   * @generated
   */
  EClass gettff_formula_type_definition();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.tff_formula_type_definition#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unibz.inf.tptp.parser.tff_formula_type_definition#getName()
   * @see #gettff_formula_type_definition()
   * @generated
   */
  EAttribute gettff_formula_type_definition_Name();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.tff_formula_type_definition#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see it.unibz.inf.tptp.parser.tff_formula_type_definition#getExp()
   * @see #gettff_formula_type_definition()
   * @generated
   */
  EReference gettff_formula_type_definition_Exp();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.tff_type_expression <em>tff type expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>tff type expression</em>'.
   * @see it.unibz.inf.tptp.parser.tff_type_expression
   * @generated
   */
  EClass gettff_type_expression();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.tff_type_atom <em>tff type atom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>tff type atom</em>'.
   * @see it.unibz.inf.tptp.parser.tff_type_atom
   * @generated
   */
  EClass gettff_type_atom();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.tff_type_atom#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unibz.inf.tptp.parser.tff_type_atom#getName()
   * @see #gettff_type_atom()
   * @generated
   */
  EAttribute gettff_type_atom_Name();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.tff_type_constant <em>tff type constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>tff type constant</em>'.
   * @see it.unibz.inf.tptp.parser.tff_type_constant
   * @generated
   */
  EClass gettff_type_constant();

  /**
   * Returns the meta object for the containment reference list '{@link it.unibz.inf.tptp.parser.tff_type_constant#getParam <em>Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Param</em>'.
   * @see it.unibz.inf.tptp.parser.tff_type_constant#getParam()
   * @see #gettff_type_constant()
   * @generated
   */
  EReference gettff_type_constant_Param();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.tff_expression <em>tff expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>tff expression</em>'.
   * @see it.unibz.inf.tptp.parser.tff_expression
   * @generated
   */
  EClass gettff_expression();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.tff_expression#getAtom <em>Atom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Atom</em>'.
   * @see it.unibz.inf.tptp.parser.tff_expression#getAtom()
   * @see #gettff_expression()
   * @generated
   */
  EReference gettff_expression_Atom();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.tff_expression#isNegation <em>Negation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Negation</em>'.
   * @see it.unibz.inf.tptp.parser.tff_expression#isNegation()
   * @see #gettff_expression()
   * @generated
   */
  EAttribute gettff_expression_Negation();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.tff_expression#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see it.unibz.inf.tptp.parser.tff_expression#getExp()
   * @see #gettff_expression()
   * @generated
   */
  EReference gettff_expression_Exp();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.tff_expression#getQuantifier <em>Quantifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Quantifier</em>'.
   * @see it.unibz.inf.tptp.parser.tff_expression#getQuantifier()
   * @see #gettff_expression()
   * @generated
   */
  EAttribute gettff_expression_Quantifier();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.tff_expression#getParam <em>Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Param</em>'.
   * @see it.unibz.inf.tptp.parser.tff_expression#getParam()
   * @see #gettff_expression()
   * @generated
   */
  EReference gettff_expression_Param();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.tff_atom <em>tff atom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>tff atom</em>'.
   * @see it.unibz.inf.tptp.parser.tff_atom
   * @generated
   */
  EClass gettff_atom();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.tff_constant <em>tff constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>tff constant</em>'.
   * @see it.unibz.inf.tptp.parser.tff_constant
   * @generated
   */
  EClass gettff_constant();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.tff_constant#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unibz.inf.tptp.parser.tff_constant#getName()
   * @see #gettff_constant()
   * @generated
   */
  EAttribute gettff_constant_Name();

  /**
   * Returns the meta object for the containment reference list '{@link it.unibz.inf.tptp.parser.tff_constant#getParam <em>Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Param</em>'.
   * @see it.unibz.inf.tptp.parser.tff_constant#getParam()
   * @see #gettff_constant()
   * @generated
   */
  EReference gettff_constant_Param();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.tff_constant#getTop <em>Top</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Top</em>'.
   * @see it.unibz.inf.tptp.parser.tff_constant#getTop()
   * @see #gettff_constant()
   * @generated
   */
  EAttribute gettff_constant_Top();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.tff_constant#getBottom <em>Bottom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Bottom</em>'.
   * @see it.unibz.inf.tptp.parser.tff_constant#getBottom()
   * @see #gettff_constant()
   * @generated
   */
  EAttribute gettff_constant_Bottom();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.tff_predefined_function_2_args <em>tff predefined function 2args</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>tff predefined function 2args</em>'.
   * @see it.unibz.inf.tptp.parser.tff_predefined_function_2_args
   * @generated
   */
  EClass gettff_predefined_function_2_args();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.tff_predefined_function_2_args#getFunc <em>Func</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Func</em>'.
   * @see it.unibz.inf.tptp.parser.tff_predefined_function_2_args#getFunc()
   * @see #gettff_predefined_function_2_args()
   * @generated
   */
  EAttribute gettff_predefined_function_2_args_Func();

  /**
   * Returns the meta object for the containment reference list '{@link it.unibz.inf.tptp.parser.tff_predefined_function_2_args#getParam <em>Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Param</em>'.
   * @see it.unibz.inf.tptp.parser.tff_predefined_function_2_args#getParam()
   * @see #gettff_predefined_function_2_args()
   * @generated
   */
  EReference gettff_predefined_function_2_args_Param();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.tff_var <em>tff var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>tff var</em>'.
   * @see it.unibz.inf.tptp.parser.tff_var
   * @generated
   */
  EClass gettff_var();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.tff_var_declaration <em>tff var declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>tff var declaration</em>'.
   * @see it.unibz.inf.tptp.parser.tff_var_declaration
   * @generated
   */
  EClass gettff_var_declaration();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.tff_var_declaration#getVar <em>Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Var</em>'.
   * @see it.unibz.inf.tptp.parser.tff_var_declaration#getVar()
   * @see #gettff_var_declaration()
   * @generated
   */
  EReference gettff_var_declaration_Var();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.tff_var_declaration#getVartype <em>Vartype</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Vartype</em>'.
   * @see it.unibz.inf.tptp.parser.tff_var_declaration#getVartype()
   * @see #gettff_var_declaration()
   * @generated
   */
  EReference gettff_var_declaration_Vartype();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.tff_variable_list <em>tff variable list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>tff variable list</em>'.
   * @see it.unibz.inf.tptp.parser.tff_variable_list
   * @generated
   */
  EClass gettff_variable_list();

  /**
   * Returns the meta object for the containment reference list '{@link it.unibz.inf.tptp.parser.tff_variable_list#getParams <em>Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Params</em>'.
   * @see it.unibz.inf.tptp.parser.tff_variable_list#getParams()
   * @see #gettff_variable_list()
   * @generated
   */
  EReference gettff_variable_list_Params();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.cnf_input <em>cnf input</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>cnf input</em>'.
   * @see it.unibz.inf.tptp.parser.cnf_input
   * @generated
   */
  EClass getcnf_input();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.cnf_root <em>cnf root</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>cnf root</em>'.
   * @see it.unibz.inf.tptp.parser.cnf_root
   * @generated
   */
  EClass getcnf_root();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.cnf_root#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unibz.inf.tptp.parser.cnf_root#getName()
   * @see #getcnf_root()
   * @generated
   */
  EAttribute getcnf_root_Name();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.cnf_root#getFormula_role <em>Formula role</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Formula role</em>'.
   * @see it.unibz.inf.tptp.parser.cnf_root#getFormula_role()
   * @see #getcnf_root()
   * @generated
   */
  EAttribute getcnf_root_Formula_role();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.cnf_root#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see it.unibz.inf.tptp.parser.cnf_root#getExp()
   * @see #getcnf_root()
   * @generated
   */
  EReference getcnf_root_Exp();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.cnf_formula_type_definition <em>cnf formula type definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>cnf formula type definition</em>'.
   * @see it.unibz.inf.tptp.parser.cnf_formula_type_definition
   * @generated
   */
  EClass getcnf_formula_type_definition();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.cnf_formula_type_definition#getDisjunction <em>Disjunction</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Disjunction</em>'.
   * @see it.unibz.inf.tptp.parser.cnf_formula_type_definition#getDisjunction()
   * @see #getcnf_formula_type_definition()
   * @generated
   */
  EReference getcnf_formula_type_definition_Disjunction();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.cnf_or <em>cnf or</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>cnf or</em>'.
   * @see it.unibz.inf.tptp.parser.cnf_or
   * @generated
   */
  EClass getcnf_or();

  /**
   * Returns the meta object for the containment reference list '{@link it.unibz.inf.tptp.parser.cnf_or#getOr <em>Or</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Or</em>'.
   * @see it.unibz.inf.tptp.parser.cnf_or#getOr()
   * @see #getcnf_or()
   * @generated
   */
  EReference getcnf_or_Or();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.cnf_not <em>cnf not</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>cnf not</em>'.
   * @see it.unibz.inf.tptp.parser.cnf_not
   * @generated
   */
  EClass getcnf_not();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.cnf_not#isNegated <em>Negated</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Negated</em>'.
   * @see it.unibz.inf.tptp.parser.cnf_not#isNegated()
   * @see #getcnf_not()
   * @generated
   */
  EAttribute getcnf_not_Negated();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.cnf_not#getLiteral <em>Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Literal</em>'.
   * @see it.unibz.inf.tptp.parser.cnf_not#getLiteral()
   * @see #getcnf_not()
   * @generated
   */
  EReference getcnf_not_Literal();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.cnf_equality <em>cnf equality</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>cnf equality</em>'.
   * @see it.unibz.inf.tptp.parser.cnf_equality
   * @generated
   */
  EClass getcnf_equality();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.cnf_equality#getExpL <em>Exp L</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp L</em>'.
   * @see it.unibz.inf.tptp.parser.cnf_equality#getExpL()
   * @see #getcnf_equality()
   * @generated
   */
  EReference getcnf_equality_ExpL();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.cnf_equality#getEq <em>Eq</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Eq</em>'.
   * @see it.unibz.inf.tptp.parser.cnf_equality#getEq()
   * @see #getcnf_equality()
   * @generated
   */
  EAttribute getcnf_equality_Eq();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.cnf_equality#getExpR <em>Exp R</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp R</em>'.
   * @see it.unibz.inf.tptp.parser.cnf_equality#getExpR()
   * @see #getcnf_equality()
   * @generated
   */
  EReference getcnf_equality_ExpR();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.cnf_expression <em>cnf expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>cnf expression</em>'.
   * @see it.unibz.inf.tptp.parser.cnf_expression
   * @generated
   */
  EClass getcnf_expression();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.cnf_expression#getCnf_exp <em>Cnf exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Cnf exp</em>'.
   * @see it.unibz.inf.tptp.parser.cnf_expression#getCnf_exp()
   * @see #getcnf_expression()
   * @generated
   */
  EAttribute getcnf_expression_Cnf_exp();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.cnf_expression#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unibz.inf.tptp.parser.cnf_expression#getName()
   * @see #getcnf_expression()
   * @generated
   */
  EAttribute getcnf_expression_Name();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.cnf_constant <em>cnf constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>cnf constant</em>'.
   * @see it.unibz.inf.tptp.parser.cnf_constant
   * @generated
   */
  EClass getcnf_constant();

  /**
   * Returns the meta object for the containment reference list '{@link it.unibz.inf.tptp.parser.cnf_constant#getParam <em>Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Param</em>'.
   * @see it.unibz.inf.tptp.parser.cnf_constant#getParam()
   * @see #getcnf_constant()
   * @generated
   */
  EReference getcnf_constant_Param();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.cnf_var <em>cnf var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>cnf var</em>'.
   * @see it.unibz.inf.tptp.parser.cnf_var
   * @generated
   */
  EClass getcnf_var();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.thf_input <em>thf input</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>thf input</em>'.
   * @see it.unibz.inf.tptp.parser.thf_input
   * @generated
   */
  EClass getthf_input();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.thf_root <em>thf root</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>thf root</em>'.
   * @see it.unibz.inf.tptp.parser.thf_root
   * @generated
   */
  EClass getthf_root();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.thf_root#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unibz.inf.tptp.parser.thf_root#getName()
   * @see #getthf_root()
   * @generated
   */
  EAttribute getthf_root_Name();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.thf_root#getFormula_role <em>Formula role</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Formula role</em>'.
   * @see it.unibz.inf.tptp.parser.thf_root#getFormula_role()
   * @see #getthf_root()
   * @generated
   */
  EAttribute getthf_root_Formula_role();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.thf_root#getDef <em>Def</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Def</em>'.
   * @see it.unibz.inf.tptp.parser.thf_root#getDef()
   * @see #getthf_root()
   * @generated
   */
  EReference getthf_root_Def();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.thf_root#getThf_exp <em>Thf exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Thf exp</em>'.
   * @see it.unibz.inf.tptp.parser.thf_root#getThf_exp()
   * @see #getthf_root()
   * @generated
   */
  EReference getthf_root_Thf_exp();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.thf_formula_type_definition <em>thf formula type definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>thf formula type definition</em>'.
   * @see it.unibz.inf.tptp.parser.thf_formula_type_definition
   * @generated
   */
  EClass getthf_formula_type_definition();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.thf_formula_type_definition#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unibz.inf.tptp.parser.thf_formula_type_definition#getName()
   * @see #getthf_formula_type_definition()
   * @generated
   */
  EAttribute getthf_formula_type_definition_Name();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.thf_formula_type_definition#getExp <em>Exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Exp</em>'.
   * @see it.unibz.inf.tptp.parser.thf_formula_type_definition#getExp()
   * @see #getthf_formula_type_definition()
   * @generated
   */
  EReference getthf_formula_type_definition_Exp();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.thf_type_expression <em>thf type expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>thf type expression</em>'.
   * @see it.unibz.inf.tptp.parser.thf_type_expression
   * @generated
   */
  EClass getthf_type_expression();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.thf_type_atom <em>thf type atom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>thf type atom</em>'.
   * @see it.unibz.inf.tptp.parser.thf_type_atom
   * @generated
   */
  EClass getthf_type_atom();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.thf_type_constant <em>thf type constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>thf type constant</em>'.
   * @see it.unibz.inf.tptp.parser.thf_type_constant
   * @generated
   */
  EClass getthf_type_constant();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.thf_type_constant#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unibz.inf.tptp.parser.thf_type_constant#getName()
   * @see #getthf_type_constant()
   * @generated
   */
  EAttribute getthf_type_constant_Name();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.thf_expression <em>thf expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>thf expression</em>'.
   * @see it.unibz.inf.tptp.parser.thf_expression
   * @generated
   */
  EClass getthf_expression();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.thf_expression#getThf_atom <em>Thf atom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Thf atom</em>'.
   * @see it.unibz.inf.tptp.parser.thf_expression#getThf_atom()
   * @see #getthf_expression()
   * @generated
   */
  EReference getthf_expression_Thf_atom();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.thf_expression#isThf_negation <em>Thf negation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Thf negation</em>'.
   * @see it.unibz.inf.tptp.parser.thf_expression#isThf_negation()
   * @see #getthf_expression()
   * @generated
   */
  EAttribute getthf_expression_Thf_negation();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.thf_expression#getThf_exp <em>Thf exp</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Thf exp</em>'.
   * @see it.unibz.inf.tptp.parser.thf_expression#getThf_exp()
   * @see #getthf_expression()
   * @generated
   */
  EReference getthf_expression_Thf_exp();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.thf_expression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see it.unibz.inf.tptp.parser.thf_expression#getOp()
   * @see #getthf_expression()
   * @generated
   */
  EAttribute getthf_expression_Op();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.thf_atom <em>thf atom</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>thf atom</em>'.
   * @see it.unibz.inf.tptp.parser.thf_atom
   * @generated
   */
  EClass getthf_atom();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.thf_atom#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see it.unibz.inf.tptp.parser.thf_atom#getName()
   * @see #getthf_atom()
   * @generated
   */
  EAttribute getthf_atom_Name();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.thf_constant <em>thf constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>thf constant</em>'.
   * @see it.unibz.inf.tptp.parser.thf_constant
   * @generated
   */
  EClass getthf_constant();

  /**
   * Returns the meta object for the containment reference list '{@link it.unibz.inf.tptp.parser.thf_constant#getThf_param <em>Thf param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Thf param</em>'.
   * @see it.unibz.inf.tptp.parser.thf_constant#getThf_param()
   * @see #getthf_constant()
   * @generated
   */
  EReference getthf_constant_Thf_param();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.thf_var <em>thf var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>thf var</em>'.
   * @see it.unibz.inf.tptp.parser.thf_var
   * @generated
   */
  EClass getthf_var();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.thf_variable_list <em>thf variable list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>thf variable list</em>'.
   * @see it.unibz.inf.tptp.parser.thf_variable_list
   * @generated
   */
  EClass getthf_variable_list();

  /**
   * Returns the meta object for the containment reference list '{@link it.unibz.inf.tptp.parser.thf_variable_list#getParams <em>Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Params</em>'.
   * @see it.unibz.inf.tptp.parser.thf_variable_list#getParams()
   * @see #getthf_variable_list()
   * @generated
   */
  EReference getthf_variable_list_Params();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.thf_var_declaration <em>thf var declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>thf var declaration</em>'.
   * @see it.unibz.inf.tptp.parser.thf_var_declaration
   * @generated
   */
  EClass getthf_var_declaration();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.thf_var_declaration#getVar <em>Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Var</em>'.
   * @see it.unibz.inf.tptp.parser.thf_var_declaration#getVar()
   * @see #getthf_var_declaration()
   * @generated
   */
  EReference getthf_var_declaration_Var();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.thf_var_declaration#getVartype <em>Vartype</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Vartype</em>'.
   * @see it.unibz.inf.tptp.parser.thf_var_declaration#getVartype()
   * @see #getthf_var_declaration()
   * @generated
   */
  EReference getthf_var_declaration_Vartype();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.binary <em>binary</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>binary</em>'.
   * @see it.unibz.inf.tptp.parser.binary
   * @generated
   */
  EClass getbinary();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.binary#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see it.unibz.inf.tptp.parser.binary#getLeft()
   * @see #getbinary()
   * @generated
   */
  EReference getbinary_Left();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.binary#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see it.unibz.inf.tptp.parser.binary#getRight()
   * @see #getbinary()
   * @generated
   */
  EReference getbinary_Right();

  /**
   * Returns the meta object for class '{@link it.unibz.inf.tptp.parser.oper <em>oper</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>oper</em>'.
   * @see it.unibz.inf.tptp.parser.oper
   * @generated
   */
  EClass getoper();

  /**
   * Returns the meta object for the containment reference '{@link it.unibz.inf.tptp.parser.oper#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see it.unibz.inf.tptp.parser.oper#getLeft()
   * @see #getoper()
   * @generated
   */
  EReference getoper_Left();

  /**
   * Returns the meta object for the attribute '{@link it.unibz.inf.tptp.parser.oper#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see it.unibz.inf.tptp.parser.oper#getOp()
   * @see #getoper()
   * @generated
   */
  EAttribute getoper_Op();

  /**
   * Returns the meta object for the containment reference list '{@link it.unibz.inf.tptp.parser.oper#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Right</em>'.
   * @see it.unibz.inf.tptp.parser.oper#getRight()
   * @see #getoper()
   * @generated
   */
  EReference getoper_Right();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  ParserFactory getParserFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.ModelImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>TPTP input</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__TPTP_INPUT = eINSTANCE.getModel_TPTP_input();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.includeImpl <em>include</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.includeImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getinclude()
     * @generated
     */
    EClass INCLUDE = eINSTANCE.getinclude();

    /**
     * The meta object literal for the '<em><b>Path</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INCLUDE__PATH = eINSTANCE.getinclude_Path();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.fof_inputImpl <em>fof input</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.fof_inputImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getfof_input()
     * @generated
     */
    EClass FOF_INPUT = eINSTANCE.getfof_input();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.fof_rootImpl <em>fof root</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.fof_rootImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getfof_root()
     * @generated
     */
    EClass FOF_ROOT = eINSTANCE.getfof_root();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FOF_ROOT__NAME = eINSTANCE.getfof_root_Name();

    /**
     * The meta object literal for the '<em><b>Formula role</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FOF_ROOT__FORMULA_ROLE = eINSTANCE.getfof_root_Formula_role();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOF_ROOT__EXP = eINSTANCE.getfof_root_Exp();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.fof_expressionImpl <em>fof expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.fof_expressionImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getfof_expression()
     * @generated
     */
    EClass FOF_EXPRESSION = eINSTANCE.getfof_expression();

    /**
     * The meta object literal for the '<em><b>Fof atom</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOF_EXPRESSION__FOF_ATOM = eINSTANCE.getfof_expression_Fof_atom();

    /**
     * The meta object literal for the '<em><b>Fof negation</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FOF_EXPRESSION__FOF_NEGATION = eINSTANCE.getfof_expression_Fof_negation();

    /**
     * The meta object literal for the '<em><b>Fof exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOF_EXPRESSION__FOF_EXP = eINSTANCE.getfof_expression_Fof_exp();

    /**
     * The meta object literal for the '<em><b>Fof quantifier</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FOF_EXPRESSION__FOF_QUANTIFIER = eINSTANCE.getfof_expression_Fof_quantifier();

    /**
     * The meta object literal for the '<em><b>Fof param</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOF_EXPRESSION__FOF_PARAM = eINSTANCE.getfof_expression_Fof_param();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.fof_atomImpl <em>fof atom</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.fof_atomImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getfof_atom()
     * @generated
     */
    EClass FOF_ATOM = eINSTANCE.getfof_atom();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FOF_ATOM__NAME = eINSTANCE.getfof_atom_Name();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.fof_constantImpl <em>fof constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.fof_constantImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getfof_constant()
     * @generated
     */
    EClass FOF_CONSTANT = eINSTANCE.getfof_constant();

    /**
     * The meta object literal for the '<em><b>Fof param</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOF_CONSTANT__FOF_PARAM = eINSTANCE.getfof_constant_Fof_param();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.fof_varImpl <em>fof var</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.fof_varImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getfof_var()
     * @generated
     */
    EClass FOF_VAR = eINSTANCE.getfof_var();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.fof_variable_listImpl <em>fof variable list</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.fof_variable_listImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getfof_variable_list()
     * @generated
     */
    EClass FOF_VARIABLE_LIST = eINSTANCE.getfof_variable_list();

    /**
     * The meta object literal for the '<em><b>Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOF_VARIABLE_LIST__PARAMS = eINSTANCE.getfof_variable_list_Params();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.tff_inputImpl <em>tff input</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.tff_inputImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#gettff_input()
     * @generated
     */
    EClass TFF_INPUT = eINSTANCE.gettff_input();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.tff_rootImpl <em>tff root</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.tff_rootImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#gettff_root()
     * @generated
     */
    EClass TFF_ROOT = eINSTANCE.gettff_root();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TFF_ROOT__NAME = eINSTANCE.gettff_root_Name();

    /**
     * The meta object literal for the '<em><b>Formula role</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TFF_ROOT__FORMULA_ROLE = eINSTANCE.gettff_root_Formula_role();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TFF_ROOT__EXP = eINSTANCE.gettff_root_Exp();

    /**
     * The meta object literal for the '<em><b>Def</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TFF_ROOT__DEF = eINSTANCE.gettff_root_Def();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.tff_formula_type_definitionImpl <em>tff formula type definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.tff_formula_type_definitionImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#gettff_formula_type_definition()
     * @generated
     */
    EClass TFF_FORMULA_TYPE_DEFINITION = eINSTANCE.gettff_formula_type_definition();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TFF_FORMULA_TYPE_DEFINITION__NAME = eINSTANCE.gettff_formula_type_definition_Name();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TFF_FORMULA_TYPE_DEFINITION__EXP = eINSTANCE.gettff_formula_type_definition_Exp();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.tff_type_expressionImpl <em>tff type expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.tff_type_expressionImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#gettff_type_expression()
     * @generated
     */
    EClass TFF_TYPE_EXPRESSION = eINSTANCE.gettff_type_expression();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.tff_type_atomImpl <em>tff type atom</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.tff_type_atomImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#gettff_type_atom()
     * @generated
     */
    EClass TFF_TYPE_ATOM = eINSTANCE.gettff_type_atom();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TFF_TYPE_ATOM__NAME = eINSTANCE.gettff_type_atom_Name();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.tff_type_constantImpl <em>tff type constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.tff_type_constantImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#gettff_type_constant()
     * @generated
     */
    EClass TFF_TYPE_CONSTANT = eINSTANCE.gettff_type_constant();

    /**
     * The meta object literal for the '<em><b>Param</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TFF_TYPE_CONSTANT__PARAM = eINSTANCE.gettff_type_constant_Param();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.tff_expressionImpl <em>tff expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.tff_expressionImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#gettff_expression()
     * @generated
     */
    EClass TFF_EXPRESSION = eINSTANCE.gettff_expression();

    /**
     * The meta object literal for the '<em><b>Atom</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TFF_EXPRESSION__ATOM = eINSTANCE.gettff_expression_Atom();

    /**
     * The meta object literal for the '<em><b>Negation</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TFF_EXPRESSION__NEGATION = eINSTANCE.gettff_expression_Negation();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TFF_EXPRESSION__EXP = eINSTANCE.gettff_expression_Exp();

    /**
     * The meta object literal for the '<em><b>Quantifier</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TFF_EXPRESSION__QUANTIFIER = eINSTANCE.gettff_expression_Quantifier();

    /**
     * The meta object literal for the '<em><b>Param</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TFF_EXPRESSION__PARAM = eINSTANCE.gettff_expression_Param();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.tff_atomImpl <em>tff atom</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.tff_atomImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#gettff_atom()
     * @generated
     */
    EClass TFF_ATOM = eINSTANCE.gettff_atom();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.tff_constantImpl <em>tff constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.tff_constantImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#gettff_constant()
     * @generated
     */
    EClass TFF_CONSTANT = eINSTANCE.gettff_constant();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TFF_CONSTANT__NAME = eINSTANCE.gettff_constant_Name();

    /**
     * The meta object literal for the '<em><b>Param</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TFF_CONSTANT__PARAM = eINSTANCE.gettff_constant_Param();

    /**
     * The meta object literal for the '<em><b>Top</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TFF_CONSTANT__TOP = eINSTANCE.gettff_constant_Top();

    /**
     * The meta object literal for the '<em><b>Bottom</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TFF_CONSTANT__BOTTOM = eINSTANCE.gettff_constant_Bottom();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.tff_predefined_function_2_argsImpl <em>tff predefined function 2args</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.tff_predefined_function_2_argsImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#gettff_predefined_function_2_args()
     * @generated
     */
    EClass TFF_PREDEFINED_FUNCTION_2ARGS = eINSTANCE.gettff_predefined_function_2_args();

    /**
     * The meta object literal for the '<em><b>Func</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TFF_PREDEFINED_FUNCTION_2ARGS__FUNC = eINSTANCE.gettff_predefined_function_2_args_Func();

    /**
     * The meta object literal for the '<em><b>Param</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TFF_PREDEFINED_FUNCTION_2ARGS__PARAM = eINSTANCE.gettff_predefined_function_2_args_Param();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.tff_varImpl <em>tff var</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.tff_varImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#gettff_var()
     * @generated
     */
    EClass TFF_VAR = eINSTANCE.gettff_var();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.tff_var_declarationImpl <em>tff var declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.tff_var_declarationImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#gettff_var_declaration()
     * @generated
     */
    EClass TFF_VAR_DECLARATION = eINSTANCE.gettff_var_declaration();

    /**
     * The meta object literal for the '<em><b>Var</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TFF_VAR_DECLARATION__VAR = eINSTANCE.gettff_var_declaration_Var();

    /**
     * The meta object literal for the '<em><b>Vartype</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TFF_VAR_DECLARATION__VARTYPE = eINSTANCE.gettff_var_declaration_Vartype();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.tff_variable_listImpl <em>tff variable list</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.tff_variable_listImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#gettff_variable_list()
     * @generated
     */
    EClass TFF_VARIABLE_LIST = eINSTANCE.gettff_variable_list();

    /**
     * The meta object literal for the '<em><b>Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TFF_VARIABLE_LIST__PARAMS = eINSTANCE.gettff_variable_list_Params();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.cnf_inputImpl <em>cnf input</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.cnf_inputImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getcnf_input()
     * @generated
     */
    EClass CNF_INPUT = eINSTANCE.getcnf_input();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.cnf_rootImpl <em>cnf root</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.cnf_rootImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getcnf_root()
     * @generated
     */
    EClass CNF_ROOT = eINSTANCE.getcnf_root();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CNF_ROOT__NAME = eINSTANCE.getcnf_root_Name();

    /**
     * The meta object literal for the '<em><b>Formula role</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CNF_ROOT__FORMULA_ROLE = eINSTANCE.getcnf_root_Formula_role();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CNF_ROOT__EXP = eINSTANCE.getcnf_root_Exp();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.cnf_formula_type_definitionImpl <em>cnf formula type definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.cnf_formula_type_definitionImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getcnf_formula_type_definition()
     * @generated
     */
    EClass CNF_FORMULA_TYPE_DEFINITION = eINSTANCE.getcnf_formula_type_definition();

    /**
     * The meta object literal for the '<em><b>Disjunction</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CNF_FORMULA_TYPE_DEFINITION__DISJUNCTION = eINSTANCE.getcnf_formula_type_definition_Disjunction();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.cnf_orImpl <em>cnf or</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.cnf_orImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getcnf_or()
     * @generated
     */
    EClass CNF_OR = eINSTANCE.getcnf_or();

    /**
     * The meta object literal for the '<em><b>Or</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CNF_OR__OR = eINSTANCE.getcnf_or_Or();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.cnf_notImpl <em>cnf not</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.cnf_notImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getcnf_not()
     * @generated
     */
    EClass CNF_NOT = eINSTANCE.getcnf_not();

    /**
     * The meta object literal for the '<em><b>Negated</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CNF_NOT__NEGATED = eINSTANCE.getcnf_not_Negated();

    /**
     * The meta object literal for the '<em><b>Literal</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CNF_NOT__LITERAL = eINSTANCE.getcnf_not_Literal();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.cnf_equalityImpl <em>cnf equality</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.cnf_equalityImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getcnf_equality()
     * @generated
     */
    EClass CNF_EQUALITY = eINSTANCE.getcnf_equality();

    /**
     * The meta object literal for the '<em><b>Exp L</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CNF_EQUALITY__EXP_L = eINSTANCE.getcnf_equality_ExpL();

    /**
     * The meta object literal for the '<em><b>Eq</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CNF_EQUALITY__EQ = eINSTANCE.getcnf_equality_Eq();

    /**
     * The meta object literal for the '<em><b>Exp R</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CNF_EQUALITY__EXP_R = eINSTANCE.getcnf_equality_ExpR();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.cnf_expressionImpl <em>cnf expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.cnf_expressionImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getcnf_expression()
     * @generated
     */
    EClass CNF_EXPRESSION = eINSTANCE.getcnf_expression();

    /**
     * The meta object literal for the '<em><b>Cnf exp</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CNF_EXPRESSION__CNF_EXP = eINSTANCE.getcnf_expression_Cnf_exp();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CNF_EXPRESSION__NAME = eINSTANCE.getcnf_expression_Name();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.cnf_constantImpl <em>cnf constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.cnf_constantImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getcnf_constant()
     * @generated
     */
    EClass CNF_CONSTANT = eINSTANCE.getcnf_constant();

    /**
     * The meta object literal for the '<em><b>Param</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CNF_CONSTANT__PARAM = eINSTANCE.getcnf_constant_Param();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.cnf_varImpl <em>cnf var</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.cnf_varImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getcnf_var()
     * @generated
     */
    EClass CNF_VAR = eINSTANCE.getcnf_var();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.thf_inputImpl <em>thf input</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.thf_inputImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getthf_input()
     * @generated
     */
    EClass THF_INPUT = eINSTANCE.getthf_input();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.thf_rootImpl <em>thf root</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.thf_rootImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getthf_root()
     * @generated
     */
    EClass THF_ROOT = eINSTANCE.getthf_root();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute THF_ROOT__NAME = eINSTANCE.getthf_root_Name();

    /**
     * The meta object literal for the '<em><b>Formula role</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute THF_ROOT__FORMULA_ROLE = eINSTANCE.getthf_root_Formula_role();

    /**
     * The meta object literal for the '<em><b>Def</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference THF_ROOT__DEF = eINSTANCE.getthf_root_Def();

    /**
     * The meta object literal for the '<em><b>Thf exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference THF_ROOT__THF_EXP = eINSTANCE.getthf_root_Thf_exp();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.thf_formula_type_definitionImpl <em>thf formula type definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.thf_formula_type_definitionImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getthf_formula_type_definition()
     * @generated
     */
    EClass THF_FORMULA_TYPE_DEFINITION = eINSTANCE.getthf_formula_type_definition();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute THF_FORMULA_TYPE_DEFINITION__NAME = eINSTANCE.getthf_formula_type_definition_Name();

    /**
     * The meta object literal for the '<em><b>Exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference THF_FORMULA_TYPE_DEFINITION__EXP = eINSTANCE.getthf_formula_type_definition_Exp();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.thf_type_expressionImpl <em>thf type expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.thf_type_expressionImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getthf_type_expression()
     * @generated
     */
    EClass THF_TYPE_EXPRESSION = eINSTANCE.getthf_type_expression();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.thf_type_atomImpl <em>thf type atom</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.thf_type_atomImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getthf_type_atom()
     * @generated
     */
    EClass THF_TYPE_ATOM = eINSTANCE.getthf_type_atom();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.thf_type_constantImpl <em>thf type constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.thf_type_constantImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getthf_type_constant()
     * @generated
     */
    EClass THF_TYPE_CONSTANT = eINSTANCE.getthf_type_constant();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute THF_TYPE_CONSTANT__NAME = eINSTANCE.getthf_type_constant_Name();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.thf_expressionImpl <em>thf expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.thf_expressionImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getthf_expression()
     * @generated
     */
    EClass THF_EXPRESSION = eINSTANCE.getthf_expression();

    /**
     * The meta object literal for the '<em><b>Thf atom</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference THF_EXPRESSION__THF_ATOM = eINSTANCE.getthf_expression_Thf_atom();

    /**
     * The meta object literal for the '<em><b>Thf negation</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute THF_EXPRESSION__THF_NEGATION = eINSTANCE.getthf_expression_Thf_negation();

    /**
     * The meta object literal for the '<em><b>Thf exp</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference THF_EXPRESSION__THF_EXP = eINSTANCE.getthf_expression_Thf_exp();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute THF_EXPRESSION__OP = eINSTANCE.getthf_expression_Op();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.thf_atomImpl <em>thf atom</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.thf_atomImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getthf_atom()
     * @generated
     */
    EClass THF_ATOM = eINSTANCE.getthf_atom();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute THF_ATOM__NAME = eINSTANCE.getthf_atom_Name();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.thf_constantImpl <em>thf constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.thf_constantImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getthf_constant()
     * @generated
     */
    EClass THF_CONSTANT = eINSTANCE.getthf_constant();

    /**
     * The meta object literal for the '<em><b>Thf param</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference THF_CONSTANT__THF_PARAM = eINSTANCE.getthf_constant_Thf_param();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.thf_varImpl <em>thf var</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.thf_varImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getthf_var()
     * @generated
     */
    EClass THF_VAR = eINSTANCE.getthf_var();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.thf_variable_listImpl <em>thf variable list</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.thf_variable_listImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getthf_variable_list()
     * @generated
     */
    EClass THF_VARIABLE_LIST = eINSTANCE.getthf_variable_list();

    /**
     * The meta object literal for the '<em><b>Params</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference THF_VARIABLE_LIST__PARAMS = eINSTANCE.getthf_variable_list_Params();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.thf_var_declarationImpl <em>thf var declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.thf_var_declarationImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getthf_var_declaration()
     * @generated
     */
    EClass THF_VAR_DECLARATION = eINSTANCE.getthf_var_declaration();

    /**
     * The meta object literal for the '<em><b>Var</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference THF_VAR_DECLARATION__VAR = eINSTANCE.getthf_var_declaration_Var();

    /**
     * The meta object literal for the '<em><b>Vartype</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference THF_VAR_DECLARATION__VARTYPE = eINSTANCE.getthf_var_declaration_Vartype();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.binaryImpl <em>binary</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.binaryImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getbinary()
     * @generated
     */
    EClass BINARY = eINSTANCE.getbinary();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BINARY__LEFT = eINSTANCE.getbinary_Left();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BINARY__RIGHT = eINSTANCE.getbinary_Right();

    /**
     * The meta object literal for the '{@link it.unibz.inf.tptp.parser.impl.operImpl <em>oper</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see it.unibz.inf.tptp.parser.impl.operImpl
     * @see it.unibz.inf.tptp.parser.impl.ParserPackageImpl#getoper()
     * @generated
     */
    EClass OPER = eINSTANCE.getoper();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPER__LEFT = eINSTANCE.getoper_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPER__OP = eINSTANCE.getoper_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OPER__RIGHT = eINSTANCE.getoper_Right();

  }

} //ParserPackage
